//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DSEDiagnosticAnalytics.Core.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "15.9.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("4")]
        public double LogFileInfoAnalysisContinousEventInDays {
            get {
                return ((double)(this["LogFileInfoAnalysisContinousEventInDays"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("15")]
        public double LogFileInfoAnalysisGapTriggerInMins {
            get {
                return ((double)(this["LogFileInfoAnalysisGapTriggerInMins"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@".\AggregateGroups.json,.\Json\AggregateGroups.json,[cpld]\Json\AggregateGroups.json,[cpld]\AggregateGroups.json,[ApplicationRunTimeDirectory]\Json\AggregateGroups.json,[ApplicationRunTimeDirectory]\AggregateGroups.json,.\Json\AggregateGroups.json,.\AggregateGroups.json")]
        public string AggregateGroups {
            get {
                return ((string)(this["AggregateGroups"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("00:05:00")]
        public global::System.TimeSpan GCTimeFrameDetection {
            get {
                return ((global::System.TimeSpan)(this["GCTimeFrameDetection"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("150")]
        public double GCBackToBackToleranceMS {
            get {
                return ((double)(this["GCBackToBackToleranceMS"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1.25")]
        public double GCTimeFrameDetectionThreholdMin {
            get {
                return ((double)(this["GCTimeFrameDetectionThreholdMin"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("00:30:00")]
        public global::System.TimeSpan LogAggregationPeriod {
            get {
                return ((global::System.TimeSpan)(this["LogAggregationPeriod"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("5000")]
        public int LogAggregationNodeStatMbrLimit {
            get {
                return ((int)(this["LogAggregationNodeStatMbrLimit"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0.02")]
        public decimal LogAggregationNodeStatMbrLimitTakeNItemsPercent {
            get {
                return ((decimal)(this["LogAggregationNodeStatMbrLimitTakeNItemsPercent"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@".\AggregateGroups.json,.\Json\AttributeThresholds.json,[cpld]\Json\AttributeThresholds.json,[cpld]\AttributeThresholds.json,[ApplicationRunTimeDirectory]\Json\AttributeThresholds.json,[ApplicationRunTimeDirectory]\AttributeThresholds.json,.\Json\AttributeThresholds.json,.\AttributeThresholds.json")]
        public string AttributeThresholds {
            get {
                return ((string)(this["AttributeThresholds"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("(NativeIoException)|((Closed)?ChannelException)|(TimeoutException)")]
        public string NetworkExceptinMatchRegEx {
            get {
                return ((string)(this["NetworkExceptinMatchRegEx"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("SSTable Overall Percent")]
        public string SSTableOverallPercent {
            get {
                return ((string)(this["SSTableOverallPercent"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Tombstone Overall Percent")]
        public string TombstoneOverallPercent {
            get {
                return ((string)(this["TombstoneOverallPercent"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Read Overall Percent")]
        public string ReadOverallPercent {
            get {
                return ((string)(this["ReadOverallPercent"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Write Overall Percent")]
        public string WriteOverallPercent {
            get {
                return ((string)(this["WriteOverallPercent"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Keys Overall Percent")]
        public string KeysOverallPercent {
            get {
                return ((string)(this["KeysOverallPercent"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("solr index percent storage size ")]
        public string SolrIndexStorageSizePercent {
            get {
                return ((string)(this["SolrIndexStorageSizePercent"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Space used (total)")]
        public string TotalStorage {
            get {
                return ((string)(this["TotalStorage"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Local read count")]
        public string LocalReadCount {
            get {
                return ((string)(this["LocalReadCount"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Local write count")]
        public string LocalWriteCount {
            get {
                return ((string)(this["LocalWriteCount"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("SSTables in each level")]
        public string LCSLevels {
            get {
                return ((string)(this["LCSLevels"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Tombstone/Live Percent")]
        public string TombstoneLiveCellRatio {
            get {
                return ((string)(this["TombstoneLiveCellRatio"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Local Read Percentage")]
        public string LocalReadPercent {
            get {
                return ((string)(this["LocalReadPercent"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Local Write Percentage")]
        public string LocalWritePercent {
            get {
                return ((string)(this["LocalWritePercent"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("LCS Level BuildUp Ratio")]
        public string LCSBackRatio {
            get {
                return ((string)(this["LCSBackRatio"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("SSTables in each split level")]
        public string LCSSplitLevels {
            get {
                return ((string)(this["LCSSplitLevels"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("LCS Nbr Split Levels")]
        public string LCSNbrSplitLevels {
            get {
                return ((string)(this["LCSNbrSplitLevels"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("solr index storage size")]
        public string SolrIndexStorageSize {
            get {
                return ((string)(this["SolrIndexStorageSize"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Partition large")]
        public string PartitionLarge {
            get {
                return ((string)(this["PartitionLarge"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Tombstones Read")]
        public string TombstonesRead {
            get {
                return ((string)(this["TombstonesRead"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Compaction Insufficient Space")]
        public string CompactionInsufficientSpace {
            get {
                return ((string)(this["CompactionInsufficientSpace"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Row large")]
        public string RowLarge {
            get {
                return ((string)(this["RowLarge"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Tombstones Live Cells Read")]
        public string TombstoneLiveCell {
            get {
                return ((string)(this["TombstoneLiveCell"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Local read latency")]
        public string LocalReadLatency {
            get {
                return ((string)(this["LocalReadLatency"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Local write latency")]
        public string LocalWriteLatency {
            get {
                return ((string)(this["LocalWriteLatency"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Average tombstones per slice (last five minutes)")]
        public string AvgTombstonesSlice {
            get {
                return ((string)(this["AvgTombstonesSlice"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Maximum tombstones per slice (last five minutes)")]
        public string MaxTombstonesSlice {
            get {
                return ((string)(this["MaxTombstonesSlice"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Compacted partition minimum bytes")]
        public string CompactedPartitionMin {
            get {
                return ((string)(this["CompactedPartitionMin"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Compacted partition maximum bytes")]
        public string CompactedPartitionMax {
            get {
                return ((string)(this["CompactedPartitionMax"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Compacted partition mean bytes")]
        public string CompactedPartitionAvg {
            get {
                return ((string)(this["CompactedPartitionAvg"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Average live cells per slice (last five minutes)")]
        public string AvgLiveCellsReadSlice {
            get {
                return ((string)(this["AvgLiveCellsReadSlice"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Maximum live cells per slice (last five minutes)")]
        public string MaxLiveCellsReadSlice {
            get {
                return ((string)(this["MaxLiveCellsReadSlice"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("SSTable count")]
        public string SSTableCount {
            get {
                return ((string)(this["SSTableCount"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Read Count")]
        public string ReadCount {
            get {
                return ((string)(this["ReadCount"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Write Count")]
        public string WriteCount {
            get {
                return ((string)(this["WriteCount"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Local write count")]
        public string LocalWriteCout {
            get {
                return ((string)(this["LocalWriteCout"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"
              <ArrayOfString xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
                <string>Number of keys (estimate)</string>
                <string>Number of partitions (estimate)</string>
              </ArrayOfString>
            ")]
        public string NbrPartitionKeys {
            get {
                return ((string)(this["NbrPartitionKeys"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"
              <ArrayOfString xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
                <string>Partition large</string>
                <string>Compacted partition maximum bytes</string>
                <string>Row large</string>
              </ArrayOfString>
            ")]
        public string PartitionRowLarge {
            get {
                return ((string)(this["PartitionRowLarge"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Common Partition Keys")]
        public string CommonPartitionKeys {
            get {
                return ((string)(this["CommonPartitionKeys"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("size")]
        public string LogLargePartition {
            get {
                return ((string)(this["LogLargePartition"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("tombstonecells")]
        public string LogTombstones {
            get {
                return ((string)(this["LogTombstones"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("livecells")]
        public string LogLiveCells {
            get {
                return ((string)(this["LogLiveCells"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("spacerequired")]
        public string LogInsufficientSpace {
            get {
                return ((string)(this["LogInsufficientSpace"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Insufficient Space")]
        public string LogInsufficientSpaceSubClass {
            get {
                return ((string)(this["LogInsufficientSpaceSubClass"]));
            }
        }
    }
}
