//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DSEDiagnosticConsoleApplication.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "15.9.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("[Personal]\\DSEData")]
        public string DiagnosticPath {
            get {
                return ((string)(this["DiagnosticPath"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("OpsCtrDiagStruct")]
        public string DiagFolderStruct {
            get {
                return ((string)(this["DiagFolderStruct"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string ExcelFilePath {
            get {
                return ((string)(this["ExcelFilePath"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("^(?<STARTTS>[0-9 \\-:./+]+)?\\s*(?<STARTTZ>[A-Z0-9_/]+)?\\s*,?\\s*(?<ENDTS>[0-9 \\-:./" +
            "+]+)?\\s*(?<ENDTZ>[A-Z0-9_/]+)?$")]
        public string CLParserLogTimeRangeRegEx {
            get {
                return ((string)(this["CLParserLogTimeRangeRegEx"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("168")]
        public int OnlyIncludeXHrsofLogsFromDiagCaptureTime {
            get {
                return ((int)(this["OnlyIncludeXHrsofLogsFromDiagCaptureTime"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(".\\dseHealthAssessment4CTemplate.xlsm")]
        public string ExcelFileTemplatePath {
            get {
                return ((string)(this["ExcelFileTemplatePath"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("{0}\\{1}{4}-{2:yyMMddHHmmss}-{3}{5}")]
        public string ExcelFileNameGeneratedStringFormat {
            get {
                return ((string)(this["ExcelFileNameGeneratedStringFormat"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("AllFilesLogs")]
        public string DefaultProfile {
            get {
                return ((string)(this["DefaultProfile"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("[\r\n{\"ProfileName\":\"AllFilesLogs\",\"Log4NetParser\":\".\\\\Json\\\\Log4NetParser.json\",\"P" +
            "rocessFileMappings\":\".\\\\Json\\\\ProcessFileMappings.json\",\"EnableVirtualMemory\":fa" +
            "lse, \"DefaultLogLevelHandling\":\"Warning, Error, Fatal, Exception\", \"DebugLogProc" +
            "essingTypes\":\"OnlyFlushCompactionMsgs\"},\r\n{\"ProfileName\":\"NoLogs\",\"Log4NetParser" +
            "\":\".\\\\Json\\\\Log4NetParser.json\",\"ProcessFileMappings\":\".\\\\Json\\\\ProcessFileMappi" +
            "ngsNoLogs.json\",\"EnableVirtualMemory\":false, \"DefaultLogLevelHandling\":null, \"De" +
            "bugLogProcessingTypes\":\"Disabled\"},\r\n{\"ProfileName\":\"Validate\",\"Log4NetParser\":\"" +
            ".\\\\Json\\\\Log4NetParserValidateLogs.json\",\"ProcessFileMappings\":\".\\\\Json\\\\Process" +
            "FileMappingsValidate.json\",\"EnableVirtualMemory\":false, \"DefaultLogLevelHandling" +
            "\":\"Fatal, Exception\", \"DebugLogProcessingTypes\":\"OnlyLogDateRange\"},\r\n{\"ProfileN" +
            "ame\":\"Decompression\",\"Log4NetParser\":\".\\\\Json\\\\Log4NetParserValidateLogs.json\",\"" +
            "ProcessFileMappings\":\".\\\\Json\\\\Unzip-ProcessFileMappings.json\",\"EnableVirtualMem" +
            "ory\":false, \"DefaultLogLevelHandling\":\"Fatal, Exception\", \"DebugLogProcessingTyp" +
            "es\":\"Disabled\"},\r\n{\"ProfileName\":\"CreateOpsCenterStruct\",\"Log4NetParser\":\".\\\\Jso" +
            "n\\\\Log4NetParserValidateLogs.json\",\"ProcessFileMappings\":\".\\\\Json\\\\ProcessFileMa" +
            "ppings-CreateOpsCenterCopy.json\",\"EnableVirtualMemory\":false, \"DefaultLogLevelHa" +
            "ndling\":\"Fatal, Exception\", \"DebugLogProcessingTypes\":\"Disabled\"},\r\n{\"ProfileNam" +
            "e\":\"AllNoFlushComp\",\"Log4NetParser\":\".\\\\Json\\\\Log4NetParserLogsNoFlushComp.json\"" +
            ",\"ProcessFileMappings\":\".\\\\Json\\\\ProcessFileMappingsNoDebugLogs.json\",\"EnableVir" +
            "tualMemory\":false, \"DefaultLogLevelHandling\":\"Warning, Error, Fatal, Exception\"," +
            " \"DebugLogProcessingTypes\":\"Disable\"},\r\n{\"ProfileName\":\"ValidateWLogs\",\"Log4NetP" +
            "arser\":\".\\\\Json\\\\Log4NetParserLogsNoFlushCompGC.json\",\"ProcessFileMappings\":\".\\\\" +
            "Json\\\\ProcessFileMappingsValidate.json\",\"EnableVirtualMemory\":false, \"DefaultLog" +
            "LevelHandling\":\"Fatal, Exception\", \"DebugLogProcessingTypes\":\"OnlyLogDateRange\"}" +
            ",\r\n{\"ProfileName\":\"AllNoRepairs\",\"Log4NetParser\":\".\\\\Json\\\\Log4NetParserNoRepair" +
            "s.json\",\"ProcessFileMappings\":\".\\\\Json\\\\ProcessFileMappings.json\",\"EnableVirtual" +
            "Memory\":false, \"DefaultLogLevelHandling\":\"Warning, Error, Fatal, Exception\", \"De" +
            "bugLogProcessingTypes\":\"OnlyFlushCompactionMsgs\"}\r\n]")]
        public string Profiles {
            get {
                return ((string)(this["Profiles"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string IgnoreLogParsingTagEvents {
            get {
                return ((string)(this["IgnoreLogParsingTagEvents"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(".\\*\\*.log.*")]
        public string AppendFilePathForAddLogArgument {
            get {
                return ((string)(this["AppendFilePathForAddLogArgument"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool TraceExceptions {
            get {
                return ((bool)(this["TraceExceptions"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<ArrayOfString xmlns:xsi=\"http://www.w3." +
            "org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <s" +
            "tring>OpsCenter</string>\r\n  <string>system_traces</string>\r\n</ArrayOfString>")]
        public global::System.Collections.Specialized.StringCollection WhiteListKeyspaceInWS {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["WhiteListKeyspaceInWS"]));
            }
        }
    }
}
