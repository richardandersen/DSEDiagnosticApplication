/*
  
  /// Used to uniquely identify this parser block.
  /// If a session, the begin session decimal should be zero and the session items should be an increment of the begin session. Example: Begin - 4.0, Item - 4.1.
  /// </summary>
  public decimal TagId;

  public string Description;

  /// <summary>
  /// If a session item this should be the session begin blokck's TagId.
  /// </summary>
  public decimal? SessionBeginTagId = null;

  /// <summary>
  /// If null any DSE version will match this mappings.
  /// If defined, any DSE version that is equal to or greater than this version will match this mapping.
  /// </summary>
  /// <example>
  /// Match Versions:
  ///     4.7.0
  ///     4.7.5
  ///     4.8.0
  ///     4.8.5
  ///     5.0.0
  /// DSE Version 4.8.12 -> 4.8.5
  ///             4.8.4  -> 4.8.0
  ///             4.8.0  -> 4.8.0
  /// </example>
  public Version MatchVersion { get; set; }

  /// <summary>
  /// RegEx used to match the log line's level. e.g., Debug, Info, Warn, Error, Fatal
  /// </summary>
  public RegExParseString LevelMatch { get; set; }

  /// <summary>
  /// Log line: INFO  [STREAM-INIT-/10.198.59.26:57796] 2017-01-16 13:34:17,782  StreamResultFuture.java:109 - [Stream #8cf4e000-dc33-11e6-acce-516f8727826c ID#0] Creating new streaming plan for Repair
  /// RegEx used to match the log line's Thread Id value. e.g.,  'STREAM-IN-/10.198.59.26'
  /// </summary>
  public RegExParseString ThreadIdMatch { get; set; }

  /// <summary>
  /// Log line: INFO  [STREAM-INIT-/10.198.59.26:57796] 2017-01-16 13:34:17,782  StreamResultFuture.java:109 - [Stream #8cf4e000-dc33-11e6-acce-516f8727826c ID#0] Creating new streaming plan for Repair
  /// RegEx used to match the log line's file name value. e.g.,  'StreamResultFuture.java'
  /// </summary>
  public RegExParseString FileNameMatch { get; set; }

  /// <summary>
  /// Log line: INFO  [STREAM-INIT-/10.198.59.26:57796] 2017-01-16 13:34:17,782  StreamResultFuture.java:109 - [Stream #8cf4e000-dc33-11e6-acce-516f8727826c ID#0] Creating new streaming plan for Repair
  /// RegEx used to match the log line's file line position within the file name. e.g., 109
  /// </summary>
  public RegExParseString FileLineMatch { get; set; }

  /// <summary>
  /// Log line: INFO  [STREAM-INIT-/10.198.59.26:57796] 2017-01-16 13:34:17,782  StreamResultFuture.java:109 - [Stream #8cf4e000-dc33-11e6-acce-516f8727826c ID#0] Creating new streaming plan for Repair
  /// RegEx used to match the log line's message value. e.g., '[Stream #8cf4e000-dc33-11e6-acce-516f8727826c ID#0] Creating new streaming plan for Repair'
  /// </summary>
  public RegExParseString MessageMatch { get; set; }

  /// <summary>
  /// A RegEx that is used splits the log message into different components used to populate the LogCassandraEvent's LogProperties member property dictionary.
  /// The key is the RegEx named capture group or the capture group position. The dictionary value is the Captured group's value that is converted to the proper type.
  /// If named capture group is a unit of measure (not a date or time frame), the UOM can be defined by placing type after the name separated by an underscore.
  /// e.g., "(?<mygroupname_mb_sec>.+)" where the property key is "mygroupname" and the group's UOM type is a megabyte per second.
  /// If separated by two underscores, the separated value should be an already defined property name where that UOM would be used.
  /// e.g., "(?<myothername__mygroupname>.+)" where the property key is "myothername" and the group's UOM type is based on the property "mygroupname" (i.e., megabyte per second).
  ///
  /// There are special group names. They are:
  ///     "SUBCLASS"                                -- this will map the capture group's value to property "SubClass" of LogCassandraEvent class
  ///     "ID"                                      -- this will map the capture group's value to property "Id" of LogCassandraEvent class. It must be a valid GUID.
  ///     "DURATION_xxx" or "DURATION"    -- this will map the capture group's value to property "Duration" of LogCassandraEvent class
  ///                                                             "xxx" is the time unit. If not provided the time unit must be part of the capture (e.g., "10 ms")
  ///     "EVENTDURATIONDATETIME"                   -- this will map the capture group's value to property "EventTimeDuration" and calaculates the "Duration" of the LogCassandraEvent class
  ///                                                             The value must be valid date-time syntax
  ///     "KEYSPACE"                                -- this will map the capture group's value to property "Keyspace" of the LogCassandraEvent class
  ///                                                             This should be considered the "primary" keyspace for the event.
  ///     "DDLITEMNAME"                             -- this will map the capture group's value to property "DDLItems" of the LogCassandraEvent class.
  ///                                                             This can be table, view, or index qualifier with optional keyspace qualifier. The separator can be a period or slash.
  ///                                                             This should be considered the "primary" DDL item for the event.
  ///     "DDLSCHEMAID"                             -- this will map the capture group's value to property "DDLItems" of the LogCassandraEvent class, if found.
  ///                                                             This is the GUID of the schema.
  ///                                                             This should be considered the "primary" DDL item for the event.
  ///     "TABLEVIEWNAME"                           -- Similar to DDLITEMNAME except that only a table or view name is defined. e.g., tablea.indexa DDLITEMNAME would be "indexa" but TABLEVIEWNAME would be "tablea"
  ///                                                             If TABLEVIEWNAME is not found DDLITEMNAME is used.
  ///     "SOLRINDEXNAME"                           -- Translate a Solr index name into a quified DDL name. e.g., coafstatim_application_appownrtxt_index => coafstatim.application_appownrtxt_index
  ///     "SSTABLEPATH"                             -- this will be used to obtain the keyspace and DDL item plus map to the capture group's value to property "SSTables" of the LogCassandraEvent class
  ///                                                             This should be considered the "primary" keyspace and DDL item for the event. This will overide the KEYSPACE and DDLITEMNAME for primary. If this is not the case use SSTABLEPATHS.
  ///     "NODE"                                    -- An IP Adress (can be IP4 or IP6) or a host name.
  ///     "KEYSPACES"                               -- A single or list of keyspaces (see KEYSPACE above)
  ///                                                             This is either a repeating capture group or a set of capture groups with the same name.
  ///     "DDLITEMNAMES"                            -- A single or list of DDL items (see DDLITEMNAME above)
  ///                                                             This is either a repeating capture group or a set of capture groups with the same name.
  ///     "SSTABLEPATHS"                            -- A single or list of sstable pathes (see SSTABLEPATHS above)
  ///                                                             This is either a repeating capture group or a set of capture groups with the same name.
  ///     "NODES"                                   -- A single or a list of nodes (see NODE above)
  ///                                                             This is either a repeating capture group or a set of capture groups with the same name.
  ///     "TOKENRANGE"                              -- A single pair (e.g., "(8464140199242376099,8468771495322313740]") or a list of tokens (e.g., "(8464140199242376099,8468771495322313740],(8501968907842620341,8530644509697221859]")
  ///                                                             This is either a repeating capture group or a set of capture groups with the same name.
  ///     "TOKENSTART" or "TOKENEND"      -- A single token (e.g., "8464140199242376099") or a list of tokens (e.g., "8464140199242376099,8468771495322313740,8501968907842620341,8530644509697221859")
  ///                                                             This is either a repeating capture group or a set of capture groups with the same name.
  ///     "TOKENSTART" or "TOKENEND"      -- A single token (e.g., "8464140199242376099") or a list of tokens (e.g., "8464140199242376099,8468771495322313740,8501968907842620341,8530644509697221859")
  ///                                                             This is either a repeating capture group or a set of capture groups with the same name.
  ///     "KEY" or "VALUE"                -- Defines a Key-Value pair where the key is the key into the LogProperties property of the LogCassandraEvent class.
  ///                                                             The KEY and VALUE capture groups can be anywhere but are processed in order (i.e., fist KEY matches the first VALUE). These can be used in a repeating capture group or a set of capture groups.
  ///     "KEYITEM" and "ITEM"            -- Defines a Key and Value List where the key is the key into the LogProperties property of the LogCassandraEvent class and each ITEM group's value is inserted into a list.
  ///     "KEYITEM" and "ITEM#"           -- Defines a Key and Value List where the key is the key into the LogProperties property of the LogCassandraEvent class and each ITEM group's value is inserted into a sublist which is inserted into a list assocated with the key.
  ///                                                             where # is the item number into the sublist.
  ///     "KEYITEM#" and "ITEM#-*"        -- Defines multiple Keys and Value List where the key is the key into the LogProperties property of the LogCassandraEvent class and each ITEM group's value is inserted into a sublist which is inserted into a list assocated with the key.
  ///                                                             where # is the key number that matches item numbers. * is the item number into the sublist.
  /// </summary>
  /// <remarks>
  /// A collection of values can be defined by using a repeating capture group or a set of capture groups with the same capture group name.
  /// A RegEx examples:
  ///     RegEx: ^Compacting\s+\[(?:SSTableReader\(path=(?<SSTABLES>\'[a-z0-9._@\-/]+\')\s*\)\s*\,?\s*)+\]$
  ///     Returns a named capture group "SSTABLES" with a list of sstables:
  ///<code>
  ///         '/data/cassandra/data/usprodofrs/newoffer_3_2_10-70a332308e9a11e6953741bf7da4d7d7/usprodofrs-newoffer_3_2_10-ka-459576-Data.db'
  ///         '/data/cassandra/data/usprodofrs/newoffer_3_2_10-70a332308e9a11e6953741bf7da4d7d7/usprodofrs-newoffer_3_2_10-ka-459599-Data.db'
  ///         '/data/cassandra/data/usprodofrs/newoffer_3_2_10-70a332308e9a11e6953741bf7da4d7d7/usprodofrs-newoffer_3_2_10-ka-459573-Data.db'
  ///         '/data/cassandra/data/usprodofrs/newoffer_3_2_10-70a332308e9a11e6953741bf7da4d7d7/usprodofrs-newoffer_3_2_10-ka-459574-Data.db'
  ///         '/data/cassandra/data/usprodofrs/newoffer_3_2_10-70a332308e9a11e6953741bf7da4d7d7/usprodofrs-newoffer_3_2_10-ka-459590-Data.db'
  ///         '/data/cassandra/data/usprodofrs/newoffer_3_2_10-70a332308e9a11e6953741bf7da4d7d7/usprodofrs-newoffer_3_2_10-ka-459587-Data.db'
  ///         '/data/cassandra/data/usprodofrs/newoffer_3_2_10-70a332308e9a11e6953741bf7da4d7d7/usprodofrs-newoffer_3_2_10-ka-459559-Data.db'
  ///         '/data/cassandra/data/usprodofrs/newoffer_3_2_10-70a332308e9a11e6953741bf7da4d7d7/usprodofrs-newoffer_3_2_10-ka-459560-Data.db'
  ///         '/data/cassandra/data/usprodofrs/newoffer_3_2_10-70a332308e9a11e6953741bf7da4d7d7/usprodofrs-newoffer_3_2_10-ka-459558-Data.db'
  ///         '/data/cassandra/data/usprodofrs/newoffer_3_2_10-70a332308e9a11e6953741bf7da4d7d7/usprodofrs-newoffer_3_2_10-ka-459557-Data.db'
  ///         '/data/cassandra/data/usprodofrs/newoffer_3_2_10-70a332308e9a11e6953741bf7da4d7d7/usprodofrs-newoffer_3_2_10-ka-459567-Data.db'
  ///         '/data/cassandra/data/usprodofrs/newoffer_3_2_10-70a332308e9a11e6953741bf7da4d7d7/usprodofrs-newoffer_3_2_10-ka-459568-Data.db'
  ///         '/data/cassandra/data/usprodofrs/newoffer_3_2_10-70a332308e9a11e6953741bf7da4d7d7/usprodofrs-newoffer_3_2_10-ka-459566-Data.db'
  ///         '/data/cassandra/data/usprodofrs/newoffer_3_2_10-70a332308e9a11e6953741bf7da4d7d7/usprodofrs-newoffer_3_2_10-ka-459563-Data.db'
  ///</code>
  ///
  ///     RegEx: ^Compacting\s+\[SSTableReader\(path=(?<SSTABLES>\'[a-z0-9._@\-/]+\')\s*\)\s*\,\s*SSTableReader\(path=(?<SSTABLES>\'[a-z0-9._@\-/]+\')\s*\)\s*\,\s*(?:SSTableReader\(path=(?<SSTABLES>\'[a-z0-9._@\-/]+\')\s*\)\s*\,?\s*)+\]$
  ///     This RegEx string will product the same result as above even though three separate capture groups with the same name (SSTABLE) are defined.
  /// </remarks>
  public RegExParseString ParseMessage { get; set; }

  /// <summary>
  /// A RegEx that is used splits the log threadid into different components used to populate the LogCassandraEvent's LogProperties member property dictionary.
  /// The key is the RegEx named capture group or the capture group position. The dictionary value is the Captured group's value that is converted to the proper type.
  /// If named capture group is a unit of measure (not a date or time frame), the UOM can be defined by placing type after the name separated by an underscore.
  /// e.g., "(?<mygroupname_mb_sec>.+)" where the property key is "mygroupname" and the group's UOM type is a megabyte per second.
  ///
  /// There are special group names. They are:
  /// <see cref="ParseMessage"/>
  /// </summary>
  public RegExParseString ParseThreadId { get; set; }

  public EventTypes EventType { get; set; }

    [Flags]
    public enum EventTypes
    {
        Unkown = 0,
        /// <summary>
        /// Only one occurrence like an exception, etc.
        /// </summary>
        SingleInstance = 0x0001,
        SessionElement = 0x0002,
        /// <summary>
        /// A Session log item that is part of group of items that make up a session (e.g., compaction).
        /// This log item is not the start or end of this session.
        /// This log entry will use the associated SessionBegins log id.
        /// If the start is not associated for this item it will be marked as orphaned.
        /// </summary>
        SessionItem = SessionElement | 0x0004,
        /// <summary>
        /// A Session log item that is part of group of items that make up a session (e.g., compaction).
        /// This log entry marks the beginning (start) of the session and is tracked. All entries between SessionBegin and SessionEnd are considered children of this entry.
        /// </summary>
        SessionBegin = SessionItem | 0x0008,
        /// <summary>
        /// A Session log item that is part of group of items that make up a session (e.g., compaction).
        /// This log entry marks the end of the session.
        /// </summary>
        SessionEnd = SessionItem | 0x0010,
        /// <summary>
        /// A special option used to determined if the log entry already has an associated SessionBegin.
        /// If the entry does not, it will be marked as a SessionBegin, otherwise it will be marked as SessionItem.
        /// </summary>
        /// <seealso cref="SessionBegin"/>
        /// <seealso cref="SessionItem"/>
        SessionBeginOrItem = SessionBegin | 0x0020,
        /// <summary>
        /// If not within a session the log entry will be ignored
        /// </summary>
        SessionIgnore = SessionElement | 0x0100,
        /// <summary>
        /// Defines a session based on the ending event's duration. A Session Begin is generated based on this event's timestamp minus the duration.
        /// </summary>
        SessionDefinedByDuration = SessionEnd | 0x0200,
        /// <summary>
        ///  Statistical data that is typically aggregated over some time period (e.g., node uptime, Log Period, etc.)
        /// </summary>
        AggregateData = 0x1000,
        /// <summary>
        ///  Statistical data that is typically derived by this application or another module (not from nodetool or dsetool)
        /// </summary>
        AggregateDataDerived = AggregateData | 0x2000,
        /// <summary>
        ///  Statistical data that is typically derived by a DSE/C* tool like nodetool or dsetool
        /// </summary>
        AggregateDataTool = AggregateData | 0x4000
    }
  
  public EventClasses EventClass { get; set; }

    [Flags]
    public enum EventClasses
    {
        Unknown = 0,
        Information = 0x0001,
        Warning = 0x0002,
        Error = 0x0004,
        Exception = 0x0008,
        Fatal = 0x0010,
        Compaction = 0x0020,
        AntiCompaction = 0x0040,
        MemtableFlush = 0x0080,
        GC = 0x0100,
        Pause = 0x0200,
        Repair = 0x0400,
        Drops = 0x0800,
        Performance = 0x1000,
        Stats = 0x2000,
        Orphaned = 0x4000,
        HintHandOff = 0x8000,
        DataCenter = 0x10000,
        Node = 0x20000,
        Keyspace = 0x40000,
        TableViewIndex = 0x80000,
        Config = 0x100000,
        Detection = 0x200000,
        GCStats = GC | Stats,
        NodeStats = Node | Stats,
        KeyspaceStats = Keyspace | Stats,
        TableViewIndexStats = TableViewIndex | Stats,
        KeyspaceTableViewIndexStats = Keyspace | TableViewIndexStats,
        PerformanceStats = Performance | Stats,
        NodeDetection = Node | Detection,
        StatusTypes = Information | Warning | Error | Exception | Fatal | Orphaned
    }

  /// <summary>
  /// If the running count is equal to this value all log events for this instance are ignored. For a Session item this must be defined at the SessionBegin EventType.
  /// </summary>
  public long MaxNumberOfEvents { get; set; } = -1;

  /// <summary>
  /// If the running count for this node is equal to this value all log events for this instance are ignored. For a Session item this must be defined at the SessionBegin EventType.
  /// </summary>
  public long MaxNumberOfEventsPerNode { get; set; } = -1;

  public long RunningCount = 0;

  /// <summary>
  /// If true, the event is ignored and not processed.
  /// </summary>
  public bool IgnoreEvent { get; set; }
        
  /// <summary>
  /// e.g., Hint, Tombstone, etc. or null
  /// This takes the same values as <see cref="SessionKey"/>
  /// Callers should call the <see cref="DetermineSubClass(Cluster, INode, IKeyspace, IDictionary{string, object}, ILogMessage, IList{LogCassandraEvent}, IList{Tuple{string, List{LogCassandraEvent}}})"/> method to obtain the correct value.
  /// </summary>
  public string SubClass { get; set; }

  public DSEInfo.InstanceTypes Product { get; set; }

    [Flags]
		public enum InstanceTypes
		{
			Unkown = 0,
      Cassandra = 0x0001,
      Search = 0x0002,
      Analytics = 0x0004,
      TT = 0x0008,
      JT = 0x0010,
      Graph = 0x0020,
      AdvancedReplication = 0x0040,
      Hadoop = 0x0080,
      CFS = 0x0100,
      Analytics_TT = Analytics | TT,
      Analytics_JT = Analytics | JT,
      Cassandra_JT = Cassandra | JT
     }
        
  /// <summary>
  /// This value is used to "tie" together timespan sessions between log lines/events. For beginning timespan events this is used to generate the Session Key.
  /// For middle/ending timespan events that is used to determine the TimespanBegin LogCassandraEvent instance so that the same event Id and other attributes are shared with the related sessions.
  ///
  /// If a keyword is used, the string value is used to create the session key or determine the LogCassandraEvent instance in the open sessions list. Note that the events must be of the same Event Class.
  ///     Keywords can be:
  ///         ThreadId
  ///         ThreadName
  ///         FileName
  ///         FileNameLine (file name and line number)
  ///         EventClass
  ///         SubClass
  ///         SessionIdKey
  ///         Product
  ///         A capture group name (e.g., SSTABLEPATH) as defined in the <see cref="ParseMessage"/> and <see cref="ParseThreadId"/> properties
  ///         SSTABLEPATH=>DDLITEMNAME -- obtains the DDL Item name from the SSTable Path string
  ///         SSTABLEPATH=>KEYSPACE -- obtains the keyspace name from the SSTable Path string
  ///         SSTABLEPATH=>KEYSPACEDDLNAME -- obtains the keyspace and DDL names from the SSTable Path string
  ///         SSTABLEPATH=>TABLEVIEWNAME -- obtains the table or view name from the SSTable Path string
  ///         SSTABLEPATH=>KEYSPACETABLEVIEWNAME -- obtains the keyspace and table/view name from the SSTable Path string
  /// --or--
  ///     A C# expression that returns a string that represents the session key. This string should be able to be generated for any Timespan sessions and will be used to find the LogCassandraEvent instance when the log line is not a TimespanBegin.
  ///             This session key is item1 in the Tuple in the openTimeSpanSessions local variable.
  ///     This express must start with a '{' and end with a '}'
  ///     It must follow C# syntax. It has the following locally defined variables:
  ///         <code>clogLineTypeParser</code> -- A CLogLineTypeParser instance which is an instance of this information
  ///         <code>cluster</code>            -- A Cluster instance assocated with this log parsing file
  ///         <code>node</code>               -- An INode instance assocated with this log parsing file
  ///         <code>keyspace</code>           -- Current IKeyspace instance assocated with this log line. Could be null.
  ///         <code>logLineProperties</code>  -- A IDictionary<string, object> instance where the key is the capture group's name and the assocated value
  ///         <code>logLineMessage</code>     -- An ILogMessage instance that consistence of this parsed log line
  /// --or--
  ///     A static value that must be surrounded in quotes.
  /// --or--
  ///     A set of keywords seperated by a '+' where the values are concatenated.
  ///
  /// </summary>
  /// <remarks>
  /// If values are concatenated, the ordering is important. Values that are always present (e.g., ThreadId) should be first and values that may not be present or optional should be later (e.g., DDLITEMNAME).
  ///
  /// Below is an example where the SessionKey would be the "ThreadId" since this is used to identify a compacation timespan session for all log lines.
  /// Log line 1 will define the session key with "CompactionExecutor:734". The remaining log logs will use the ThreadId to get the beginning event.
  /// <code>
  /// INFO  [CompactionExecutor:734] 2017-02-11 23:58:47,586  CompactionTask.java:141 - Compacting [SSTableReader(path='/data/cassandra/data/usprodsec/session_3-ca531e218ed211e6ab872748a53d9d02/usprodsec-session_3-ka-78735-Data.db'), SSTableReader(path='/data/cassandra/data/usprodsec/session_3-ca531e218ed211e6ab872748a53d9d02/usprodsec-session_3-ka-78732-Data.db'), SSTableReader(path='/data/cassandra/data/usprodsec/session_3-ca531e218ed211e6ab872748a53d9d02/usprodsec-session_3-ka-78734-Data.db'), SSTableReader(path='/data/cassandra/data/usprodsec/session_3-ca531e218ed211e6ab872748a53d9d02/usprodsec-session_3-ka-78733-Data.db')]
  /// INFO  [CompactionExecutor:734] 2017-02-11 23:58:47,668  ColumnFamilyStore.java:905 - Enqueuing flush of compactions_in_progress: 164 (0%) on-heap, 0 (0%) off-heap
  /// INFO  [CompactionExecutor:734] 2017-02-11 23:58:47,715  CompactionTask.java:274 - Compacted 4 sstables to[/ data / cassandra / data / usprodsec / session_3 - ca531e218ed211e6ab872748a53d9d02 / usprodsec - session_3 - ka - 78741,].  3,541 bytes to 1,079 (~30% of original) in 128ms = 0.008039MB/s.  35 total partitions merged to 12.  Partition merge counts were {1:1, 3:10, 4:1, }
  /// </code>
  ///
  /// Below is an example where a capture group could be used (i.e., DDLITEMNAMES/ColumnFamily Name) as the SessionKey.
  /// Log line 1 will define the session key with "product_3_2_0" (i.e., DDLITEMNAMES). The remaining log logs will use the DDLITEMNAMES to get the beginning event.
  /// <code>
  /// INFO  [SlabPoolCleaner] 2017-02-12 00:09:07,183  ColumnFamilyStore.java:1211 - Flushing largest CFS(Keyspace='usprodrp', ColumnFamily='product_3_2_0') to free up room. Used total: 0.20/0.00, live: 0.20/0.00, flushing: 0.00/0.00, this: 0.07/0.07
  /// INFO [SlabPoolCleaner] 2017-02-12 00:09:07,183  ColumnFamilyStore.java:905 - Enqueuing flush of product_3_2_0: 146449687 (7%) on-heap, 0 (0%) off-heap
  /// INFO [MemtableFlushWriter:3768] 2017-02-12 00:09:07,183  Memtable.java:347 - Writing Memtable-product_3_2_0@1706942500(20.930MiB serialized bytes, 856689 ops, 7%/0% of on/off-heap limit)
  /// INFO [MemtableFlushWriter:3768] 2017-02-12 00:09:07,384  Memtable.java:382 - Completed flushing /data/cassandra/data/usprodrp/product_3_2_0-ebf4f370e6a511e6a5513b7f00393f0e/usprodrp-product_3_2_0-tmp-ka-1740-Data.db (3.681MiB) for commitlog position ReplayPosition(segmentId= 1486705770182, position= 19949509)
  /// </code>
  /// </remarks>
  public string SessionKey { get; set; }

  public SessionKeyActions SessionKeyAction { get; set; }
        
    public enum SessionKeyActions
    {
        Auto = 0,
        Add = 1,
        Read = 2,
        Delete = 3,
        ReadRemove = 4
    }

  /// <summary>
  /// Alternative Value used to lookup the session.
  /// This takes the same values as <see cref="SessionKey"/>
  /// Callers should call the <see cref="DetermineSessionLookup(Cluster, INode, IKeyspace, IDictionary{string, object}, ILogMessage)"/> method to obtain the correct value.
  /// </summary>
  public string SessionLookup { get; set; }
        
  public SessionLookupActions SessionLookupAction { get; set; }

    [Flags]
    public enum SessionLookupActions
    {
        Default = 0,
        Label = 0x0001,
        /// <summary>
        /// If defined, the Session Lookup value is used to perform the action (e.g., read, remove, define, etc.) on the Session Key cache (If Label or Stack defined and value not found in session; lookup action cache is used)
        /// </summary>
        Session = 0x0002,
        Read = 0x0004,
        Define = 0x0008,
        Delete = 0x0010,
        /// <summary>
        /// When defining a label instead of creating it, it is pushed onto a stack that upon delete it is popped off.
        /// </summary>
        Stack = 0x0020,
        /// <summary>
        /// If defined the lookup value is used as the primary Session tie-out Id. If not defined and Session Key defined, the session key is used.
        /// </summary>
        TieOutId = 0x0040,
        /// <summary>
        /// If defined the lookup value is appended before the session id (if defined) when a tie-out id is created.
        /// Typically this is done to allow one session end item to match multiple session begins.
        /// </summary>
        AppendTieOutId = 0x0080, 
        ReadSession = Read | Session,
        ReadLabel = Read | Label,
        DefineLabel = Define | Label,
        DeleteLabel = Delete | Label,
        ReadRemoveLabel = Read | Delete | Label,
        ReadRemoveSession = Read | Delete | Session,
        DefineSession = Define | Session,
        DeleteSession = Delete | Session
    }

  /// <summary>
  /// Determines how parent sessions are added to the current instance's Parent property, if any.
  /// </summary>
  public SessionParentActions SessionParentAction { get; set; } = SessionParentActions.Default;

    public enum SessionParentActions
    {
        /// <summary>
        /// Current session and it's parents are added
        /// </summary>
        Default = 0,
        /// <summary>
        /// Current session is not added as a parent. Note that the current session's parents are added, if any. 
        /// </summary>
        IgnoreCurrent = 1,
        /// <summary>
        /// Current session's parents are not added
        /// </summary>
        IgnoreParents = 2
    }
  
  public string[] Examples;

*/
/*
  RegEx Library
  Examples: "^Compacting\\s+\\[(?:SSTableReader\\s*\\(\\s*path\\s*=\\s*'\\s*(?$<SSTABLEPATHS>)\\s*'\\s*\\),?\\s*)+\\s*\\]$"
    In this case "<SSTABLEPATHS>[a-z0-9\\-_@#/.,\\ +%]*" is replaced where "$<SSTABLEPATHS>" is position
      Result: "^Compacting\\s+\\[(?:SSTableReader\\s*\\(\\s*path\\s*=\\s*'\\s*(?<SSTABLEPATHS>[a-z0-9\\-_@#/.,\\ +%]*)\\s*'\\s*\\),?\\s*)+\\s*\\]$"

    If "<SSTABLEPATHS>" is not wanted use this syntax of "$<!SSTABLEPATHS>". This yeilds "[a-z0-9\\-_@#/.,\\ +%]*
      Result: "^Compacting\\s+\\[(?:SSTableReader\\s*\\(\\s*path\\s*=\\s*'\\s*(?[a-z0-9\\-_@#/.,\\ +%]*)\\s*'\\s*\\),?\\s*)+\\s*\\]$"

  [
{"Key":"ID","Value":"[0-9a-f\\-]+"},
{"Key":"DURATION","Value":"[0-9,.]+"},
{"Key":"DURATIONwUOM","Value":"(?<DURATION>[0-9,.]+\\s*\\w+)"},
{"Key":"KEYSPACE","Value":"[a-z0-9'\\-_$%+=!?<>^*&@]+"},
{"Key":"DDLITEMNAME","Value":"[a-z0-9'\\-_$%+=!?<>^*&@/.]+"},
{"Key":"DDLITEMNAMES","Value":"[a-z0-9'\\-_$%+=!?<>^*&@/. ,]*"},
{"Key":"TABLEVIEWNAME","Value":"[a-z0-9'\\-_$%+=!?<>^*&@/.]+"},
{"Key":"DDLSCHEMAID","Value":"[0-9a-f\\-]+"},
{"Key":"SSTABLEPATH","Value":"[a-z0-9\\-_@#/.\\ +%]+"},
{"Key":"SSTABLEPATHS","Value":"[a-z0-9\\-_@#/.,\\ +%]*"},
{"Key":"NODE","Value":"[^ ]+"},
{"Key":"SOLRINDEXNAME","Value":"[a-z0-9'\\-_$%+=!?<>^*&@/.]+"},
{"Key":"CQLSELECT","Value":"select\\s+(?<querycols>.+)\\s+from\\s+(?$<TABLEVIEWNAME>)(?:\\s+where\\s+(?<whereclause>.+?))??(?:\\s+order\\s+by\\s+(?<orderbycols>.+?))??(?:\\s+limit\\s+(?<limit>\\d+?))??(?<allowfiltering>\\s+allow\\s+filtering)??"}
]
*/
{
  "LogClass": "file_cassandra_log4net",
  "Parsers": [
    {
      "Description": "Compaction (finish)",
      "TagId": 1.1,
      "SessionBeginTagId": 1.0,
      "MatchVersion": null,
      "LevelMatch": {
        "RegExStrings": [
          "INFO|DEBUG"
        ]
      },
      "ThreadIdMatch": null,
      "FileNameMatch": {
        "RegExStrings": [
          "^CompactionTask.java$"
        ]
      },
      "FileLineMatch": null,
      "MessageMatch": {
        "RegExStrings": [
          "^Compacted\\s\\d+\\ssstables\\s"
        ]
      },
      "ParseMessage": {
        "RegExStrings": [
          "^Compacted\\s(?<sstables>\\d+)\\ssstables\\s+to\\s*\\[(?$<SSTABLEPATHS>)\\]\\.\\s+(?<size>[0-9.,]+\\s+[a-z]+)\\s+to\\s+(?<newsize__size>[0-9.,]+)\\s\\([0-9a-z\\ %~,.]+\\)+\\sin\\s+(?$<DURATION>\\s*[a-z/]+)\\s*\\=\\s*(?<iorate>[0-9.,]+\\s*[a-z/]+)\\.\\s+(?<totalpartions>[0-9,]+)\\s+total\\s+partitions\\s+merged\\s+to\\s+(?<mergedpartitions>[0-9,]+)\\.\\s+Partition\\s+merge\\s+counts\\s+were\\s+\\{(?<mergecounts>[0-9:\\ ,]+)\\s*\\}$"
        ]
      },
      "ParseThreadId": null,
      "EventType": "SessionEnd",
      "EventClass": "Compaction",
      "SubClass": null,
      "Product": "Cassandra",
      "SessionKey": "ThreadId + SSTABLEPATH=>DDLITEMNAME",
      "SessionKeyAction": "ReadRemove",
      "SessionLookup": "'CompactionExecutor' + SSTABLEPATH=>DDLITEMNAME",
      "SessionLookupAction": "DeleteLabel",
      "Examples": [
        "INFO  [CompactionExecutor:3211] 2017-01-16 13:33:04,872  CompactionTask.java:141 - Compacting [SSTableReader(path='/var/lib/cassandra/data/system/compactions_in_progress-55080ab05d9c388690a4acb25fe1f77b/system-compactions_in_progress-ka-90586-Data.db'), SSTableReader(path='/var/lib/cassandra/data/system/compactions_in_progress-55080ab05d9c388690a4acb25fe1f77b/system-compactions_in_progress-ka-90588-Data.db'), SSTableReader(path='/var/lib/cassandra/data/system/compactions_in_progress-55080ab05d9c388690a4acb25fe1f77b/system-compactions_in_progress-ka-90587-Data.db'), SSTableReader(path='/var/lib/cassandra/data/system/compactions_in_progress-55080ab05d9c388690a4acb25fe1f77b/system-compactions_in_progress-ka-90589-Data.db')]",
        "==> INFO  [CompactionExecutor:3211] 2017-01-16 13:33:06,380  CompactionTask.java:274 - Compacted 4 sstables to [/var/lib/cassandra/data/system/compactions_in_progress-55080ab05d9c388690a4acb25fe1f77b/system-compactions_in_progress-ka-90590,].  590 bytes to 196 (~33% of original) in 15ms = 0.012461MB/s.  3 total partitions merged to 2.  Partition merge counts were {1:1, 2:1, }",
        "INFO  [CompactionExecutor:734] 2017-02-11 23:58:47,586  CompactionTask.java:141 - Compacting [SSTableReader(path='/data/cassandra/data/usprodsec/session_3-ca531e218ed211e6ab872748a53d9d02/usprodsec-session_3-ka-78735-Data.db'), SSTableReader(path='/data/cassandra/data/usprodsec/session_3-ca531e218ed211e6ab872748a53d9d02/usprodsec-session_3-ka-78732-Data.db'), SSTableReader(path='/data/cassandra/data/usprodsec/session_3-ca531e218ed211e6ab872748a53d9d02/usprodsec-session_3-ka-78734-Data.db'), SSTableReader(path='/data/cassandra/data/usprodsec/session_3-ca531e218ed211e6ab872748a53d9d02/usprodsec-session_3-ka-78733-Data.db')]",
        "INFO  [CompactionExecutor:734] 2017-02-11 23:58:47,715  CompactionTask.java:274 - Compacted 4 sstables to[/ data / cassandra / data / usprodsec / session_3 - ca531e218ed211e6ab872748a53d9d02 / usprodsec - session_3 - ka - 78741,].  3,541 bytes to 1,079 (~30% of original) in 128ms = 0.008039MB/s.  35 total partitions merged to 12.  Partition merge counts were {1:1, 3:10, 4:1, }"
      ]
    },
    {
      "Description": "Compaction (begin)",
      "TagId": 1.0,
      "MatchVersion": null,
      "LevelMatch": {
        "RegExStrings": [
          "INFO|DEBUG"
        ]
      },
      "ThreadIdMatch": null,
      "FileNameMatch": {
        "RegExStrings": [
          "^CompactionTask.java$"
        ]
      },
      "FileLineMatch": null,
      "MessageMatch": {
        "RegExStrings": [
          "^Compacting\\s+\\["
        ]
      },
      "ParseMessage": {
        "RegExStrings": [
          "^Compacting\\s+\\[(?:SSTableReader\\s*\\(\\s*path\\s*=\\s*'\\s*(?$<SSTABLEPATHS>)\\s*'\\s*\\),?\\s*)+\\s*\\]$"
        ]
      },
      "ParseThreadId": null,
      "EventType": "SessionBegin",
      "EventClass": "Compaction",
      "SubClass": null,
      "Product": "Cassandra",
      "SessionKey": "ThreadId + SSTABLEPATH=>DDLITEMNAME",
      "SessionKeyAction": "Add",
      "SessionLookup": "'CompactionExecutor' + SSTABLEPATH=>DDLITEMNAME",
      "SessionLookupAction": "DefineLabel",
      "Examples": [
        "==> INFO  [CompactionExecutor:3211] 2017-01-16 13:33:04,872  CompactionTask.java:141 - Compacting [SSTableReader(path='/var/lib/cassandra/data/system/compactions_in_progress-55080ab05d9c388690a4acb25fe1f77b/system-compactions_in_progress-ka-90586-Data.db'), SSTableReader(path='/var/lib/cassandra/data/system/compactions_in_progress-55080ab05d9c388690a4acb25fe1f77b/system-compactions_in_progress-ka-90588-Data.db'), SSTableReader(path='/var/lib/cassandra/data/system/compactions_in_progress-55080ab05d9c388690a4acb25fe1f77b/system-compactions_in_progress-ka-90587-Data.db'), SSTableReader(path='/var/lib/cassandra/data/system/compactions_in_progress-55080ab05d9c388690a4acb25fe1f77b/system-compactions_in_progress-ka-90589-Data.db')]",
        "INFO  [CompactionExecutor:3211] 2017-01-16 13:33:06,380  CompactionTask.java:274 - Compacted 4 sstables to [/var/lib/cassandra/data/system/compactions_in_progress-55080ab05d9c388690a4acb25fe1f77b/system-compactions_in_progress-ka-90590,].  590 bytes to 196 (~33% of original) in 15ms = 0.012461MB/s.  3 total partitions merged to 2.  Partition merge counts were {1:1, 2:1, }",
        "INFO  [CompactionExecutor:734] 2017-02-11 23:58:47,586  CompactionTask.java:141 - Compacting [SSTableReader(path='/data/cassandra/data/usprodsec/session_3-ca531e218ed211e6ab872748a53d9d02/usprodsec-session_3-ka-78735-Data.db'), SSTableReader(path='/data/cassandra/data/usprodsec/session_3-ca531e218ed211e6ab872748a53d9d02/usprodsec-session_3-ka-78732-Data.db'), SSTableReader(path='/data/cassandra/data/usprodsec/session_3-ca531e218ed211e6ab872748a53d9d02/usprodsec-session_3-ka-78734-Data.db'), SSTableReader(path='/data/cassandra/data/usprodsec/session_3-ca531e218ed211e6ab872748a53d9d02/usprodsec-session_3-ka-78733-Data.db')]",
        "INFO  [CompactionExecutor:734] 2017-02-11 23:58:47,715  CompactionTask.java:274 - Compacted 4 sstables to[/ data / cassandra / data / usprodsec / session_3 - ca531e218ed211e6ab872748a53d9d02 / usprodsec - session_3 - ka - 78741,].  3,541 bytes to 1,079 (~30% of original) in 128ms = 0.008039MB/s.  35 total partitions merged to 12.  Partition merge counts were {1:1, 3:10, 4:1, }"
      ]
    },
    {
      "Description": "Flushing (begin;type)",
      "TagId": 2.0,
      "MatchVersion": null,
      "LevelMatch": {
        "RegExStrings": [
          "INFO|DEBUG"
        ]
      },
      "ThreadIdMatch": null,
      "FileNameMatch": {
        "RegExStrings": [
          "^ColumnFamilyStore.java$"
        ]
      },
      "FileLineMatch": null,
      "MessageMatch": {
        "RegExStrings": [
          "^Flushing\\s+largest\\s+\\w+\\s*\\("
        ]
      },
      "ParseMessage": {
        "RegExStrings": [
          "^Flushing\\s+largest\\s+\\w+\\s*\\(\\s*Keyspace\\s*=\\s*(?$<KEYSPACE>),\\s+\\w+\\s*=\\s*(?$<DDLITEMNAME>)\\)\\s+to\\s+(?<reason>[^.]+)\\.\\s+Used\\s+total:\\s+(?<totalthresholdonheap>[0-9,.]+)\\s*/\\s*(?<totalthresholdoffheap>[0-9.,]+)\\s*,\\s*live:\\s+(?<livethresholdonheap>[0-9,.]+)\\s*/\\s*(?<livethresholdoffheap>[0-9,.]+)\\s*,\\s+flushing:\\s+(?<flushthresholdonheap>[0-9,.]+)\\s*/\\s*(?<flushthresholdoffheap>[0-9.,]+)\\s*,\\s+this:\\s+(?<thisthresholdonheap>[0-9,.]+)\\s*/\\s*(?<thisthresholdoffheap>[0-9,.]+)$"
        ]
      },
      "ParseThreadId": null,
      "EventType": "SessionBegin",
      "EventClass": "MemtableFlush",
      "SubClass": "ThreadName",
      "Product": "Cassandra",
      "SessionKey": "ThreadId + DDLITEMNAME",
      "SessionKeyAction": "Add",
      "SessionLookup": null,
      "Examples": [ "=> INFO  [SlabPoolCleaner] 2017-01-16 13:51:50,636  ColumnFamilyStore.java:1211 - Flushing largest CFS(Keyspace='OpsCenter', ColumnFamily='rollup_state') to free up room. Used total: 0.33/0.00, live: 0.33/0.00, flushing: 0.00/0.00, this: 0.14/0.14", "INFO  [SlabPoolCleaner] 2017-01-16 13:51:50,636  ColumnFamilyStore.java:905 - Enqueuing flush of rollup_state: 221288084 (14%) on-heap, 0 (0%) off-heap", "INFO  [MemtableFlushWriter:8021] 2017-01-16 13:51:50,637  Memtable.java:347 - Writing Memtable-rollup_state@1750499154(8.948MiB serialized bytes, 3237264 ops, 14%/0% of on/off-heap limit)", "INFO  [MemtableFlushWriter:8021] 2017-01-16 13:51:51,353  Memtable.java:382 - Completed flushing /var/lib/cassandra/data/OpsCenter/rollup_state-9b934af0746111e68dd04f228b4be406/OpsCenter-rollup_state-tmp-ka-7811-Data.db (1.797MiB) for commitlog position ReplayPosition(segmentId=1483996065725, position=29889014)" ]
    },
    {
      "Description": "Flushing (enqueuing)",
      "TagId": 2.1,
      "SessionBeginTagId": 2.0,
      "MatchVersion": null,
      "LevelMatch": {
        "RegExStrings": [
          "INFO|DEBUG"
        ]
      },
      "ThreadIdMatch": null,
      "FileNameMatch": {
        "RegExStrings": [
          "^ColumnFamilyStore.java$"
        ]
      },
      "FileLineMatch": null,
      "MessageMatch": {
        "RegExStrings": [
          "^Enqueuing\\s+flush\\s"
        ]
      },
      "ParseMessage": {
        "RegExStrings": [
          "^Enqueuing\\s+flush\\s+of\\s+Memtable\\-(?$<KEYSPACE>)\\.(?$<DDLITEMNAME>)\\@\\d+\\((?<onheapserialized_bytes>\\d+)\\/(?<onheap_bytes>[0-9.,]+)\\s+\\w+\\/\\w+\\s+\\w+,\\s+(?<operationspersec>[0-9,]+\\s+[a-z]+)\\s*\\)",
          "^Enqueuing\\s+flush\\s+of\\s+(?$<DDLITEMNAME>)\\s*\\:\\s+(?<onheap_bytes>[0-9,.]+)\\s+\\((?<onheappercent>[0-9,.]+\\%)\\)\\s+on-heap,\\s+(?<offheap_bytes>[0-9,.]+)\\s+\\((?<offheappercent>[0-9,.]+\\s*[a-z/%]+)\\)\\s"
        ]
      },
      "ParseThreadId": null,
      "EventType": "SessionBeginOrItem",
      "EventClass": "MemtableFlush",
      "SubClass": "ThreadName",
      "Product": "Cassandra",
      "SessionKey": "ThreadId + DDLITEMNAME",
      "SessionKeyAction": "Read",
      "SessionLookupAction": "DefineLabel, Stack",
      "SessionLookup": "EventClass + DDLITEMNAME",
      "Examples": [
        "=> INFO  [ValidationExecutor:800] 2017-01-16 13:34:06,722  ColumnFamilyStore.java:905 - Enqueuing flush of push_device: 2202847 (0%) on-heap, 0 (0%) off-heap",
        "INFO  [MemtableFlushWriter:8011] 2017-01-16 13:34:06,722  Memtable.java:347 - Writing Memtable-push_device@1288484782(622.872KiB serialized bytes, 10486 ops, 0%/0% of on/off-heap limit)",
        "INFO  [MemtableFlushWriter:8011] 2017-01-16 13:34:06,762  Memtable.java:382 - Completed flushing /var/lib/cassandra/data/push/push_device-109860416f0511e6aeacd54e2d191f81/push-push_device-tmp-ka-278155-Data.db (147.118KiB) for commitlog position ReplayPosition(segmentId=1483996065722, position=19434795)",
        "=> INFO  [AntiEntropyStage:1] 2017-01-16 13:34:17,620  ColumnFamilyStore.java:905 - Enqueuing flush of push_device: 264396 (0%) on-heap, 0 (0%) off-heap",
        "INFO  [MemtableFlushWriter:8011] 2017-01-16 13:34:17,621  Memtable.java:347 - Writing Memtable-push_device@1330163944(63.895KiB serialized bytes, 1327 ops, 0%/0% of on/off-heap limit)",
        "INFO  [MemtableFlushWriter:8011] 2017-01-16 13:34:17,628  Memtable.java:382 - Completed flushing /var/lib/cassandra/data/push/push_device-109860416f0511e6aeacd54e2d191f81/push-push_device-tmp-ka-278156-Data.db (16.152KiB) for commitlog position ReplayPosition(segmentId=1483996065722, position=19845421)",
        "=> INFO  [STREAM-IN-/10.198.59.26] 2017-01-16 13:34:17,795  ColumnFamilyStore.java:905 - Enqueuing flush of push_device: 7762 (0%) on-heap, 0 (0%) off-heap",
        "INFO  [MemtableFlushWriter:8012] 2017-01-16 13:34:17,796  Memtable.java:347 - Writing Memtable-push_device@1956470048(2.617KiB serialized bytes, 22 ops, 0%/0% of on/off-heap limit)",
        "INFO  [MemtableFlushWriter:8012] 2017-01-16 13:34:17,797  Memtable.java:382 - Completed flushing /var/lib/cassandra/data/push/push_device-109860416f0511e6aeacd54e2d191f81/push-push_device-tmp-ka-278157-Data.db (0.000KiB) for commitlog position ReplayPosition(segmentId=1483996065722, position=19852124)",
        "INFO  [CompactionExecutor:3211] 2017-01-16 13:33:04,872  CompactionTask.java:141 - Compacting [SSTableReader(path='/var/lib/cassandra/data/system/compactions_in_progress-55080ab05d9c388690a4acb25fe1f77b/system-compactions_in_progress-ka-90586-Data.db'), SSTableReader(path='/var/lib/cassandra/data/system/compactions_in_progress-55080ab05d9c388690a4acb25fe1f77b/system-compactions_in_progress-ka-90588-Data.db'), SSTableReader(path='/var/lib/cassandra/data/system/compactions_in_progress-55080ab05d9c388690a4acb25fe1f77b/system-compactions_in_progress-ka-90587-Data.db'), SSTableReader(path='/var/lib/cassandra/data/system/compactions_in_progress-55080ab05d9c388690a4acb25fe1f77b/system-compactions_in_progress-ka-90589-Data.db')]",
        "=> INFO  [CompactionExecutor:3211] 2017-01-16 13:34:17,817  ColumnFamilyStore.java:905 - Enqueuing flush of compactions_in_progress: 1315 (0%) on-heap, 0 (0%) off-heap",
        "INFO  [MemtableFlushWriter:8011] 2017-01-16 13:34:17,849  Memtable.java:347 - Writing Memtable-compactions_in_progress@1461142581(0.146KiB serialized bytes, 9 ops, 0%/0% of on/off-heap limit)",
        "INFO  [MemtableFlushWriter:8011] 2017-01-16 13:34:17,850  Memtable.java:382 - Completed flushing /var/lib/cassandra/data/system/compactions_in_progress-55080ab05d9c388690a4acb25fe1f77b/system-compactions_in_progress-tmp-ka-90592-Data.db (0.000KiB) for commitlog position ReplayPosition(segmentId=1483996065722, position=19853243)",
        "=> INFO  [BatchlogTasks:1] 2017-01-16 13:35:06,379  ColumnFamilyStore.java:905 - Enqueuing flush of batchlog: 213016 (0%) on-heap, 0 (0%) off-heap",
        "INFO  [MemtableFlushWriter:8011] 2017-01-16 13:35:06,379  Memtable.java:347 - Writing Memtable-batchlog@1763876046(112.479KiB serialized bytes, 775 ops, 0%/0% of on/off-heap limit)",
        "INFO  [MemtableFlushWriter:8011] 2017-01-16 13:35:06,380  Memtable.java:393 - Completed flushing /var/lib/cassandra/data/system/batchlog-0290003c977e397cac3efdfdc01d626b/system-batchlog-tmp-ka-10184-Data.db; nothing needed to be retained.  Commitlog position was ReplayPosition(segmentId=1483996065722, position=32855484)",
        "=> Enqueuing flush of Memtable-user_ids.user_ids_gid@1844633142(189/1890 serialized/live bytes, 7 ops)",
        "=> INFO  [AntiEntropyStage:1] 2017-02-11 01:41:57,862  ColumnFamilyStore.java:905 - Enqueuing flush of digitalasset_3_0_2: 38866 (0%) on-heap, 0 (0%) off-heap",
        "INFO  [MemtableFlushWriter:913] 2017-02-11 01:41:57,863  Memtable.java:347 - Writing Memtable-digitalasset_3_0_2.digitalasset_3_0_2_id@153078410(3.746KiB serialized bytes, 123 ops, 0%/0% of on/off-heap limit)",
        "INFO  [MemtableFlushWriter:913] 2017-02-11 01:41:57,864  Memtable.java:382 - Completed flushing /data/cassandra/data/usprodda/digitalasset_3_0_2-42613c599c943db2b2805c31c2d36acb/usprodda-digitalasset_3_0_2.digitalasset_3_0_2_id-tmp-ka-308-Data.db (0.000KiB) for commitlog position ReplayPosition(segmentId=1486705955848, position=25089636)",
        "INFO  [SlabPoolCleaner] 2017-01-16 13:51:50,636  ColumnFamilyStore.java:1211 - Flushing largest CFS(Keyspace='OpsCenter', ColumnFamily='rollup_state') to free up room. Used total: 0.33/0.00, live: 0.33/0.00, flushing: 0.00/0.00, this: 0.14/0.14",
        "=> INFO  [SlabPoolCleaner] 2017-01-16 13:51:50,636  ColumnFamilyStore.java:905 - Enqueuing flush of rollup_state: 221288084 (14%) on-heap, 0 (0%) off-heap",
        "INFO  [MemtableFlushWriter:8021] 2017-01-16 13:51:50,637  Memtable.java:347 - Writing Memtable-rollup_state@1750499154(8.948MiB serialized bytes, 3237264 ops, 14%/0% of on/off-heap limit)",
        "INFO  [MemtableFlushWriter:8021] 2017-01-16 13:51:51,353  Memtable.java:382 - Completed flushing /var/lib/cassandra/data/OpsCenter/rollup_state-9b934af0746111e68dd04f228b4be406/OpsCenter-rollup_state-tmp-ka-7811-Data.db (1.797MiB) for commitlog position ReplayPosition(segmentId=1483996065725, position=29889014)"
      ]
    },
    {
      "Description": "Flushing (writing)",
      "TagId": 2.12,
      "SessionBeginTagId": 2.1,
      "MatchVersion": null,
      "LevelMatch": {
        "RegExStrings": [
          "INFO|DEBUG"
        ]
      },
      "ThreadIdMatch": null,
      "FileNameMatch": {
        "RegExStrings": [
          "^Memtable.java$"
        ]
      },
      "FileLineMatch": null,
      "MessageMatch": {
        "RegExStrings": [
          "^Writing\\s+Memtable-"
        ]
      },
      "ParseMessage": {
        "RegExStrings": [
          "^Writing\\s+Memtable-\\s*(?:(?$<TABLEVIEWNAME>)\\.(?$<DDLITEMNAME>)|(?$<DDLITEMNAME>))?@\\d+\\((?<serializedheap>[0-9.]+\\s*\\w+)\\s+serialized\\s+bytes,\\s+(?<operationspersec_ops>[0-9,]+)\\s+ops,\\s+(?<onheapthresholdpercent>[0-9.,]+\\s*[a-z/%]+)\\s*/\\s*(?<offheapthresholdpercent>[0-9.,]+\\s*[a-z/%]+)\\s"
        ]
      },
      "ParseThreadId": null,
      "EventType": "SessionBegin",
      "EventClass": "MemtableFlush",
      "SubClass": null,
      "Product": "Cassandra",
      "SessionKey": "ThreadId + DDLITEMNAME",
      "SessionLookupAction": "ReadRemoveLabel, Stack",
      "SessionLookup": "EventClass + TABLEVIEWNAME",
      "Examples": [
        "INFO  [ValidationExecutor:800] 2017-01-16 13:34:06,722  ColumnFamilyStore.java:905 - Enqueuing flush of push_device: 2202847 (0%) on-heap, 0 (0%) off-heap",
        "=> INFO  [MemtableFlushWriter:8011] 2017-01-16 13:34:06,722  Memtable.java:347 - Writing Memtable-push_device@1288484782(622.872KiB serialized bytes, 10486 ops, 0%/0% of on/off-heap limit)",
        "INFO  [MemtableFlushWriter:8011] 2017-01-16 13:34:06,762  Memtable.java:382 - Completed flushing /var/lib/cassandra/data/push/push_device-109860416f0511e6aeacd54e2d191f81/push-push_device-tmp-ka-278155-Data.db (147.118KiB) for commitlog position ReplayPosition(segmentId=1483996065722, position=19434795)",
        "INFO  [SlabPoolCleaner] 2017-01-16 13:51:50,636  ColumnFamilyStore.java:1211 - Flushing largest CFS(Keyspace='OpsCenter', ColumnFamily='rollup_state') to free up room. Used total: 0.33/0.00, live: 0.33/0.00, flushing: 0.00/0.00, this: 0.14/0.14",
        "INFO  [SlabPoolCleaner] 2017-01-16 13:51:50,636  ColumnFamilyStore.java:905 - Enqueuing flush of rollup_state: 221288084 (14%) on-heap, 0 (0%) off-heap",
        "=> INFO  [MemtableFlushWriter:8021] 2017-01-16 13:51:50,637  Memtable.java:347 - Writing Memtable-rollup_state@1750499154(8.948MiB serialized bytes, 3237264 ops, 14%/0% of on/off-heap limit)",
        "INFO  [MemtableFlushWriter:8021] 2017-01-16 13:51:51,353  Memtable.java:382 - Completed flushing /var/lib/cassandra/data/OpsCenter/rollup_state-9b934af0746111e68dd04f228b4be406/OpsCenter-rollup_state-tmp-ka-7811-Data.db (1.797MiB) for commitlog position ReplayPosition(segmentId=1483996065725, position=29889014)",
        "INFO  [SlabPoolCleaner] 2017-02-13 03:08:36,836  ColumnFamilyStore.java:1211 - Flushing largest CFS(Keyspace='usprodda', ColumnFamily='digitalasset_3_0_2') to free up room. Used total: 0.20/0.00, live: 0.20/0.00, flushing: 0.00/0.00, this: 0.02/0.02",
        "INFO  [SlabPoolCleaner] 2017-02-13 03:08:36,837  ColumnFamilyStore.java:905 - Enqueuing flush of digitalasset_3_0_2: 49836322 (2%) on-heap, 0 (0%) off-heap",
        "=> INFO  [MemtableFlushWriter:3523] 2017-02-13 03:08:36,838  Memtable.java:347 - Writing Memtable-digitalasset_3_0_2@391065586(20.901MiB serialized bytes, 11725 ops, 2%/0% of on/off-heap limit)",
        "INFO  [MemtableFlushWriter:3523] 2017-02-13 03:08:36,910  Memtable.java:382 - Completed flushing /data/cassandra/data/usprodda/digitalasset_3_0_2-42613c599c943db2b2805c31c2d36acb/usprodda-digitalasset_3_0_2-tmp-ka-362-Data.db (8.778MiB) for commitlog position ReplayPosition(segmentId=1486705957188, position=9102086)",
        "=> INFO  [MemtableFlushWriter:3523] 2017-02-13 03:08:36,966  Memtable.java:347 - Writing Memtable-digitalasset_3_0_2.digitalasset_3_0_2_id@458035203(108.106KiB serialized bytes, 2786 ops, 0%/0% of on/off-heap limit)",
        "INFO  [MemtableFlushWriter:3523] 2017-02-13 03:08:36,978  Memtable.java:382 - Completed flushing /data/cassandra/data/usprodda/digitalasset_3_0_2-42613c599c943db2b2805c31c2d36acb/usprodda-digitalasset_3_0_2.digitalasset_3_0_2_id-tmp-ka-319-Data.db (46.885KiB) for commitlog position ReplayPosition(segmentId=1486705957188, position=9102086)",
        "INFO  [AntiEntropyStage:1] 2017-02-11 01:41:57,862  ColumnFamilyStore.java:905 - Enqueuing flush of digitalasset_3_0_2: 38866 (0%) on-heap, 0 (0%) off-heap",
        "=> INFO  [MemtableFlushWriter:913] 2017-02-11 01:41:57,863  Memtable.java:347 - Writing Memtable-digitalasset_3_0_2.digitalasset_3_0_2_id@153078410(3.746KiB serialized bytes, 123 ops, 0%/0% of on/off-heap limit)",
        "INFO  [MemtableFlushWriter:913] 2017-02-11 01:41:57,864  Memtable.java:382 - Completed flushing /data/cassandra/data/usprodda/digitalasset_3_0_2-42613c599c943db2b2805c31c2d36acb/usprodda-digitalasset_3_0_2.digitalasset_3_0_2_id-tmp-ka-308-Data.db (0.000KiB) for commitlog position ReplayPosition(segmentId=1486705955848, position=25089636)",
        "INFO  [AntiEntropyStage:1] 2017-02-11 01:41:57,862  ColumnFamilyStore.java:905 - Enqueuing flush of digitalasset_3_0_2: 38866 (0%) on-heap, 0 (0%) off-heap",
        "=> INFO  [MemtableFlushWriter:913] 2017-02-11 01:41:57,863  Memtable.java:347 - Writing Memtable-digitalasset_3_0_2.digitalasset_3_0_2_id@153078410(3.746KiB serialized bytes, 123 ops, 0%/0% of on/off-heap limit)",
        "INFO  [MemtableFlushWriter:913] 2017-02-11 01:41:57,864  Memtable.java:382 - Completed flushing /data/cassandra/data/usprodda/digitalasset_3_0_2-42613c599c943db2b2805c31c2d36acb/usprodda-digitalasset_3_0_2.digitalasset_3_0_2_id-tmp-ka-308-Data.db (0.000KiB) for commitlog position ReplayPosition(segmentId=1486705955848, position=25089636)"
      ]
    },
    {
      "Description": "Flushing (finish)",
      "TagId": 2.2,
      "SessionBeginTagId": 2.1,
      "MatchVersion": null,
      "LevelMatch": {
        "RegExStrings": [
          "INFO|DEBUG"
        ]
      },
      "ThreadIdMatch": null,
      "FileNameMatch": {
        "RegExStrings": [
          "^Memtable.java$"
        ]
      },
      "FileLineMatch": null,
      "MessageMatch": {
        "RegExStrings": [
          "^Completed\\s+flushing\\s"
        ]
      },
      "ParseMessage": {
        "RegExStrings": [
          "^Completed\\s+flushing\\s+(?$<SSTABLEPATH>)\\s+\\((?<flushedstorage>[0-9.,]+\\s*\\w+)\\)\\s+for\\s+[a-z ]+\\(segmentId\\s*=\\s*(?<replaysegmentid>[0-9,]+)\\s*,\\s+position\\s*=\\s*(?<replayposition>[0-9,]+)\\)$",
          "^Completed\\s+flushing\\s+(?$<SSTABLEPATH>)\\s*;[a-z .]+\\s+commitlog\\s+[a-z ]+\\(segmentId\\s*=\\s*(?<replaysegmentid>[0-9,]+)\\s*,\\s+position\\s*=\\s*(?<replayposition>[0-9,]+)\\)$"
        ]
      },
      "ParseThreadId": null,
      "EventType": "SessionEnd",
      "EventClass": "MemtableFlush",
      "SubClass": null,
      "Product": "Cassandra",
      "SessionKey": "ThreadId + SSTABLEPATH=>DDLITEMNAME",
      "Examples": [
        "INFO  [ValidationExecutor:800] 2017-01-16 13:34:06,722  ColumnFamilyStore.java:905 - Enqueuing flush of push_device: 2202847 (0%) on-heap, 0 (0%) off-heap",
        "INFO  [MemtableFlushWriter:8011] 2017-01-16 13:34:06,722  Memtable.java:347 - Writing Memtable-push_device@1288484782(622.872KiB serialized bytes, 10486 ops, 0%/0% of on/off-heap limit)",
        "=> INFO  [MemtableFlushWriter:8011] 2017-01-16 13:34:06,762  Memtable.java:382 - Completed flushing /var/lib/cassandra/data/push/push_device-109860416f0511e6aeacd54e2d191f81/push-push_device-tmp-ka-278155-Data.db (147.118KiB) for commitlog position ReplayPosition(segmentId=1483996065722, position=19434795)",
        "INFO  [SlabPoolCleaner] 2017-01-16 13:51:50,636  ColumnFamilyStore.java:1211 - Flushing largest CFS(Keyspace='OpsCenter', ColumnFamily='rollup_state') to free up room. Used total: 0.33/0.00, live: 0.33/0.00, flushing: 0.00/0.00, this: 0.14/0.14",
        "INFO  [SlabPoolCleaner] 2017-01-16 13:51:50,636  ColumnFamilyStore.java:905 - Enqueuing flush of rollup_state: 221288084 (14%) on-heap, 0 (0%) off-heap",
        "INFO  [MemtableFlushWriter:8021] 2017-01-16 13:51:50,637  Memtable.java:347 - Writing Memtable-rollup_state@1750499154(8.948MiB serialized bytes, 3237264 ops, 14%/0% of on/off-heap limit)",
        "=>INFO  [MemtableFlushWriter:8021] 2017-01-16 13:51:51,353  Memtable.java:382 - Completed flushing /var/lib/cassandra/data/OpsCenter/rollup_state-9b934af0746111e68dd04f228b4be406/OpsCenter-rollup_state-tmp-ka-7811-Data.db (1.797MiB) for commitlog position ReplayPosition(segmentId=1483996065725, position=29889014)",
        "INFO  [BatchlogTasks:1] 2017-01-16 13:35:06,379  ColumnFamilyStore.java:905 - Enqueuing flush of batchlog: 213016 (0%) on-heap, 0 (0%) off-heap",
        "INFO  [MemtableFlushWriter:8011] 2017-01-16 13:35:06,379  Memtable.java:347 - Writing Memtable-batchlog@1763876046(112.479KiB serialized bytes, 775 ops, 0%/0% of on/off-heap limit)",
        "=> INFO  [MemtableFlushWriter:8011] 2017-01-16 13:35:06,380  Memtable.java:393 - Completed flushing /var/lib/cassandra/data/system/batchlog-0290003c977e397cac3efdfdc01d626b/system-batchlog-tmp-ka-10184-Data.db; nothing needed to be retained.  Commitlog position was ReplayPosition(segmentId=1483996065722, position=32855484)"
      ]
    },
    {
      "Description": "Hint Handoff (start)",
      "TagId": 3.0,
      "MatchVersion": null,
      "LevelMatch": {
        "RegExStrings": [
          "INFO|DEBUG"
        ]
      },
      "ThreadIdMatch": null,
      "FileNameMatch": {
        "RegExStrings": [
          "^HintedHandOffManager.java$"
        ]
      },
      "FileLineMatch": null,
      "MessageMatch": {
        "RegExStrings": [
          "^Started\\s+hinted\\s+handoff\\s"
        ]
      },
      "ParseMessage": {
        "RegExStrings": [
          "^started\\s+hinted\\s+handoff\\s+\\w+\\s+host:\\s+(?<hostid>[0-9a-f]{8}\\-[0-9a-f]{4}\\-[0-9a-f]{4}\\-[0-9a-f]{4}\\-[0-9a-f]{12})\\s+\\w+\\s+ip:\\s+/?\\s*(?$<NODE>)$"
        ]
      },
      "ParseThreadId": null,
      "EventType": "SessionBegin",
      "EventClass": "HintHandOff",
      "SubClass": null,
      "Product": "Cassandra",
      "SessionLookupAction": "ReadRemoveLabel",
      "SessionLookup": "'CompactionExecutorhints'",
      "SessionKey": "'HintHandoff' + NODE",
      "SessionKeyAction": "Auto",
      "Examples": [
        "INFO  [CompactionExecutor:1658] 2017-02-12 02:14:00,978  CompactionTask.java:141 - Compacting [SSTableReader(path='/data/cassandra/data/system/hints-2666e20573ef38b390fefecf96e8f0c7/system-hints-ka-429-Data.db')]",
        "=> INFO  [HintedHandoff:2] 2017-02-12 02:14:00,979  HintedHandOffManager.java:367 - Started hinted handoff for host: 8e443e52-6421-440f-9e37-1b946cb9c690 with IP: /10.1.37.0",
        "INFO  [HANDSHAKE-/10.1.37.0] 2017-02-12 02:14:00,980  OutboundTcpConnection.java:488 - Handshaking version with /10.1.37.0",
        "INFO  [HintedHandoff:2] 2017-02-12 02:14:01,022  HintedHandOffManager.java:399 - Finished hinted handoff of 8 rows to endpoint /10.1.37.0",
        "INFO  [HintedHandoff:2] 2017-02-12 02:14:01,022  ColumnFamilyStore.java:905 - Enqueuing flush of hints: 6569 (0%) on-heap, 0 (0%) off-heap",
        "INFO  [MemtableFlushWriter:2276] 2017-02-12 02:14:01,022  Memtable.java:347 - Writing Memtable-hints@1107882196(0.258KiB serialized bytes, 16 ops, 0%/0% of on/off-heap limit)",
        "INFO  [MemtableFlushWriter:2276] 2017-02-12 02:14:01,023  Memtable.java:382 - Completed flushing /data/cassandra/data/system/hints-2666e20573ef38b390fefecf96e8f0c7/system-hints-tmp-ka-430-Data.db (0.000KiB) for commitlog position ReplayPosition(segmentId=1486705956518, position=18941784)"
      ]
    },
    {
      "Description": "Hiint Handoff (handshaking)",
      "TagId": 3.1,
      "SessionBeginTagId": 3.0,
      "MatchVersion": null,
      "LevelMatch": {
        "RegExStrings": [
          "INFO|DEBUG"
        ]
      },
      "ThreadIdMatch": null,
      "FileNameMatch": {
        "RegExStrings": [
          "^OutboundTcpConnection.java$"
        ]
      },
      "FileLineMatch": null,
      "MessageMatch": {
        "RegExStrings": [
          "^Handshaking\\s"
        ]
      },
      "ParseMessage": {
        "RegExStrings": [
          "^Handshaking\\s+\\w+\\s+\\w+\\s+/?\\s*(?$<NODE>)$"
        ]
      },
      "ParseThreadId": null,
      "EventType": "SessionItem, SessionIgnore",
      "EventClass": "HintHandOff",
      "SubClass": null,
      "Product": "Cassandra",
      "SessionKey": "'HintHandoff' + NODE",
      "SessionKeyAction": "Read",
      "Examples": [
        "INFO  [CompactionExecutor:1658] 2017-02-12 02:14:00,978  CompactionTask.java:141 - Compacting [SSTableReader(path='/data/cassandra/data/system/hints-2666e20573ef38b390fefecf96e8f0c7/system-hints-ka-429-Data.db')]",
        "INFO  [HintedHandoff:2] 2017-02-12 02:14:00,979  HintedHandOffManager.java:367 - Started hinted handoff for host: 8e443e52-6421-440f-9e37-1b946cb9c690 with IP: /10.1.37.0",
        "=> INFO  [HANDSHAKE-/10.1.37.0] 2017-02-12 02:14:00,980  OutboundTcpConnection.java:488 - Handshaking version with /10.1.37.0",
        "INFO  [HintedHandoff:2] 2017-02-12 02:14:01,022  HintedHandOffManager.java:399 - Finished hinted handoff of 8 rows to endpoint /10.1.37.0",
        "INFO  [HintedHandoff:2] 2017-02-12 02:14:01,022  ColumnFamilyStore.java:905 - Enqueuing flush of hints: 6569 (0%) on-heap, 0 (0%) off-heap",
        "INFO  [MemtableFlushWriter:2276] 2017-02-12 02:14:01,022  Memtable.java:347 - Writing Memtable-hints@1107882196(0.258KiB serialized bytes, 16 ops, 0%/0% of on/off-heap limit)",
        "INFO  [MemtableFlushWriter:2276] 2017-02-12 02:14:01,023  Memtable.java:382 - Completed flushing /data/cassandra/data/system/hints-2666e20573ef38b390fefecf96e8f0c7/system-hints-tmp-ka-430-Data.db (0.000KiB) for commitlog position ReplayPosition(segmentId=1486705956518, position=18941784)"
      ]
    },
    {
      "Description": "Hint Handoff (finish)",
      "TagId": 3.2,
      "SessionBeginTagId": 3.0,
      "MatchVersion": null,
      "LevelMatch": {
        "RegExStrings": [
          "INFO|DEBUG"
        ]
      },
      "ThreadIdMatch": null,
      "FileNameMatch": {
        "RegExStrings": [
          "^HintedHandOffManager.java$"
        ]
      },
      "FileLineMatch": null,
      "MessageMatch": {
        "RegExStrings": [
          "^Finished\\s+hinted\\s+handoff\\s"
        ]
      },
      "ParseMessage": {
        "RegExStrings": [
          "^Finished\\s+hinted\\s+handoff\\s+of\\s+(?<rowshandedoff>[0-9,]+)\\s+rows\\s+\\w+\\s+endpoint\\s+/?\\s*(?$<NODE>)$"
        ]
      },
      "ParseThreadId": null,
      "EventType": "SessionEnd",
      "EventClass": "HintHandOff",
      "SubClass": null,
      "Product": "Cassandra",
      "SessionLookup": "'HintHandoff' + NODE",
      "SessionLookupAction": "ReadRemoveSession",
      "SessionKey": "ThreadId + 'hints'", /*used to chain to Enqueuing Flush; note that flush events will have this session as a parent (compacting also is a parent)*/
      "SessionKeyAction": "Add",
      "Examples": [
        "INFO  [CompactionExecutor:1658] 2017-02-12 02:14:00,978  CompactionTask.java:141 - Compacting [SSTableReader(path='/data/cassandra/data/system/hints-2666e20573ef38b390fefecf96e8f0c7/system-hints-ka-429-Data.db')]",
        "INFO  [HintedHandoff:2] 2017-02-12 02:14:00,979  HintedHandOffManager.java:367 - Started hinted handoff for host: 8e443e52-6421-440f-9e37-1b946cb9c690 with IP: /10.1.37.0",
        "INFO  [HANDSHAKE-/10.1.37.0] 2017-02-12 02:14:00,980  OutboundTcpConnection.java:488 - Handshaking version with /10.1.37.0",
        "=> INFO  [HintedHandoff:2] 2017-02-12 02:14:01,022  HintedHandOffManager.java:399 - Finished hinted handoff of 8 rows to endpoint /10.1.37.0",
        "INFO  [HintedHandoff:2] 2017-02-12 02:14:01,022  ColumnFamilyStore.java:905 - Enqueuing flush of hints: 6569 (0%) on-heap, 0 (0%) off-heap",
        "INFO  [MemtableFlushWriter:2276] 2017-02-12 02:14:01,022  Memtable.java:347 - Writing Memtable-hints@1107882196(0.258KiB serialized bytes, 16 ops, 0%/0% of on/off-heap limit)",
        "INFO  [MemtableFlushWriter:2276] 2017-02-12 02:14:01,023  Memtable.java:382 - Completed flushing /data/cassandra/data/system/hints-2666e20573ef38b390fefecf96e8f0c7/system-hints-tmp-ka-430-Data.db (0.000KiB) for commitlog position ReplayPosition(segmentId=1486705956518, position=18941784)"
      ]
    },
    {
      "Description": "Hint Handoff (dropped hints node down)",
      "TagId": 19.0,
      "MatchVersion": null,
      "LevelMatch": {
        "RegExStrings": [
          "WARN"
        ]
      },
      "ThreadIdMatch": null,
      "FileNameMatch": {
        "RegExStrings": [
          "^HintedHandoffMetrics.java$"
        ]
      },
      "FileLineMatch": null,
      "MessageMatch": {
        "RegExStrings": [
          "^/*[^ ]+\\s+has\\s+[0-9,]+\\s+dropped\\s+hints"
        ]
      },
      "ParseMessage": {
        "RegExStrings": [
          "^/*(?<NODE>[^ ]+)\\s+has\\s+(?<droppedhints>[0-9,]+)\\s+dropped\\s+hints"
        ]
      },
      "ParseThreadId": null,
      "EventType": "SingleInstance",
      "EventClass": "HintHandOff, NodeDetection, Change",
      "SubClass": "'Dropped Hints due to Node Down ' + NODE",
      "Product": "Cassandra",
      "Examples": [
        "=> WARN  [HintedHandoffManager:1] 2017-12-19 16:45:41,561  HintedHandoffMetrics.java:79 - /10.141.88.35 has 433 dropped hints, because node is down past configured hint window."
      ]
    },
    {
      "Description": "Node Down or Joined Cluster",
      "TagId": 4.0,
      "MatchVersion": null,
      "LevelMatch": {
        "RegExStrings": [
          "INFO"
        ]
      },
      "ThreadIdMatch": null,
      "FileNameMatch": {
        "RegExStrings": [
          "^Gossiper.java$"
        ]
      },
      "FileLineMatch": null,
      "MessageMatch": {
        "RegExStrings": [
          "^(InetAddress|Node)\\s.+\\s(down|cluster)"
        ]
      },
      "ParseMessage": {
        "RegExStrings": [
          "^InetAddress\\s+/?\\s*(?$<NODE>)\\s+\\w+\\s+\\w+\\s+(?<action>DOWN)$",
          "^Node\\s+/?\\s*(?$<NODE>)\\s+is\\s+(?<action>now part of the cluster)$"
        ]
      },
      "ParseThreadId": null,
      "EventType": "SessionBegin",
      "EventClass": "NodeDetection, Change",
      "SubClass": "NODE + ' ' + action",
      "Product": "Cassandra",
      "SessionKey": "EventClass + NODE",
      "SessionKeyAction": "Add",
      "Examples": [
        "=> INFO  [GossipTasks:1] 2017-02-12 02:13:59,976  Gossiper.java:1008 - InetAddress /10.1.37.0 is now DOWN",
        "=> INFO  [GossipStage:1] 2017-02-12 02:13:59,976  Gossiper.java:1029 - Node /10.1.37.0 is now part of the cluster",
        "INFO  [SharedPool-Worker-1] 2017-02-12 02:14:00,978  Gossiper.java:993 - InetAddress /10.1.37.0 is now UP"
      ]
    },
    {
      "Description": "Node Up",
      "TagId": 4.1,
      "SessionBeginTagId": 4.0,
      "MatchVersion": null,
      "LevelMatch": {
        "RegExStrings": [
          "INFO"
        ]
      },
      "ThreadIdMatch": null,
      "FileNameMatch": {
        "RegExStrings": [
          "^Gossiper.java$"
        ]
      },
      "FileLineMatch": null,
      "MessageMatch": {
        "RegExStrings": [
          "^InetAddress\\s.+\\sup"
        ]
      },
      "ParseMessage": {
        "RegExStrings": [
          "^InetAddress\\s+/?\\s*(?$<NODE>)\\s+\\w+\\s+\\w+\\s+(?<action>UP)$"
        ]
      },
      "ParseThreadId": null,
      "EventType": "SessionEnd, SessionIgnore",
      "EventClass": "NodeDetection, Change",
      "SubClass": "NODE + ' UP'",
      "Product": "Cassandra",
      "SessionKey": "EventClass + NODE",
      "Examples": [
        "INFO  [GossipTasks:1] 2017-02-12 02:13:59,976  Gossiper.java:1008 - InetAddress /10.1.37.0 is now DOWN",
        "INFO  [GossipStage:1] 2017-02-12 02:13:59,976  Gossiper.java:1029 - Node /10.1.37.0 is now part of the cluster",
        "=> INFO  [SharedPool-Worker-1] 2017-02-12 02:14:00,978  Gossiper.java:993 - InetAddress /10.1.37.0 is now UP"
      ]
    },
    {
      "Description": "Node Shutdown",
      "TagId": 5.0,
      "MatchVersion": null,
      "LevelMatch": {
        "RegExStrings": [
          "INFO"
        ]
      },
      "ThreadIdMatch": null,
      "FileNameMatch": {
        "RegExStrings": [
          "^DseDaemon.java$"
        ]
      },
      "FileLineMatch": null,
      "MessageMatch": {
        "RegExStrings": [
          "^DSE shutdown "
        ]
      },
      "ParseMessage": {
        "RegExStrings": [
          "^\\w+\\s+(?<SUBCLASS>shutdown\\s+\\w+)\\s*\\.$"
        ]
      },
      "ParseThreadId": null,
      "EventType": "SessionBegin",
      "EventClass": "NodeDetection, Change",
      "SubClass": null,
      "Product": "Cassandra",
      "SessionKey": "EventClass + 'Shutdown'",
      "SessionKeyAction": "Add",
      "Examples": [
        "=> INFO  [Daemon shutdown] 2017-05-01 15:20:06,377  DseDaemon.java:542 - DSE shutdown complete.",
        "INFO  [main] 2017-05-16 13:39:58,892  DseDaemon.java:827 - DSE startup complete."
      ]
    },
    {
      "Description": "Node Startup",
      "TagId": 5.1,
      "SessionBeginTagId": 5.0,
      "MatchVersion": null,
      "LevelMatch": {
        "RegExStrings": [
          "INFO"
        ]
      },
      "ThreadIdMatch": null,
      "FileNameMatch": {
        "RegExStrings": [
          "^DseDaemon.java$"
        ]
      },
      "FileLineMatch": null,
      "MessageMatch": {
        "RegExStrings": [
          "^DSE startup "
        ]
      },
      "ParseMessage": {
        "RegExStrings": [
          "^\\w+\\s+(?<SUBCLASS>startup\\s+\\w+)\\s*\\.$"
        ]
      },
      "ParseThreadId": null,
      "EventType": "SessionEnd",
      "EventClass": "NodeDetection, Change",
      "SubClass": null,
      "Product": "Cassandra",
      "SessionKey": "EventClass + 'Shutdown'",
      "SessionKeyAction": "ReadRemove",
      "Examples": [
        "INFO  [Daemon shutdown] 2017-05-01 15:20:06,377  DseDaemon.java:542 - DSE shutdown complete.",
        "=> INFO  [main] 2017-05-16 13:39:58,892  DseDaemon.java:827 - DSE startup complete."
      ]
    },
    {
      "Description": "Node Configuration",
      "TagId": 6.0,
      "MatchVersion": null,
      "LevelMatch": {
        "RegExStrings": [
          "INFO"
        ]
      },
      "ThreadIdMatch": null,
      "FileNameMatch": {
        "RegExStrings": [
          "^Config.java$"
        ]
      },
      "FileLineMatch": null,
      "MessageMatch": {
        "RegExStrings": [
          "^Node configuration\\:"
        ]
      },
      "ParseMessage": {
        "RegExStrings": [
          "^Node\\s+configuration\\:\\s*\\[\\s*(?:(?<KEY>[a-z0-9\\-_.]+)\\s*\\=\\s*(?<VALUE>(?:\\[Ljava\\.lang\\.String\\;\\@[a-f0-9]+)|[a-z0-9.,\\-_{}=<> //\\]\\[]+)\\s*(?:\\;|\\])\\s*)+"
        ]
      },
      "ParseThreadId": null,
      "EventType": "SingleInstance",
      "EventClass": "Config, NodeDetection",
      "SubClass": null,
      "Product": "Cassandra",
      "Examples": [
        "=> INFO  [main] 2017-05-16 13:39:43,277  Config.java:440 - Node configuration:[allocate_tokens_for_keyspace=null; authenticator=AllowAllAuthenticator; authorizer=AllowAllAuthorizer; auto_bootstrap=true; auto_snapshot=true; batch_size_fail_threshold_in_kb=640; batch_size_warn_threshold_in_kb=64; batchlog_replay_throttle_in_kb=1024; broadcast_address=null; broadcast_rpc_address=null; buffer_pool_use_heap_if_exhausted=true; cas_contention_timeout_in_ms=1000; client_encryption_options=<REDACTED>; cluster_name=Andersen 5.0 Test Cluster; column_index_size_in_kb=64; commit_failure_policy=stop; commitlog_compression=null; commitlog_directory=/mnt/cassandra/commitlog/commitlog; commitlog_max_compression_buffers_in_pool=3; commitlog_periodic_queue_size=-1; commitlog_segment_size_in_mb=32; commitlog_sync=periodic; commitlog_sync_batch_window_in_ms=null; commitlog_sync_period_in_ms=10000; commitlog_total_space_in_mb=null; compaction_large_partition_warning_threshold_mb=100; compaction_throughput_mb_per_sec=16; concurrent_compactors=null; concurrent_counter_writes=32; concurrent_materialized_view_writes=32; concurrent_reads=32; concurrent_replicates=null; concurrent_writes=32; counter_cache_keys_to_save=2147483647; counter_cache_save_period=7200; counter_cache_size_in_mb=null; counter_write_request_timeout_in_ms=5000; cross_node_timeout=false; data_file_directories=[Ljava.lang.String;@1a45193b; disk_access_mode=auto; disk_failure_policy=stop; disk_optimization_estimate_percentile=0.95; disk_optimization_page_cross_chance=0.1; disk_optimization_strategy=ssd; dynamic_snitch=true; dynamic_snitch_badness_threshold=0.1; dynamic_snitch_reset_interval_in_ms=600000; dynamic_snitch_update_interval_in_ms=100; enable_scripted_user_defined_functions=false; enable_user_defined_functions=false; enable_user_defined_functions_threads=true; encryption_options=null; endpoint_snitch=com.datastax.bdp.snitch.DseDelegateSnitch; file_cache_size_in_mb=512; gc_warn_threshold_in_ms=1000; hinted_handoff_disabled_datacenters=[]; hinted_handoff_enabled=true; hinted_handoff_throttle_in_kb=1024; hints_compression=null; hints_directory=/mnt/cassandra/savedcache/hints; hints_flush_period_in_ms=10000; incremental_backups=false; index_interval=null; index_summary_capacity_in_mb=null; index_summary_resize_interval_in_minutes=60; initial_token=null; inter_dc_stream_throughput_outbound_megabits_per_sec=200; inter_dc_tcp_nodelay=false; internode_authenticator=null; internode_compression=dc; internode_recv_buff_size_in_bytes=null; internode_send_buff_size_in_bytes=null; key_cache_keys_to_save=2147483647; key_cache_save_period=14400; key_cache_size_in_mb=null; listen_address=192.168.247.69; listen_interface=null; listen_interface_prefer_ipv6=false; listen_on_broadcast_address=false; max_hint_window_in_ms=10800000; max_hints_delivery_threads=2; max_hints_file_size_in_mb=128; max_mutation_size_in_kb=null; max_streaming_retries=3; max_value_size_in_mb=256; memtable_allocation_type=heap_buffers; memtable_cleanup_threshold=null; memtable_flush_writers=null; memtable_heap_space_in_mb=null; memtable_offheap_space_in_mb=null; native_transport_max_concurrent_connections=-1; native_transport_max_concurrent_connections_per_ip=-1; native_transport_max_frame_size_in_mb=256; native_transport_max_threads=128; native_transport_port=9042; native_transport_port_ssl=null; num_tokens=128; otc_coalescing_strategy=TIMEHORIZON; otc_coalescing_window_us=200; partitioner=org.apache.cassandra.dht.Murmur3Partitioner; permissions_cache_max_entries=1000; permissions_update_interval_in_ms=-1; permissions_validity_in_ms=2000; phi_convict_threshold=8.0; range_request_timeout_in_ms=10000; read_request_timeout_in_ms=5000; request_scheduler=org.apache.cassandra.scheduler.NoScheduler; request_scheduler_id=null; request_scheduler_options=null; request_timeout_in_ms=10000; role_manager=com.datastax.bdp.cassandra.auth.DseRoleManager; roles_cache_max_entries=1000; roles_update_interval_in_ms=-1; roles_validity_in_ms=2000; row_cache_class_name=org.apache.cassandra.cache.OHCProvider; row_cache_keys_to_save=2147483647; row_cache_save_period=0; row_cache_size_in_mb=0; rpc_address=192.168.247.69; rpc_interface=null; rpc_interface_prefer_ipv6=false; rpc_keepalive=true; rpc_listen_backlog=50; rpc_max_threads=2147483647; rpc_min_threads=16; rpc_port=9160; rpc_recv_buff_size_in_bytes=null; rpc_send_buff_size_in_bytes=null; rpc_server_type=sync; saved_caches_directory=/mnt/cassandra/savedcache/saved_caches; seed_provider=org.apache.cassandra.locator.SimpleSeedProvider{seeds=192.168.247.69}; server_encryption_options=<REDACTED>; snapshot_before_compaction=false; ssl_storage_port=7001; sstable_preemptive_open_interval_in_mb=50; start_native_transport=true; start_rpc=true; storage_port=7000; stream_throughput_outbound_megabits_per_sec=200; streaming_socket_timeout_in_ms=86400000; thrift_framed_transport_size_in_mb=15; thrift_max_message_length_in_mb=16; tombstone_failure_threshold=100000; tombstone_warn_threshold=1000; tracetype_query_ttl=86400; tracetype_repair_ttl=604800; trickle_fsync=true; trickle_fsync_interval_in_kb=10240; truncate_request_timeout_in_ms=60000; unlogged_batch_across_partitions_warn_threshold=10; user_defined_function_fail_timeout=1500; user_defined_function_warn_timeout=500; user_function_timeout_policy=die; windows_timer_interval=1; write_request_timeout_in_ms=2000]"
      ]
    },
    {
      "Description": "Not Mark Node Down (pause)",
      "TagId": 18.0,
      "MatchVersion": null,
      "LevelMatch": {
        "RegExStrings": [
          "WARN"
        ]
      },
      "ThreadIdMatch": null,
      "FileNameMatch": {
        "RegExStrings": [
          "^FailureDetector.java$"
        ]
      },
      "FileLineMatch": null,
      "MessageMatch": {
        "RegExStrings": [
          "^Not\\s+marking\\s+nodes\\s+down"
        ]
      },
      "ParseMessage": {
        "RegExStrings": [
          "^Not\\s+marking\\s+nodes\\s+down\\s+due\\s+to\\s+local\\s+pause\\s+of\\s+(?<DURATION>[0-9,]+)\\s*>\\s*(?<GCPauseThreshold>[0-9,]+)$"
        ]
      },
      "ParseThreadId": null,
      "EventType": "SessionDefinedByDuration",
      "EventClass": "NodeDetection,GC,Pause",
      "SubClass": "'Not marking Node down due to pause'",
      "Product": "Cassandra",
      "AnalyticsGroup": "GCPauseStats",
      "SessionKey": null,
      "Examples": [
        "=> WARN  [GossipTasks:1] 2018-02-06 14:42:58,283  FailureDetector.java:258 - Not marking nodes down due to local pause of 71168044088 > 5000000000"
      ]
    },
    {
      "Description": "Solr Hard Commit (secondary index)",
      "TagId": 7.0,
      "MatchVersion": null,
      "LevelMatch": {
        "RegExStrings": [
          "INFO"
        ]
      },
      "ThreadIdMatch": {
        "RegExStrings": [
          "^MemtablePostFlush\\:",
          "^StreamReceiveTask\\:"
        ]
      },
      "FileNameMatch": {
        "RegExStrings": [
          "^ColumnFamilyStore.java$",
          "^SecondaryIndexManager.java$"
        ]
      },
      "FileLineMatch": null,
      "MessageMatch": {
        "RegExStrings": [
          "^Flushing\\sSecondaryIndex\\s",
          "^Submitting\\sindex\\sbuild\\s"
        ]
      },
      "ParseMessage": {
        "RegExStrings": [
          "^Flushing\\s+SecondaryIndex\\s+(?<IndexClass>[^ (,{]+)\\s*\\{\\s*(?<KEYITEM>columnDefs)\\s*=\\s*\\[\\s*(?:ColumnDefinition\\s*\\{\\s*(?:(?:(?<ITEM1>indexName)\\s*\\=\\s*(?<SOLRINDEXNAME>(?<ITEM2>[^},{]+))|(?<ITEM1>[^={]+)\\s*\\=\\s*(?<ITEM2>[^},{]+))(?:\\,|\\})\\s*)+\\s*\\,?\\s*)+",
          "^Submitting\\sindex\\sbuild\\s\\w+\\s(?$<SOLRINDEXNAME>)\\sfor\\sdata\\s\\w+\\s\\w+\\s*\\(\\s*path\\s*=\\s*'(?$<SSTABLEPATH>)"
        ]
      },
      "ParseThreadId": null,
      "EventType": "SessionBegin",
      "EventClass": "SolrHardCommit",
      "SubClass": "IndexClass",
      "Product": "Search",
      "SessionKey": "ThreadId",
      "SessionKeyAction": "Add",
      "SessionLookup": null,
      "Examples": [
        "=>INFO  [MemtablePostFlush:18247] 2017-05-12 23:20:52,570  ColumnFamilyStore.java:1006 - Flushing SecondaryIndex Cql3SolrSecondaryIndex{columnDefs=[ColumnDefinition{name=appownrtxt, type=org.apache.cassandra.db.marshal.UTF8Type, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_appownrtxt_index, indexType=CUSTOM}, ColumnDefinition{name=maxaudtcretddt, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_maxaudtcretddt_index, indexType=CUSTOM}, ColumnDefinition{name=dlrshporgid, type=org.apache.cassandra.db.marshal.LongType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_dlrshporgid_index, indexType=CUSTOM}, ColumnDefinition{name=maxappasgnmtaudtdt, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_maxappasgnmtaudtdt_index, indexType=CUSTOM}, ColumnDefinition{name=chnlid, type=org.apache.cassandra.db.marshal.Int32Type, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_chnlid_index, indexType=CUSTOM}, ColumnDefinition{name=dcsnstatlkupid, type=org.apache.cassandra.db.marshal.Int32Type, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_dcsnstatlkupid_index, indexType=CUSTOM}, ColumnDefinition{name=appcretddt, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_appcretddt_index, indexType=CUSTOM}, ColumnDefinition{name=cntrtcretddt, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_cntrtcretddt_index, indexType=CUSTOM}, ColumnDefinition{name=appstatdt, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_appstatdt_index, indexType=CUSTOM}, ColumnDefinition{name=apprecvddt, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_apprecvddt_index, indexType=CUSTOM}, ColumnDefinition{name=hrflag, type=org.apache.cassandra.db.marshal.BooleanType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_hrflag_index, indexType=CUSTOM}, ColumnDefinition{name=lobid, type=org.apache.cassandra.db.marshal.Int32Type, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_lobid_index, indexType=CUSTOM}, ColumnDefinition{name=cmtmentcd, type=org.apache.cassandra.db.marshal.UTF8Type, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_cmtmentcd_index, indexType=CUSTOM}, ColumnDefinition{name=cntrtrecvddt, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_cntrtrecvddt_index, indexType=CUSTOM}, ColumnDefinition{name=apptaskaudtdtfltr, type=org.apache.cassandra.db.marshal.SetType(org.apache.cassandra.db.marshal.TimestampType), kind=REGULAR, componentIndex=0, indexName=coafstatim_application_apptaskaudtdtfltr_index, indexType=CUSTOM}, ColumnDefinition{name=fundddt, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_fundddt_index, indexType=CUSTOM}, ColumnDefinition{name=dcsndt, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_dcsndt_index, indexType=CUSTOM}, ColumnDefinition{name=appstatlkupid, type=org.apache.cassandra.db.marshal.Int32Type, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_appstatlkupid_index, indexType=CUSTOM}, ColumnDefinition{name=maxapptaskaudtcretddt, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_maxapptaskaudtcretddt_index, indexType=CUSTOM}, ColumnDefinition{name=solr_query, type=org.apache.cassandra.db.marshal.UTF8Type, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_solr_query_index, indexType=CUSTOM}, ColumnDefinition{name=notecretddtfltr, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_notecretddtfltr_index, indexType=CUSTOM}]}",
        "INFO  [MemtablePostFlush:18247] 2017-05-12 23:20:52,571  AbstractSolrSecondaryIndex.java:1133 - Executing hard commit on index coafstatim.application",
        "INFO  [MemtablePostFlush:18247] 2017-05-12 23:20:52,571  IndexWriter.java:3429 - commitInternalStart startTime=1494645652571",
        "INFO  [MemtablePostFlush:18247] 2017-05-12 23:20:52,763  IndexWriter.java:3454 - commitInternalComplete duration=192 ms startTime=1494645652571",
        "=>INFO  [StreamReceiveTask:1] 2017-09-23 16:32:32,763  SecondaryIndexManager.java:365 - Submitting index build of eaa_datauploadstatus_solr_query_index for data in BigTableReader(path='/ssd0/datastax/dse-data/eaa/datauploadstatus-baf504b050f811e694fd4f0af38b3566/mc-1936-big-Data.db')",
        "INFO  [StreamReceiveTask:1] 2017-09-23 16:32:32,775  AbstractSolrSecondaryIndex.java:1211 - Executing hard commit on index eaa.datauploadstatus",
        "INFO  [StreamReceiveTask:1] 2017-09-23 16:32:32,784  IndexWriter.java:3465 - commitInternalStart startTime=1506198752784",
        "INFO  [StreamReceiveTask:1] 2017-09-23 16:32:32,799  IndexWriter.java:3490 - commitInternalComplete duration=15 ms startTime=1506198752784",
        "INFO  [StreamReceiveTask:1] 2017-09-23 16:32:32,799  SecondaryIndexManager.java:376 - Index build of eaa_datauploadstatus_solr_query_index complete"
      ]
    },
    {
      "Description": "Solr Hard Commit (Excuting)",
      "TagId": 7.1,
      "SessionBeginTagId": 7.0,
      "MatchVersion": null,
      "LevelMatch": {
        "RegExStrings": [
          "INFO"
        ]
      },
      "ThreadIdMatch": {
        "RegExStrings": [
          "^MemtablePostFlush\\:",
          "^StreamReceiveTask\\:"
        ]
      },
      "FileNameMatch": {
        "RegExStrings": [
          "^AbstractSolrSecondaryIndex.java$"
        ]
      },
      "FileLineMatch": null,
      "MessageMatch": {
        "RegExStrings": [
          "^Executing\\s+hard\\s+commit\\s"
        ]
      },
      "ParseMessage": {
        "RegExStrings": [
          "^Executing\\s+hard\\s+commit\\s+on\\s+index\\s+(?$<DDLITEMNAME>)$"
        ]
      },
      "ParseThreadId": null,
      "EventType": "SessionBeginOrItem",
      "EventClass": "SolrHardCommit",
      "SubClass": null,
      "Product": "Search",
      "SessionKey": "ThreadId",
      "SessionKeyAction": "Read",
      "SessionLookup": null,
      "Examples": [
        "INFO  [MemtablePostFlush:18247] 2017-05-12 23:20:52,570  ColumnFamilyStore.java:1006 - Flushing SecondaryIndex Cql3SolrSecondaryIndex{columnDefs=[ColumnDefinition{name=appownrtxt, type=org.apache.cassandra.db.marshal.UTF8Type, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_appownrtxt_index, indexType=CUSTOM}, ColumnDefinition{name=maxaudtcretddt, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_maxaudtcretddt_index, indexType=CUSTOM}, ColumnDefinition{name=dlrshporgid, type=org.apache.cassandra.db.marshal.LongType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_dlrshporgid_index, indexType=CUSTOM}, ColumnDefinition{name=maxappasgnmtaudtdt, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_maxappasgnmtaudtdt_index, indexType=CUSTOM}, ColumnDefinition{name=chnlid, type=org.apache.cassandra.db.marshal.Int32Type, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_chnlid_index, indexType=CUSTOM}, ColumnDefinition{name=dcsnstatlkupid, type=org.apache.cassandra.db.marshal.Int32Type, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_dcsnstatlkupid_index, indexType=CUSTOM}, ColumnDefinition{name=appcretddt, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_appcretddt_index, indexType=CUSTOM}, ColumnDefinition{name=cntrtcretddt, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_cntrtcretddt_index, indexType=CUSTOM}, ColumnDefinition{name=appstatdt, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_appstatdt_index, indexType=CUSTOM}, ColumnDefinition{name=apprecvddt, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_apprecvddt_index, indexType=CUSTOM}, ColumnDefinition{name=hrflag, type=org.apache.cassandra.db.marshal.BooleanType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_hrflag_index, indexType=CUSTOM}, ColumnDefinition{name=lobid, type=org.apache.cassandra.db.marshal.Int32Type, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_lobid_index, indexType=CUSTOM}, ColumnDefinition{name=cmtmentcd, type=org.apache.cassandra.db.marshal.UTF8Type, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_cmtmentcd_index, indexType=CUSTOM}, ColumnDefinition{name=cntrtrecvddt, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_cntrtrecvddt_index, indexType=CUSTOM}, ColumnDefinition{name=apptaskaudtdtfltr, type=org.apache.cassandra.db.marshal.SetType(org.apache.cassandra.db.marshal.TimestampType), kind=REGULAR, componentIndex=0, indexName=coafstatim_application_apptaskaudtdtfltr_index, indexType=CUSTOM}, ColumnDefinition{name=fundddt, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_fundddt_index, indexType=CUSTOM}, ColumnDefinition{name=dcsndt, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_dcsndt_index, indexType=CUSTOM}, ColumnDefinition{name=appstatlkupid, type=org.apache.cassandra.db.marshal.Int32Type, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_appstatlkupid_index, indexType=CUSTOM}, ColumnDefinition{name=maxapptaskaudtcretddt, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_maxapptaskaudtcretddt_index, indexType=CUSTOM}, ColumnDefinition{name=solr_query, type=org.apache.cassandra.db.marshal.UTF8Type, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_solr_query_index, indexType=CUSTOM}, ColumnDefinition{name=notecretddtfltr, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_notecretddtfltr_index, indexType=CUSTOM}]}",
        "=>INFO  [MemtablePostFlush:18247] 2017-05-12 23:20:52,571  AbstractSolrSecondaryIndex.java:1133 - Executing hard commit on index coafstatim.application",
        "INFO  [MemtablePostFlush:18247] 2017-05-12 23:20:52,571  IndexWriter.java:3429 - commitInternalStart startTime=1494645652571",
        "INFO  [MemtablePostFlush:18247] 2017-05-12 23:20:52,763  IndexWriter.java:3454 - commitInternalComplete duration=192 ms startTime=1494645652571"
      ]
    },
    {
      "Description": "Solr Hard Commit (start)",
      "TagId": 7.2,
      "SessionBeginTagId": 7.0,
      "MatchVersion": null,
      "LevelMatch": {
        "RegExStrings": [
          "INFO"
        ]
      },
      "ThreadIdMatch": {
        "RegExStrings": [
          "^MemtablePostFlush\\:",
          "^StreamReceiveTask\\:"
        ]
      },
      "FileNameMatch": {
        "RegExStrings": [
          "^IndexWriter.java$"
        ]
      },
      "FileLineMatch": null,
      "MessageMatch": {
        "RegExStrings": [
          "^commitInternalStart\\s"
        ]
      },
      "ParseMessage": {
        "RegExStrings": [
          "^commitInternalStart\\s+startTime\\s*=\\s*(?<CommitStart>[0-9,\\-]+)"
        ]
      },
      "ParseThreadId": null,
      "EventType": "SessionBegin",
      "EventClass": "SolrHardCommit",
      "SubClass": null,
      "Product": "Search",
      "SessionKey": "ThreadId",
      "SessionKeyAction": "Read",
      "SessionLookup": "ThreadId + CommitStart",
      "SessionLookupAction": "DefineLabel,AppendTieOutId",
      "Examples": [
        "INFO  [MemtablePostFlush:18247] 2017-05-12 23:20:52,570  ColumnFamilyStore.java:1006 - Flushing SecondaryIndex Cql3SolrSecondaryIndex{columnDefs=[ColumnDefinition{name=appownrtxt, type=org.apache.cassandra.db.marshal.UTF8Type, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_appownrtxt_index, indexType=CUSTOM}, ColumnDefinition{name=maxaudtcretddt, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_maxaudtcretddt_index, indexType=CUSTOM}, ColumnDefinition{name=dlrshporgid, type=org.apache.cassandra.db.marshal.LongType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_dlrshporgid_index, indexType=CUSTOM}, ColumnDefinition{name=maxappasgnmtaudtdt, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_maxappasgnmtaudtdt_index, indexType=CUSTOM}, ColumnDefinition{name=chnlid, type=org.apache.cassandra.db.marshal.Int32Type, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_chnlid_index, indexType=CUSTOM}, ColumnDefinition{name=dcsnstatlkupid, type=org.apache.cassandra.db.marshal.Int32Type, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_dcsnstatlkupid_index, indexType=CUSTOM}, ColumnDefinition{name=appcretddt, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_appcretddt_index, indexType=CUSTOM}, ColumnDefinition{name=cntrtcretddt, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_cntrtcretddt_index, indexType=CUSTOM}, ColumnDefinition{name=appstatdt, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_appstatdt_index, indexType=CUSTOM}, ColumnDefinition{name=apprecvddt, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_apprecvddt_index, indexType=CUSTOM}, ColumnDefinition{name=hrflag, type=org.apache.cassandra.db.marshal.BooleanType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_hrflag_index, indexType=CUSTOM}, ColumnDefinition{name=lobid, type=org.apache.cassandra.db.marshal.Int32Type, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_lobid_index, indexType=CUSTOM}, ColumnDefinition{name=cmtmentcd, type=org.apache.cassandra.db.marshal.UTF8Type, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_cmtmentcd_index, indexType=CUSTOM}, ColumnDefinition{name=cntrtrecvddt, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_cntrtrecvddt_index, indexType=CUSTOM}, ColumnDefinition{name=apptaskaudtdtfltr, type=org.apache.cassandra.db.marshal.SetType(org.apache.cassandra.db.marshal.TimestampType), kind=REGULAR, componentIndex=0, indexName=coafstatim_application_apptaskaudtdtfltr_index, indexType=CUSTOM}, ColumnDefinition{name=fundddt, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_fundddt_index, indexType=CUSTOM}, ColumnDefinition{name=dcsndt, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_dcsndt_index, indexType=CUSTOM}, ColumnDefinition{name=appstatlkupid, type=org.apache.cassandra.db.marshal.Int32Type, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_appstatlkupid_index, indexType=CUSTOM}, ColumnDefinition{name=maxapptaskaudtcretddt, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_maxapptaskaudtcretddt_index, indexType=CUSTOM}, ColumnDefinition{name=solr_query, type=org.apache.cassandra.db.marshal.UTF8Type, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_solr_query_index, indexType=CUSTOM}, ColumnDefinition{name=notecretddtfltr, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_notecretddtfltr_index, indexType=CUSTOM}]}",
        "INFO  [MemtablePostFlush:18247] 2017-05-12 23:20:52,571  AbstractSolrSecondaryIndex.java:1133 - Executing hard commit on index coafstatim.application",
        "=>INFO  [MemtablePostFlush:18247] 2017-05-12 23:20:52,571  IndexWriter.java:3429 - commitInternalStart startTime=1494645652571",
        "INFO  [MemtablePostFlush:18247] 2017-05-12 23:20:52,763  IndexWriter.java:3454 - commitInternalComplete duration=192 ms startTime=1494645652571"
      ]
    },
    {
      "Description": "Solr Hard Commit (completed)",
      "TagId": 7.3,
      "SessionBeginTagId": 7.2,
      "MatchVersion": null,
      "LevelMatch": {
        "RegExStrings": [
          "INFO"
        ]
      },
      "ThreadIdMatch": {
        "RegExStrings": [
          "^MemtablePostFlush\\:",
          "^StreamReceiveTask\\:"
        ]
      },
      "FileNameMatch": {
        "RegExStrings": [
          "^IndexWriter.java$"
        ]
      },
      "FileLineMatch": null,
      "MessageMatch": {
        "RegExStrings": [
          "^commitInternalComplete\\s"
        ]
      },
      "ParseMessage": {
        "RegExStrings": [
          "^commitInternalComplete\\s+duration\\s*=\\s*(?$<DURATION>\\s*\\w*)\\s+startTime\\s*=\\s*(?<CommitStart>[0-9,\\-]+)"
        ]
      },
      "ParseThreadId": null,
      "EventType": "SessionEnd",
      "EventClass": "SolrHardCommit",
      "SubClass": null,
      "Product": "Search",
      "SessionLookup": "ThreadId + CommitStart",
      "SessionLookupAction": "ReadRemoveLabel",
      "Examples": [
        "INFO  [MemtablePostFlush:18247] 2017-05-12 23:20:52,570  ColumnFamilyStore.java:1006 - Flushing SecondaryIndex Cql3SolrSecondaryIndex{columnDefs=[ColumnDefinition{name=appownrtxt, type=org.apache.cassandra.db.marshal.UTF8Type, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_appownrtxt_index, indexType=CUSTOM}, ColumnDefinition{name=maxaudtcretddt, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_maxaudtcretddt_index, indexType=CUSTOM}, ColumnDefinition{name=dlrshporgid, type=org.apache.cassandra.db.marshal.LongType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_dlrshporgid_index, indexType=CUSTOM}, ColumnDefinition{name=maxappasgnmtaudtdt, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_maxappasgnmtaudtdt_index, indexType=CUSTOM}, ColumnDefinition{name=chnlid, type=org.apache.cassandra.db.marshal.Int32Type, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_chnlid_index, indexType=CUSTOM}, ColumnDefinition{name=dcsnstatlkupid, type=org.apache.cassandra.db.marshal.Int32Type, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_dcsnstatlkupid_index, indexType=CUSTOM}, ColumnDefinition{name=appcretddt, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_appcretddt_index, indexType=CUSTOM}, ColumnDefinition{name=cntrtcretddt, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_cntrtcretddt_index, indexType=CUSTOM}, ColumnDefinition{name=appstatdt, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_appstatdt_index, indexType=CUSTOM}, ColumnDefinition{name=apprecvddt, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_apprecvddt_index, indexType=CUSTOM}, ColumnDefinition{name=hrflag, type=org.apache.cassandra.db.marshal.BooleanType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_hrflag_index, indexType=CUSTOM}, ColumnDefinition{name=lobid, type=org.apache.cassandra.db.marshal.Int32Type, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_lobid_index, indexType=CUSTOM}, ColumnDefinition{name=cmtmentcd, type=org.apache.cassandra.db.marshal.UTF8Type, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_cmtmentcd_index, indexType=CUSTOM}, ColumnDefinition{name=cntrtrecvddt, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_cntrtrecvddt_index, indexType=CUSTOM}, ColumnDefinition{name=apptaskaudtdtfltr, type=org.apache.cassandra.db.marshal.SetType(org.apache.cassandra.db.marshal.TimestampType), kind=REGULAR, componentIndex=0, indexName=coafstatim_application_apptaskaudtdtfltr_index, indexType=CUSTOM}, ColumnDefinition{name=fundddt, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_fundddt_index, indexType=CUSTOM}, ColumnDefinition{name=dcsndt, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_dcsndt_index, indexType=CUSTOM}, ColumnDefinition{name=appstatlkupid, type=org.apache.cassandra.db.marshal.Int32Type, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_appstatlkupid_index, indexType=CUSTOM}, ColumnDefinition{name=maxapptaskaudtcretddt, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_maxapptaskaudtcretddt_index, indexType=CUSTOM}, ColumnDefinition{name=solr_query, type=org.apache.cassandra.db.marshal.UTF8Type, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_solr_query_index, indexType=CUSTOM}, ColumnDefinition{name=notecretddtfltr, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, componentIndex=0, indexName=coafstatim_application_notecretddtfltr_index, indexType=CUSTOM}]}",
        "INFO  [MemtablePostFlush:18247] 2017-05-12 23:20:52,571  AbstractSolrSecondaryIndex.java:1133 - Executing hard commit on index coafstatim.application",
        "INFO  [MemtablePostFlush:18247] 2017-05-12 23:20:52,571  IndexWriter.java:3429 - commitInternalStart startTime=1494645652571",
        "=> INFO  [MemtablePostFlush:18247] 2017-05-12 23:20:52,763  IndexWriter.java:3454 - commitInternalComplete duration=192 ms startTime=1494645652571"
      ]
    },
    {
      "Description": "Solr Index (completed)",
      "TagId": 7.4,
      "SessionBeginTagId": 7.0,
      "MatchVersion": null,
      "LevelMatch": {
        "RegExStrings": [
          "INFO"
        ]
      },
      "ThreadIdMatch": {
        "RegExStrings": [
          "^StreamReceiveTask\\:"
        ]
      },
      "FileNameMatch": {
        "RegExStrings": [
          "^SecondaryIndexManager.java$"
        ]
      },
      "FileLineMatch": null,
      "MessageMatch": {
        "RegExStrings": [
          "^Index\\sbuild\\s"
        ]
      },
      "ParseMessage": {
        "RegExStrings": [
          "^Index\\sbuild\\s\\w+\\s(?<SOLRINDEXNAME>[a-z0-9'\\-_$%+=!?<>^*&@/.]+)\\s+(?<state>\\w+)"
        ]
      },
      "ParseThreadId": null,
      "EventType": "SessionEnd",
      "EventClass": "SolrHardCommit",
      "SubClass": null,
      "Product": "Search",
      "SessionKey": "ThreadId",
      "SessionKeyAction": "ReadRemove",
      "Examples": [
        "INFO  [StreamReceiveTask:1] 2017-09-23 16:32:32,763  SecondaryIndexManager.java:365 - Submitting index build of eaa_datauploadstatus_solr_query_index for data in BigTableReader(path='/ssd0/datastax/dse-data/eaa/datauploadstatus-baf504b050f811e694fd4f0af38b3566/mc-1936-big-Data.db')",
        "INFO  [StreamReceiveTask:1] 2017-09-23 16:32:32,775  AbstractSolrSecondaryIndex.java:1211 - Executing hard commit on index eaa.datauploadstatus",
        "INFO  [StreamReceiveTask:1] 2017-09-23 16:32:32,784  IndexWriter.java:3465 - commitInternalStart startTime=1506198752784",
        "INFO  [StreamReceiveTask:1] 2017-09-23 16:32:32,799  IndexWriter.java:3490 - commitInternalComplete duration=15 ms startTime=1506198752784",
        "=>INFO  [StreamReceiveTask:1] 2017-09-23 16:32:32,799  SecondaryIndexManager.java:376 - Index build of eaa_datauploadstatus_solr_query_index complete"
      ]
    },
    {
      "Description": "Sharding Start",
      "TagId": 8.0,
      "MatchVersion": null,
      "LevelMatch": {
        "RegExStrings": [
          "INFO"
        ]
      },
      "FileNameMatch": {
        "RegExStrings": [
          "^ShardRouter.java$"
        ]
      },
      "MessageMatch": {
        "RegExStrings": [
          "^Updating shards\\s"
        ]
      },
      "ParseMessage": {
        "RegExStrings": [
          "^updating shards[a-z ]+/?\\s*(?$<NODE>)\\s+\\w+\\s\\w+\\sstatus=(?<action>\\w+)\\,?(?<token>\\s?\\-?[0-9]+\\,?)*",
          "^updating shards[a-z ]+/?\\s*(?$<NODE>)\\s+\\w+\\s\\w+\\s(?<action>schema)=?(?$<DDLSCHEMAID>)?$",
          "^updating shards[a-z ]+/?\\s*(?$<NODE>)\\s+\\w+\\s(?<action>dead)$"
        ]
      },
      "ParseThreadId": null,
      "EventType": "SessionBegin",
      "EventClass": "Detection, Node, Shard",
      "SubClass": "action + ' ' + NODE",
      "Product": "Cassandra",
      "SessionKey": "'shardEvent' + NODE + token",
      "SessionKeyAction": "Add",
      "SessionLookup": "'shardEvent' + NODE",
      "SessionLookupAction": "DefineLabel, Stack",
      "Examples": [
        "=>INFO  [SharedPool-Worker-1] 2018-01-07 22:53:49,522  ShardRouter.java:605 - Updating shards state due to endpoint /10.0.0.2 changing state STATUS=NORMAL,-1051573540106914992",
        "=>INFO  [GossipStage:1] 2018-01-07 22:56:01,123  ShardRouter.java:645 - Updating shards state due to endpoint /10.0.0.2 changing state SCHEMA=541fdec0-47c9-33fd-b79c-4a37acd21019",
        "=>INFO  [GossipStage:1] 2018-01-07 22:56:02,345  ShardRouter.java:645 - Updating shards state due to endpoint /10.0.0.2 being dead",
        "INFO  [GossipStage:1] 2018-01-07 22:53:49,525  StorageService.java:1790 - Nodes /10.0.0.2 and /10.0.0.1 have the same token -1051573540106914992.  /10.0.0.2 is the new owner",
        "WARN  [GossipStage:1] 2018-01-07 22:53:49,905  TokenMetadata.java:196 - Token -1051573540106914992 changing ownership from /10.0.0.1 to /10.0.0.2",
        "NFO  [GossipStage:1] 2018-01-07 22:53:49,918  TokenMetadata.java:414 - Updating topology for /10.0.0.2"
      ]
    },
    {
      "Description": "Sharding Same Token",
      "TagId": 8.1,
      "SessionBeginTagId": 8.0,
      "MatchVersion": null,
      "LevelMatch": {
        "RegExStrings": [
          "INFO"
        ]
      },
      "FileNameMatch": {
        "RegExStrings": [
          "^StorageService.java$"
        ]
      },
      "FileLineMatch": null,
      "MessageMatch": {
        "RegExStrings": [
          "^Nodes\\s/?[^ ]+\\sand\\s/?[^ ]+\\shave the same token "
        ]
      },
      "ParseMessage": {
        "RegExStrings": [
          "^nodes/?\\s*[^ ]+\\s+and\\s+[^ ]+\\s+\\w+\\s+\\w+\\s+\\w+\\s+token\\s+(?<token>\\s?\\-?[0-9]+\\,?)*\\.?\\s+/?\\s*(?$<NODE>)\\s"
        ]
      },
      "ParseThreadId": null,
      "EventType": "SessionIgnore",
      "EventClass": "Detection, Node, Shard",
      "SubClass": "'New Ownership ' + NODE",
      "Product": "Cassandra",
      "SessionKey": "'shardEvent' + NODE + token",
      "SessionKeyAction": "Read",
      "Examples": [
        "INFO  [SharedPool-Worker-1] 2018-01-07 22:53:49,522  ShardRouter.java:605 - Updating shards state due to endpoint /10.0.0.2 changing state STATUS=NORMAL,-1051573540106914992",
        "INFO  [GossipStage:1] 2018-01-07 22:56:01,123  ShardRouter.java:645 - Updating shards state due to endpoint /10.0.0.2 changing state SCHEMA=541fdec0-47c9-33fd-b79c-4a37acd21019",
        "INFO  [GossipStage:1] 2018-01-07 22:56:02,345  ShardRouter.java:645 - Updating shards state due to endpoint /10.0.0.2 being dead",
        "=>INFO  [GossipStage:1] 2018-01-07 22:53:49,525  StorageService.java:1790 - Nodes /10.0.0.2 and /10.0.0.1 have the same token -1051573540106914992.  /10.0.0.2 is the new owner",
        "WARN  [GossipStage:1] 2018-01-07 22:53:49,905  TokenMetadata.java:196 - Token -1051573540106914992 changing ownership from /10.0.0.1 to /10.0.0.2",
        "NFO  [GossipStage:1] 2018-01-07 22:53:49,918  TokenMetadata.java:414 - Updating topology for /10.0.0.2"
      ]
    },
    {
      "Description": "Sharding Same Token",
      "TagId": 8.2,
      "SessionBeginTagId": 8.0,
      "MatchVersion": null,
      "LevelMatch": {
        "RegExStrings": [
          "WARN"
        ]
      },
      "FileNameMatch": {
        "RegExStrings": [
          "^TokenMetadata.java$"
        ]
      },
      "FileLineMatch": null,
      "MessageMatch": {
        "RegExStrings": [
          "^Token \\-?[0-9]+ changing ownership "
        ]
      },
      "ParseMessage": {
        "RegExStrings": [
          "^Token\\s+(?<token>\\s?\\-?[0-9]+\\,?)\\s+\\w+\\s+\\w+\\s+\\w+\\s+/?\\s*[^ ]+\\sto\\s+(?$<NODE>)$"
        ]
      },
      "ParseThreadId": null,
      "EventType": "SessionItem, SingleInstance",
      "EventClass": "Detection, Node, Shard",
      "SubClass": "'Owership Changed ' + NODE",
      "Product": "Cassandra",
      "SessionKey": "'shardEvent' + NODE + token",
      "SessionKeyAction": "Read",
      "Examples": [
        "INFO  [SharedPool-Worker-1] 2018-01-07 22:53:49,522  ShardRouter.java:605 - Updating shards state due to endpoint /10.0.0.2 changing state STATUS=NORMAL,-1051573540106914992",
        "INFO  [GossipStage:1] 2018-01-07 22:56:01,123  ShardRouter.java:645 - Updating shards state due to endpoint /10.0.0.2 changing state SCHEMA=541fdec0-47c9-33fd-b79c-4a37acd21019",
        "INFO  [GossipStage:1] 2018-01-07 22:56:02,345  ShardRouter.java:645 - Updating shards state due to endpoint /10.0.0.2 being dead",
        "INFO  [GossipStage:1] 2018-01-07 22:53:49,525  StorageService.java:1790 - Nodes /10.0.0.2 and /10.0.0.1 have the same token -1051573540106914992.  /10.0.0.2 is the new owner",
        "=>WARN  [GossipStage:1] 2018-01-07 22:53:49,905  TokenMetadata.java:196 - Token -1051573540106914992 changing ownership from /10.0.0.1 to /10.0.0.2",
        "NFO  [GossipStage:1] 2018-01-07 22:53:49,918  TokenMetadata.java:414 - Updating topology for /10.0.0.2"
      ]
    },
    {
      "Description": "Sharding Updating",
      "TagId": 8.3,
      "SessionBeginTagId": 8.0,
      "MatchVersion": null,
      "LevelMatch": {
        "RegExStrings": [
          "INFO"
        ]
      },
      "FileNameMatch": {
        "RegExStrings": [
          "^TokenMetadata.java$"
        ]
      },
      "FileLineMatch": null,
      "MessageMatch": {
        "RegExStrings": [
          "^Updating topology for "
        ]
      },
      "ParseMessage": {
        "RegExStrings": [
          "^Updating\\s+\\w+\\s+\\w+\\s+/?\\s*(?$<NODE>)"
        ]
      },
      "ParseThreadId": null,
      "EventType": "SessionEnd",
      "EventClass": "Detection, Node, Shard",
      "SubClass": "'Topology Updated ' + NODE",
      "Product": "Cassandra",
      "SessionLookup": "'shardEvent' + NODE",
      "SessionLookupAction": "ReadRemoveLabel",
      "Examples": [
        "INFO  [SharedPool-Worker-1] 2018-01-07 22:53:49,522  ShardRouter.java:605 - Updating shards state due to endpoint /10.0.0.2 changing state STATUS=NORMAL,-1051573540106914992",
        "INFO  [GossipStage:1] 2018-01-07 22:56:01,123  ShardRouter.java:645 - Updating shards state due to endpoint /10.0.0.2 changing state SCHEMA=541fdec0-47c9-33fd-b79c-4a37acd21019",
        "INFO  [GossipStage:1] 2018-01-07 22:56:02,345  ShardRouter.java:645 - Updating shards state due to endpoint /10.0.0.2 being dead",
        "INFO  [GossipStage:1] 2018-01-07 22:53:49,525  StorageService.java:1790 - Nodes /10.0.0.2 and /10.0.0.1 have the same token -1051573540106914992.  /10.0.0.2 is the new owner",
        "WARN  [GossipStage:1] 2018-01-07 22:53:49,905  TokenMetadata.java:196 - Token 887656048495882619 changing ownership from /10.0.0.1 to /10.0.0.2",
        "=>INFO  [GossipStage:1] 2018-01-07 22:53:49,918  TokenMetadata.java:414 - Updating topology for /10.0.0.2"
      ]
    },
    {
      "Description": "Create table or view",
      "TagId": 9.0,
      "MatchVersion": null,
      "LevelMatch": {
        "RegExStrings": [
          "INFO"
        ]
      },
      "FileNameMatch": {
        "RegExStrings": [
          "^MigrationManager.java$"
        ]
      },
      "FileLineMatch": null,
      "MessageMatch": {
        "RegExStrings": [
          "^Create new (table|columnfamily|view)"
        ]
      },
      "ParseMessage": {
        "RegExStrings": [
          "^(?<action>Create) new\\s+(?<type>table|columnfamily)\\s*:\\s+org.apache.cassandra.config.CFMetaData@[0-9a-f]+\\[cfid=(?$<DDLSCHEMAID>),ksname=(?$<KEYSPACE>),cfname=(?$<DDLITEMNAME>)",
          "^(?<action>Create) new\\s+(?<type>view)\\s*:\\s+org.apache.cassandra.config.ViewDefinition@[0-9a-f]+\\[ksname=(?<KEYSPACE>[a-z0-9'\\-_$%+=!?<>^*&@]+),viewname=(?$<DDLITEMNAME>),basetableid=(?<basetaleid>[a-f0-9\\-]+),baseTableName=(?<basetablename>[a-z0-9'\\-_$%+=!?<>^*&@]+),.+cfid=(?$<DDLSCHEMAID>),"
        ]
      },
      "ParseThreadId": null,
      "EventType": "SingleInstance",
      "EventClass": "Detection, Schema, Change",
      "SubClass": "'New Table|View'",
      "Product": "Cassandra",
      "Examples": [
        "=> INFO  [SharedPool-Worker-1] 2018-01-07 22:58:02,456  MigrationManager.java:249 - Create new ColumnFamily: org.apache.cassandra.config.CFMetaData@6d3c6562[cfId=ed1b46c1-3a72-11e7-9ff5-a12e162c4992,ksName=loan_servicing,cfName=bh_skillset_look_up,cfType=Standard,comparator=org.apache.cassandra.db.marshal.CompositeType(org.apache.cassandra.db.marshal.UTF8Type,org.apache.cassandra.db.marshal.UTF8Type,org.apache.cassandra.db.marshal.UTF8Type),comment=,readRepairChance=0.0,dcLocalReadRepairChance=0.1,gcGraceSeconds=172800,defaultValidator=org.apache.cassandra.db.marshal.BytesType,keyValidator=org.apache.cassandra.db.marshal.Int32Type,minCompactionThreshold=4,maxCompactionThreshold=32,columnMetadata=[ColumnDefinition{name=workgroup, type=org.apache.cassandra.db.marshal.UTF8Type, kind=REGULAR, componentIndex=2, indexName=null, indexType=null}, ColumnDefinition{name=substrm, type=org.apache.cassandra.db.marshal.UTF8Type, kind=REGULAR, componentIndex=2, indexName=null, indexType=null}, ColumnDefinition{name=end_dt_txt, type=org.apache.cassandra.db.marshal.UTF8Type, kind=REGULAR, componentIndex=2, indexName=null, indexType=null}, ColumnDefinition{name=skillset_name, type=org.apache.cassandra.db.marshal.UTF8Type, kind=CLUSTERING_COLUMN, componentIndex=0, indexName=null, indexType=null}, ColumnDefinition{name=id, type=org.apache.cassandra.db.marshal.Int32Type, kind=PARTITION_KEY, componentIndex=null, indexName=null, indexType=null}, ColumnDefinition{name=start_dt_txt, type=org.apache.cassandra.db.marshal.UTF8Type, kind=CLUSTERING_COLUMN, componentIndex=1, indexName=null, indexType=null}],compactionStrategyClass=class org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy,compactionStrategyOptions={},compressionParameters={sstable_compression=org.apache.cassandra.io.compress.LZ4Compressor},bloomFilterFpChance=0.01,memtableFlushPeriod=0,caching={\"keys\":\"ALL\", \"rows_per_partition\":\"NONE\"},defaultTimeToLive=0,minIndexInterval=128,maxIndexInterval=2048,speculativeRetry=99.0PERCENTILE,droppedColumns={},triggers=[],isDense=false]",
        "=> INFO  [SharedPool-Worker-1] 2018-01-18 21:56:17,200  MigrationManager.java:342 - Create new table: org.apache.cassandra.config.CFMetaData@608aebd8[cfId=b36ea3f1-fccc-11e7-83c7-9fe59a0dddc1,ksName=keyspace1,cfName=digitalasset_3_0_2,flags=[COMPOUND],params=TableParams{comment=, read_repair_chance=0.0, dclocal_read_repair_chance=0.1, bloom_filter_fp_chance=0.01, crc_check_chance=1.0, gc_grace_seconds=3600, default_time_to_live=0, memtable_flush_period_in_ms=0, min_index_interval=128, max_index_interval=2048, speculative_retry=99PERCENTILE, caching={'keys' : 'ALL', 'rows_per_partition' : 'NONE'}, compaction=CompactionParams{class=org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy, options={max_threshold=32, min_threshold=4}}, compression=org.apache.cassandra.schema.CompressionParams@a29ec320, extensions={}},comparator=comparator(org.apache.cassandra.db.marshal.UTF8Type, org.apache.cassandra.db.marshal.UTF8Type, org.apache.cassandra.db.marshal.UTF8Type),partitionColumns=[[] | [filetype id lastupdated lastupdatedby tags]],partitionKeyColumns=[ColumnDefinition{name=marketname, type=org.apache.cassandra.db.marshal.UTF8Type, kind=PARTITION_KEY, position=0}],clusteringColumns=[ColumnDefinition{name=restaurantid, type=org.apache.cassandra.db.marshal.UTF8Type, kind=CLUSTERING, position=0}, ColumnDefinition{name=virtualpath, type=org.apache.cassandra.db.marshal.UTF8Type, kind=CLUSTERING, position=1}, ColumnDefinition{name=filename, type=org.apache.cassandra.db.marshal.UTF8Type, kind=CLUSTERING, position=2}],keyValidator=org.apache.cassandra.db.marshal.UTF8Type,columnMetadata=[ColumnDefinition{name=id, type=org.apache.cassandra.db.marshal.UUIDType, kind=REGULAR, position=-1}, ColumnDefinition{name=restaurantid, type=org.apache.cassandra.db.marshal.UTF8Type, kind=CLUSTERING, position=0}, ColumnDefinition{name=filetype, type=org.apache.cassandra.db.marshal.UTF8Type, kind=REGULAR, position=-1}, ColumnDefinition{name=tags, type=org.apache.cassandra.db.marshal.UTF8Type, kind=REGULAR, position=-1}, ColumnDefinition{name=filename, type=org.apache.cassandra.db.marshal.UTF8Type, kind=CLUSTERING, position=2}, ColumnDefinition{name=lastupdatedby, type=org.apache.cassandra.db.marshal.UTF8Type, kind=REGULAR, position=-1}, ColumnDefinition{name=marketname, type=org.apache.cassandra.db.marshal.UTF8Type, kind=PARTITION_KEY, position=0}, ColumnDefinition{name=virtualpath, type=org.apache.cassandra.db.marshal.UTF8Type, kind=CLUSTERING, position=1}, ColumnDefinition{name=lastupdated, type=org.apache.cassandra.db.marshal.TimestampType, kind=REGULAR, position=-1}],droppedColumns={},triggers=[],indexes=[]]",
        "=> INFO  [SharedPool-Worker-1] 2018-01-18 21:59:14,423  MigrationManager.java:356 - Create new view: org.apache.cassandra.config.ViewDefinition@365fc22a[ksName=keyspace1,viewName=view1,baseTableId=08bdd2d2-126e-11e7-8866-d792efac3044,baseTableName=scores,includeAllColumns=false,whereClause=user IS NOT NULL AND game IS NOT NULL AND year IS NOT NULL AND month IS NOT NULL AND day IS NOT NULL,metadata=org.apache.cassandra.config.CFMetaData@1ecaf2c7[cfId=1d109250-fccd-11e7-83c7-9fe59a0dddc1,ksName=keyspace1,cfName=view1,flags=[COMPOUND],params=TableParams{comment=, read_repair_chance=0.0, dclocal_read_repair_chance=0.1, bloom_filter_fp_chance=0.01, crc_check_chance=1.0, gc_grace_seconds=864000, default_time_to_live=0, memtable_flush_period_in_ms=0, min_index_interval=128, max_index_interval=2048, speculative_retry=99PERCENTILE, caching={'keys' : 'ALL', 'rows_per_partition' : 'NONE'}, compaction=CompactionParams{class=org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy, options={max_threshold=32, min_threshold=4}}, compression=org.apache.cassandra.schema.CompressionParams@a29ec320, extensions={}},comparator=comparator(org.apache.cassandra.db.marshal.UTF8Type, org.apache.cassandra.db.marshal.Int32Type, org.apache.cassandra.db.marshal.Int32Type, org.apache.cassandra.db.marshal.Int32Type),partitionColumns=[[] | []],partitionKeyColumns=[ColumnDefinition{name=user, type=org.apache.cassandra.db.marshal.UTF8Type, kind=PARTITION_KEY, position=0}],clusteringColumns=[ColumnDefinition{name=game, type=org.apache.cassandra.db.marshal.UTF8Type, kind=CLUSTERING, position=0}, ColumnDefinition{name=year, type=org.apache.cassandra.db.marshal.Int32Type, kind=CLUSTERING, position=1}, ColumnDefinition{name=month, type=org.apache.cassandra.db.marshal.Int32Type, kind=CLUSTERING, position=2}, ColumnDefinition{name=day, type=org.apache.cassandra.db.marshal.Int32Type, kind=CLUSTERING, position=3}],keyValidator=org.apache.cassandra.db.marshal.UTF8Type,columnMetadata=[ColumnDefinition{name=game, type=org.apache.cassandra.db.marshal.UTF8Type, kind=CLUSTERING, position=0}, ColumnDefinition{name=user, type=org.apache.cassandra.db.marshal.UTF8Type, kind=PARTITION_KEY, position=0}, ColumnDefinition{name=year, type=org.apache.cassandra.db.marshal.Int32Type, kind=CLUSTERING, position=1}, ColumnDefinition{name=day, type=org.apache.cassandra.db.marshal.Int32Type, kind=CLUSTERING, position=3}, ColumnDefinition{name=month, type=org.apache.cassandra.db.marshal.Int32Type, kind=CLUSTERING, position=2}],droppedColumns={},triggers=[],indexes=[]]]",
        "Note that when indexes are created they are updates on the base table"
      ]
    },
    {
      "Description": "Create keyspace",
      "TagId": 10.0,
      "MatchVersion": null,
      "LevelMatch": {
        "RegExStrings": [
          "INFO"
        ]
      },
      "FileNameMatch": {
        "RegExStrings": [
          "^MigrationManager.java$"
        ]
      },
      "FileLineMatch": null,
      "MessageMatch": {
        "RegExStrings": [
          "^Create new Keyspace"
        ]
      },
      "ParseMessage": {
        "RegExStrings": [
          "^(?<action>Create) new\\s+(?<type>Keyspace)\\s*:\\s+KeyspaceMetadata\\{name=(?$<KEYSPACE>),"
        ]
      },
      "ParseThreadId": null,
      "EventType": "SingleInstance",
      "EventClass": "Detection, Schema, Change",
      "SubClass": "'New Keyspace'",
      "Product": "Cassandra",
      "Examples": [
        "=> INFO  [SharedPool-Worker-1] 2018-01-18 22:02:20,249  MigrationManager.java:302 - Create new Keyspace: KeyspaceMetadata{name=keyspace1, params=KeyspaceParams{durable_writes=true, replication=ReplicationParams{class=org.apache.cassandra.locator.SimpleStrategy, replication_factor=1}}, tables=[], views=[], functions=[], types=[]}"
      ]
    },
    {
      "Description": "Update keyspace, table, columnfamily, or view",
      "TagId": 11.0,
      "MatchVersion": null,
      "LevelMatch": {
        "RegExStrings": [
          "INFO"
        ]
      },
      "FileNameMatch": {
        "RegExStrings": [
          "^MigrationManager.java$"
        ]
      },
      "FileLineMatch": null,
      "MessageMatch": {
        "RegExStrings": [
          "^Update (ColumnFamily|table|view|keyspace) "
        ]
      },
      "ParseMessage": {
        "RegExStrings": [
          "^(?<action>Update)\\s+(?<type>ColumnFamily|table|view)\\s+(?$<DDLITEMNAME>)\\s",
          "^(?<action>Update)\\s+(?<type>Keyspace)\\s+(?$<KEYSPACE>)\\s"
        ]
      },
      "ParseThreadId": null,
      "EventType": "SingleInstance",
      "EventClass": "Detection, Schema, Change",
      "SubClass": "'Updating CQL Item'",
      "Product": "Cassandra",
      "Examples": [
        "=> INFO  [SharedPool-Worker-2] 2018-01-07 22:58:03,789  MigrationManager.java:298 - Update ColumnFamily 'loan_servicing/ewfm' From org.apache.cassandra.config.CFMetaData@1988c474[cfId=017d9860-3f84-11e6-9023-2da642d6c5be,ksName=loan_servicing,cfName=ewfm,cfType=Standard,comparator=org.apache.cassandra.db.marshal.CompositeType(org.apache.cassandra.db.marshal.UTF8Type,org.apache.cassandra.db.marshal.UTF8Type)",
        "=> INFO  [SharedPool-Worker-1] 2018-01-07 22:58:01,123  MigrationManager.java:279 - Update Keyspace 'OpsCenter' From KSMetaData{name=OpsCenter, strategyClass=NetworkTopologyStrategy, strategyOptions={us-east-dsestorage=1, us-west-2-dsestorage=1, us-west-2-2-dsestorage=1},",
        "=> INFO  [SharedPool-Worker-1] 2018-01-18 21:49:08,725  MigrationManager.java:413 - Update table 'keyspace1/digitalasset_3_0_2' From org.apache.cassandra.config.CFMetaData@69e7f50b[cfId=980fca72-2ea6-11e7-8ff9-2901fcc7f505,ksName=keyspace1,cfName=digitalasset_3_0_2,flags=[COMPOUND],params=TableParams{comment=, read_repair_chance=0.0, dclocal_read_repair_chance=0.1, bloom_filter_fp_chance=0.01, crc_chec",
        "Note that indexes are updates on the base table"
      ]
    },
    {
      "Description": "Drop keyspace, table, columnfamily, or view",
      "TagId": 12.0,
      "MatchVersion": null,
      "LevelMatch": {
        "RegExStrings": [
          "INFO"
        ]
      },
      "FileNameMatch": {
        "RegExStrings": [
          "^MigrationManager.java$"
        ]
      },
      "FileLineMatch": null,
      "MessageMatch": {
        "RegExStrings": [
          "^Drop (ColumnFamily|table|view|keyspace) "
        ]
      },
      "ParseMessage": {
        "RegExStrings": [
          "^(?<action>Drop)\\s+(?<type>ColumnFamily|table|view)\\s+(?$<DDLITEMNAME>)\\s?",
          "^(?<action>Drop)\\s+(?<type>Keyspace)\\s+(?$<KEYSPACE>)\\s?"
        ]
      },
      "ParseThreadId": null,
      "EventType": "SingleInstance",
      "EventClass": "Detection, Schema, Change",
      "SubClass": "'Drop CQL Item'",
      "Product": "Cassandra",
      "Examples": [
        "=> INFO  [SharedPool-Worker-4] 2018-01-07 22:58:04,012  MigrationManager.java:326 - Drop Keyspace 'validation'",
        "=> INFO  [SharedPool-Worker-1] 2018-01-18 21:55:04,410  MigrationManager.java:464 - Drop table 'keyspace1/digitalasset_3_0_2'",
        "=> INFO  [SharedPool-Worker-1] 2018-01-18 21:58:33,418  MigrationManager.java:475 - Drop table 'keyspace1/view1'",
        "Note that when indexes are dropped thay are updates on the base table"
      ]
    },
    {
      "Description": "GC",
      "TagId": 13.0,
      "MatchVersion": null,
      "LevelMatch": {
        "RegExStrings": [
          "INFO|WARN"
        ]
      },
      "FileNameMatch": {
        "RegExStrings": [
          "^GCInspector.java$"
        ]
      },
      "FileLineMatch": null,
      "MessageMatch": {
        "RegExStrings": [
          "^(GC for ParNew:|ConcurrentMarkSweep GC|G1 Young Generation GC) "
        ]
      },
      "ParseMessage": {
        "RegExStrings": [
          "^GC\\s+for\\s+(?<GC>ParNew):\\s+(?$<DURATION>\\s*\\w+)\\s+\\w+\\s+(?<nbrcollections>[0-9]+)\\s+collections\\,\\s+(?<usedmemory_bytes>[0-9]+)\\s+used;\\s+max\\s+\\w+\\s(?<maxmemory_bytes>[0-9]+)",
          "^ConcurrentMarkSweep\\s+GC\\s+\\w+\\s+(?$<DURATION>\\s*\\w+)\\.\\s+(?<GC>CMS)\\s+Old\\s+Gen:\\s+(?<oldgenfrom_bytes>[0-9]+)\\s+\\->\\s+(?<oldgento_bytes>[0-9]+);\\s+Par\\s+Eden\\s+Space:\\s+(?<paredenspacefrom_bytes>[0-9]+)\\s+\\->\\s+(?<paredenspaceto_bytes>[0-9]+)",
          "^G1\\s+Young\\s+\\w+\\s+GC\\s+\\w+\\s+(?<DURATION>[0-9,.]+\\s*\\w+)\\.(?:\\s+(?<GC>G1)\\s+Eden\\s+Space:\\s+(?<edenspacefrom_bytes>[0-9]+)\\s+\\->\\s+(?<edenspaceto_bytes>[0-9]+);)?(?:\\s+G1\\s+Old\\s+Gen:\\s+(?<oldgenfrom_bytes>[0-9]+)\\s+\\->\\s+(?<oldgento_bytes>[0-9]+);)?(?:\\s+G1\\s+Survivor\\s+Space:\\s+(?<survivorspacefrom_bytes>[0-9]+)\\s+\\->\\s+(?<survivorspaceto_bytes>[0-9]+))?"
        ]
      },
      "ParseThreadId": null,
      "EventType": "SessionDefinedByDuration",
      "EventClass": "GC",
      "SubClass": "GC",
      "Product": "Cassandra",
      "AnalyticsGroup": "GCStats",
      "Examples": [
        "=> INFO [ScheduledTasks:1] 2017-01-22 19:11:57,055 GCInspector.java:116 - GC for ParNew: 215 ms for 1 collections, 2617040800 used; max is 4187619328",
        "=> INFO  [Service Thread] 2017-01-16 13:51:39,295  GCInspector.java:258 - ConcurrentMarkSweep GC in 491ms.  CMS Old Gen: 3201269976 -> 1128616640; Par Eden Space: 1145856 -> 824106248;",
        "=> INFO  [Service Thread] 2017-05-01 01:34:24,475  GCInspector.java:258 - G1 Young Generation GC in 265ms.  G1 Eden Space: 16307453952 -> 0; G1 Survivor Space: 436207616 -> 444596224;",
        "=> WARN  [Service Thread] 2018-03-02 04:23:15,916  GCInspector.java:282 - G1 Young Generation GC in 1558ms.  G1 Eden Space: 3053453312 -> 0; G1 Old Gen: 18404605968 -> 15753805840; G1 Survivor Space: 369098752 -> 436207616;",
        "=> WARN  [Service Thread] 2018-03-02 04:23:15,916  GCInspector.java:282 - G1 Young Generation GC in 504ms.  G1 Eden Space: 7205814272 -> 0; G1 Old Gen: 5762973968 -> 6270484744;)"
      ]
    },
    {
      "Description": "Pool Status",
      "TagId": 14.0,
      "MatchVersion": null,
      "LevelMatch": {
        "RegExStrings": [
          "INFO"
        ]
      },
      "FileNameMatch": {
        "RegExStrings": [
          "^StatusLogger.java$"
        ]
      },
      "FileLineMatch": {
        "RegExStrings": [
          "66|56|75|87|78"
        ]
      },
      "ThreadIdMatch": {
        "RegExStrings": [
          "^Service Thread$"
        ]
      },
      "ParseMessage": {
        "RegExStrings": [
          "(?<SUBCLASS>[a-z]+)\\s+(?<nbractive>[0-9,]+)\\s+(?<nbrpending>[0-9,]+)\\s+(?<nbrcompleted>[0-9,]+)\\s+(?<nbrblocked>[0-9,]+)\\s+(?<nbralltimeblocked>[0-9,]+)",
          "(?<SUBCLASS>(CompactionManager|MessagingService))\\s+(?<nbractive>[0-9,/na]+)\\s+(?<nbrpending>[0-9,/na]+)"
        ]
      },
      "ParseThreadId": null,
      "EventType": "SingleInstance",
      "EventClass": "Pools,Stats",
      "SubClass": null,
      "Product": "Cassandra",
      "AnalyticsGroup": "StatusLoggerPoolStats",
      "Examples": [
        "INFO  [Service Thread] 2017-01-16 13:51:39,296  StatusLogger.java:51 - Pool Name                    Active   Pending      Completed   Blocked  All Time Blocked",
        "INFO  [Service Thread] 2017-01-16 13:51:39,296  StatusLogger.java:66 - MutationStage                     0         0      144664687         0                 0",
        "INFO  [Service Thread] 2017-01-16 13:51:39,297  StatusLogger.java:66 - ReadStage                         0         0       10320546         0                 0",
        "INFO  [Service Thread] 2017-01-16 13:51:39,297  StatusLogger.java:66 - RequestResponseStage              0         0       64807674         0                 0",
        "INFO  [Service Thread] 2017-01-16 13:51:39,297  StatusLogger.java:66 - ReadRepairStage                   0         0          83328         0                 0",
        "INFO  [Service Thread] 2017-01-16 13:51:39,298  StatusLogger.java:66 - CounterMutationStage              1         2              0         3                 4",
        "INFO  [Service Thread] 2017-01-16 13:51:39,298  StatusLogger.java:66 - MiscStage                         0         0              0         0                 0",
        "INFO  [Service Thread] 2017-01-16 13:51:39,298  StatusLogger.java:66 - AntiEntropySessions               0         0           1353         0                 0",
        "INFO  [Service Thread] 2017-01-16 13:51:39,298  StatusLogger.java:66 - HintedHandoff                     0         0             36         0                 0",
        "INFO  [Service Thread] 2017-01-16 13:51:39,299  StatusLogger.java:66 - GossipStage                       0         0        1971739         0                 0",
        "INFO  [Service Thread] 2017-01-16 13:51:39,299  StatusLogger.java:66 - CacheCleanupExecutor              0         0              0         0                 0",
        "INFO  [Service Thread] 2017-01-16 13:51:39,299  StatusLogger.java:66 - InternalResponseStage             0         0         161902         0                 0",
        "INFO  [Service Thread] 2017-01-16 13:51:39,299  StatusLogger.java:66 - CommitLogArchiver                 0         0              0         0                 0",
        "INFO  [Service Thread] 2017-01-16 13:51:39,300  StatusLogger.java:66 - ValidationExecutor                0         0          16697         0                 0",
        "INFO  [Service Thread] 2017-01-16 13:51:39,300  StatusLogger.java:66 - MigrationStage                    0         0         161900         0                 0",
        "INFO  [Service Thread] 2017-01-16 13:51:39,300  StatusLogger.java:66 - CompactionExecutor                0         0         852524         0                 0",
        "INFO  [Service Thread] 2017-01-16 13:51:39,301  StatusLogger.java:66 - AntiEntropyStage                  0         0          73188         0                 0",
        "INFO  [Service Thread] 2017-01-16 13:51:39,301  StatusLogger.java:66 - PendingRangeCalculator            0         0             30         0                 0",
        "INFO  [Service Thread] 2017-01-16 13:51:39,301  StatusLogger.java:66 - Sampler                           0         0              0         0                 0",
        "INFO  [Service Thread] 2017-01-16 13:51:39,301  StatusLogger.java:66 - MemtableFlushWriter               0         0          49178         0                 0",
        "INFO  [Service Thread] 2017-01-16 13:51:39,301  StatusLogger.java:66 - MemtablePostFlush                 0         0          64922         0                 0",
        "INFO  [Service Thread] 2017-01-16 13:51:39,302  StatusLogger.java:66 - MemtableReclaimMemory             0         0          49178         0                 0",
        "INFO  [Service Thread] 2017-01-16 13:51:39,302  StatusLogger.java:75 - CompactionManager                 0         0",
        "INFO  [Service Thread] 2017-01-16 13:51:39,302  StatusLogger.java:87 - MessagingService                n/a       0/0"
      ]
    },
    {
      "Description": "Cache Status",
      "TagId": 15.0,
      "MatchVersion": null,
      "LevelMatch": {
        "RegExStrings": [
          "INFO"
        ]
      },
      "FileNameMatch": {
        "RegExStrings": [
          "^StatusLogger.java$"
        ]
      },
      "FileLineMatch": {
        "RegExStrings": [
          "99|105|90|96"
        ]
      },
      "ThreadIdMatch": {
        "RegExStrings": [
          "^Service Thread$"
        ]
      },
      "ParseMessage": {
        "RegExStrings": [
          "(?<SUBCLASS>[a-z]+Cache)\\s+(?<size_bytes>[0-9,]+)\\s+(?<capacity_bytes>[0-9,]+)\\s+(?<keystosave>[a-z]+)"
        ]
      },
      "ParseThreadId": null,
      "EventType": "SingleInstance",
      "EventClass": "Caches,Stats",
      "SubClass": null,
      "Product": "Cassandra",
      "IgnoreEvent": true,
      "Examples": [
        "INFO  [Service Thread] 2017-01-16 13:51:39,302  StatusLogger.java:97 - Cache Type                     Size                 Capacity               KeysToSave",
        "INFO  [Service Thread] 2017-01-16 13:51:39,303  StatusLogger.java:99 - KeyCache                  104720385                104857600                      all",
        "INFO  [Service Thread] 2017-01-16 13:51:39,303  StatusLogger.java:105 - RowCache                          0                        0                      all"
      ]
    },
    {
      "Description": "Memtable OPS",
      "TagId": 16.0,
      "MatchVersion": null,
      "LevelMatch": {
        "RegExStrings": [
          "INFO"
        ]
      },
      "FileNameMatch": {
        "RegExStrings": [
          "^StatusLogger.java$"
        ]
      },
      "FileLineMatch": {
        "RegExStrings": [
          "115|106"
        ]
      },
      "ThreadIdMatch": {
        "RegExStrings": [
          "^Service Thread$"
        ]
      },
      "ParseMessage": {
        "RegExStrings": [
          "(?$<DDLITEMNAME>)\\s+(?<memtable_ops>[0-9]+)\\s*,\\s*(?<datasize_bytes>[0-9]+)"
        ]
      },
      "ParseThreadId": null,
      "EventType": "SingleInstance",
      "EventClass": "MemtableFlush,Stats",
      "SubClass": "'Memtable ops'",
      "AnalyticsGroup": "StatusLoggerMemTblOPSStats",
      "Product": "Cassandra",
      "Examples": [
        "INFO  [Service Thread] 2017-01-16 13:51:39,303  StatusLogger.java:112 - ColumnFamily                Memtable ops,data",
        "INFO  [Service Thread] 2017-01-16 13:51:39,303  StatusLogger.java:115 - push.push_device                18369,3612697",
        "INFO  [Service Thread] 2017-01-16 13:51:39,303  StatusLogger.java:115 - dse_perf.node_slow_log                40,7682",
        "INFO  [Service Thread] 2017-01-16 13:51:39,304  StatusLogger.java:115 - solr_admin.solr_resources                 0,0",
        "INFO  [Service Thread] 2017-01-16 13:51:39,304  StatusLogger.java:115 - HiveMetaStore.MetaStore                   0,0",
        "INFO  [Service Thread] 2017-01-16 13:51:39,304  StatusLogger.java:115 - dse_security.tokens                       0,0",
        "INFO  [Service Thread] 2017-01-16 13:51:39,304  StatusLogger.java:115 - system.compaction_history         2765,426871"
      ]
    },
    {
      "Description": "large partition/row",
      "TagId": 20.0,
      "MatchVersion": null,
      "LevelMatch": {
        "RegExStrings": [
          "WARN"
        ]
      },
      "FileNameMatch": {
        "RegExStrings": [
          "^SSTableWriter.java$",
          "^CompactionController.java$",
          "^BigTableWriter.java$"
        ]
      },
      "FileLineMatch": null,
      "MessageMatch": {
        "RegExStrings": [
          "^(?:Compacting|Writing)\\slarge\\s(?:partition|row)"
        ]
      },
      "ParseMessage": {
        "RegExStrings": [
          "^(?:Compacting|Writing)\\s+(?<item>large\\s+partition|row)\\s+(?$<DDLITEMNAME>)\\s*\\:\\s*(?<partitionkey>.+)?\\s+\\((?<size>[0-9,.]+\\s*\\w+)\\)"
        ]
      },
      "ParseThreadId": null,
      "EventType": "SingleInstance",
      "EventClass": "Compaction,Partition,TableViewIndex,Detection",
      "SubClass": "item + ' ' + partitionkey",
      "AnalyticsGroup": "LargePartitionRowStats",
      "Product": "Cassandra",
      "Examples": [
        "WARN  [CompactionExecutor:6] 2016-06-07 06:57:44,146  SSTableWriter.java:240 - Compacting large partition kinesis_events/event_messages:49c023da-0bb8-46ce-9845-111514b43a63 (186949948 bytes)",
        "WARN  [MemtableFlushWriter:140] 2016-10-24 03:10:08,287  SSTableWriter.java:241 - Compacting large partition usprodda/digitalasset_3_0_2:US (130225259 bytes)",
        "WARN  [CompactionExecutor:705441] 2016-10-05 13:09:40,934 SSTableWriter.java:241 - Compacting large partition handled_exception1/summary_pt1h:5670561a6c33dc0f00f11443:2016-10-01-14-00-00:total (280256103 bytes)",
        "WARN  [ ] 2016-06-07 06:57:44,146  CompactionController.java:240 - Compacting large row billing/account_payables:20160726:FMCC (348583137 bytes)",
        "WARN  [ ] 2016-06-07 06:57:44,146  BigTableWriter.java:240 - Writing large partition oats/order_cycles:nasusnop01:2017-01-31 (139296027 bytes)",
        "WARN  [CompactionExecutor:943648] 2018-04-23 09:44:03,812  BigTableWriter.java:211 - Writing large partition axon/audit.parked_at_idx: (111.836MiB) to sstable /dse/dse_data/axon/audit-4584ec70347411e89c4fe548a3a93499/.parked_at_idx/mc-6140-big-Data.db)"
      ]
    },
    {
      "Description": "tombstone",
      "TagId": 21.0,
      "MatchVersion": null,
      "LevelMatch": {
        "RegExStrings": [
          "WARN|ERROR"
        ]
      },
      "FileNameMatch": {
        "RegExStrings": [
          "^SliceQueryFilter.java$",
          "^ReadCommand.java$"
        ]
      },
      "FileLineMatch": null,
      "MessageMatch": {
        "RegExStrings": [
          "^Read\\s(?:[0-9,]+)\\slive\\s(?:row(?:s)?\\s)?and\\s(?:[0-9,]+)\\stombstone",
          "^Scanned\\sover\\s(?:[0-9,]+)\\stombstone"
        ]
      },
      "ParseMessage": {
        "RegExStrings": [
          "^(?<item>Read)\\s(?<live_cells>[0-9,]+)\\slive\\sand\\s(?<tombstone_cells>[0-9,]+)\\stombstone(?:s|d)?\\scells\\sin\\s(?<TABLEVIEWNAME>[a-z0-9'\\\\-_$%+=!?<>^*&@/.]+)\\s(?:for\\skey\\:\\s*(?<partitionkey>.+))?\\s*\\(see tombstone_warn_threshold\\)\\.\\s*(?<columns>[0-9,]+)\\scolumns\\s(?:were|was)\\srequested,\\sslices=(?<slices>\\[[^\\[\\]]+\\])",
          "^(?<item>Scanned)\\sover\\s(?<tombstone_cells>[0-9,]+)\\stombstone(?:s|d)?\\sin\\s(?$<TABLEVIEWNAME>)\\s(?:for\\skey\\:\\s*(?<partitionkey>.+))\\;(?<SUBCLASS>\\squery\\saborted)",
          "^Read\\s(?<live_cells>[0-9,]+)\\slive\\srows\\sand\\s(?<tombstone_cells>[0-9,]+)\\stombstone(?:s|d)?\\scells\\sfor\\s(?<item>query)\\s+$<!CQLSELECT>\\s+\\(see tombstone_warn_threshold\\)"
        ]
      },
      "ParseThreadId": null,
      "EventType": "SingleInstance",
      "EventClass": "Tombstone,TableViewIndex,Query,Detection",
      "SubClass": "item + ' ' + partitionkey + whereclause",
      "AnalyticsGroup": "TombstoneStats",
      "Product": "Cassandra",
      "Examples": [
        "WARN [ReadStage:1325219] 2016-07-14 17:41:21,164 SliceQueryFilter.java (line 231) Read 11 live and 1411 tombstoned cells in cma.mls_records_property (see tombstone_warn_threshold). 5000 columns was requested, slices=[-]",
        "WARN  [SharedPool-Worker-11] 2016-10-24 10:59:18,247  SliceQueryFilter.java:320 - Read 269 live and 5228 tombstone cells in dse_perf.node_slow_log for key: 10.1.44.175:2016-10-20 20\\:00-0400 (see tombstone_warn_threshold). 1000 columns were requested, slices=[-]",
        "ERROR [SharedPool-Worker-3] 2016-10-24 10:59:29,758  SliceQueryFilter.java:288 - Scanned over 100000 tombstones in dse_perf.node_slow_log for key: 10.1.46.110:2016-10-19 20\\:00-0400; query aborted (see tombstone_failure_threshold).",
        "WARN  [SharedPool-Worker-9] 2018-04-04 11:25:35,569  ReadCommand.java:508 - Read 111 live rows and 1932 tombstone cells for query SELECT * FROM ghostlocker.userplaybacksession WHERE token(userid) > -1790144883989260466 AND token(userid) <= -1665322144856710922 LIMIT 1000 (see tombstone_warn_threshold)"
      ]
    },
    {
      "Description": "commit log syncs",
      "TagId": 22.0,
      "MatchVersion": null,
      "LevelMatch": {
        "RegExStrings": [
          "WARN"
        ]
      },
      "FileNameMatch": {
        "RegExStrings": [
          "^NoSpamLogger.java$"
        ]
      },
      "FileLineMatch": null,
      "MessageMatch": {
        "RegExStrings": [
          "^Out\\sof\\s[0-9,]+\\scommit\\slog\\ssyncs\\sover\\sthe\\spast"
        ]
      },
      "ParseMessage": {
        "RegExStrings": [
          "^Out\\sof\\s(?<nbrlogs>[0-9,]+)\\s[a-z ]+\\spast\\s(?<pastduration>[0-9,.]+\\s*[a-z]+)\\swith\\saverage\\sduration\\sof\\s$<!DURATIONwUOM>\\,\\s(?<logsexceed>[0-9,]+)\\s+[a-z ]+\\scommit\\sinterval[a-z ]+\\s(?<commitinterval>[0-9,.]+\\s*[a-z]+)$"
        ]
      },
      "ParseThreadId": null,
      "EventType": "SingleInstance",
      "EventClass": "Commit,Pause,Detection",
      "SubClass": null,
      "AnalyticsGroup": "DurationStats",
      "Product": "Cassandra",
      "Examples": [
        "WARN [PERIODIC-COMMIT-LOG-SYNCER] 2017-09-13 20:35:59,729 NoSpamLogger.java:97 - Out of 1 commit log syncs over the past 0.00s with average duration of 72128.48ms, 1 have exceeded the configured commit interval by an average of 62128.48ms"
      ]
    },
    {
      "Description": "Aggregation query",
      "TagId": 23.0,
      "MatchVersion": null,
      "LevelMatch": {
        "RegExStrings": [
          "WARN"
        ]
      },
      "FileNameMatch": {
        "RegExStrings": [
          "^SelectStatement.java$"
        ]
      },
      "FileLineMatch": null,
      "MessageMatch": {
        "RegExStrings": [
          "^Aggregation\\s+query"
        ]
      },
      "ParseMessage": {
        "RegExStrings": [
          "^Aggregation\\s+query\\s+used\\s+without\\s+partition\\s+key$"
        ]
      },
      "ParseThreadId": null,
      "EventType": "SingleInstance",
      "EventClass": "Detection,Query,Partition",
      "SubClass": "'Aggregation query used without partition key'",
      "Product": "Cassandra",
      "Examples": [
        "WARN  [SharedPool-Worker-1] 2018-03-28 03:37:46,099  SelectStatement.java:369 - Aggregation query used without partition key"
      ]
    },
    {
      "Description": "Gossip stage",
      "TagId": 24.0,
      "MatchVersion": null,
      "LevelMatch": {
        "RegExStrings": [
          "WARN"
        ]
      },
      "FileNameMatch": {
        "RegExStrings": [
          "^Gossiper.java$"
        ]
      },
      "FileLineMatch": null,
      "MessageMatch": {
        "RegExStrings": [
          "^Gossip\\s+stage"
        ]
      },
      "ParseMessage": {
        "RegExStrings": [
          "^Gossip\\s+stage\\s+has\\s+(?<pendingtasks>\\d+)\\s+pending\\s+tasks;\\s+skipping\\s+status\\s+check\\s+\\(no\\s+nodes\\s+will\\s+be\\s+marked\\s+down\\)$"
        ]
      },
      "ParseThreadId": null,
      "EventType": "SingleInstance",
      "EventClass": "Detection,Gossip",
      "AnalyticsGroup": "GossipPendingStats",
      "SubClass": "'Pending Gossip Stage (no nodes marked down)'",
      "Product": "Cassandra",
      "Examples": [
        "WARN  [GossipTasks:1] 2018-04-09 16:03:34,543  Gossiper.java:754 - Gossip stage has 4 pending tasks; skipping status check (no nodes will be marked down)",
        "WARN  [GossipTasks:1] 2017-05-20 03:38:59,863  Gossiper.java:751 - Gossip stage has 1 pending tasks; skipping status check (no nodes will be marked down)"
      ]
    },
    {
      "Description": "Batches",
      "TagId": 25.0,
      "MatchVersion": null,
      "LevelMatch": {
        "RegExStrings": [
          "WARN"
        ]
      },
      "FileNameMatch": {
        "RegExStrings": [
          "^NoSpamLogger.java$",
          "^BatchStatement.java$"
        ]
      },
      "FileLineMatch": null,
      "MessageMatch": {
        "RegExStrings": [
          "^Unlogged\\s+batch\\s",
          "^Batch\\s"
        ]
      },
      "ParseMessage": {
        "RegExStrings": [
          "^(?<type>Unlogged)\\sbatch\\scovering\\s(?<nbrpartitions>[0-9,]+)\\spartitions\\s\\w+\\s\\w+\\stables?\\s+\\[(?$<DDLITEMNAMES>)\\]",
          "^Batch\\s\\w+\\s(?<type>prepared?)\\sstatements?\\s\\w+\\s\\[(?$<DDLITEMNAMES>)\\]\\s\\w+\\s\\w+\\ssize\\s+(?<size_bytes>[0-9,.]+\\s*\\w*)\\s*,\\s",
          "^Batch\\sfor\\s\\[(?$<DDLITEMNAMES>)\\]\\s\\w+\\s\\w+\\s(?<type>size)\\s+(?<size_bytes>[0-9,.]+\\s*\\w*)\\s*,\\s"
        ]
      },
      "ParseThreadId": null,
      "EventType": "SingleInstance",
      "EventClass": "Detection,Batches",
      "AnalyticsGroup": "BatchStats",
      "SubClass": "type",
      "Product": "Cassandra",
      "Examples": [
        "WARN  [SharedPool-Worker-11] 2016-10-24 03:09:39,832  NoSpamLogger.java:94 - Unlogged batch covering 33 partitions detected against tables [usprodofrs.rstpromobydate_3_0_0_4, usprodofrs.rstpromo_3_0_0_4]. You should use a logged batch for atomicity, or asynchronous writes for performance.",
        "WARN [Native-Transport-Requests:30] 2016-08-01 22:58:11,080 BatchStatement.java (line 226) Batch of prepared statements for [clearcore.documents_case] is of size 71809, exceeding specified threshold of 65536 by 6273.",
        "WARN  [Native-Transport-Requests-4] 2018-04-23 15:39:49,679  BatchStatement.java:298 - Batch for [axon.accounts, axon.audit] is of size 69.044KiB, exceeding specified threshold of 64.000KiB by 5.044KiB."
      ]
    }
  ]
}
