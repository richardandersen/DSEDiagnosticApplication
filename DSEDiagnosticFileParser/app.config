<?xml version="1.0" encoding="utf-8" ?>
<configuration>
    <configSections>
        <sectionGroup name="applicationSettings" type="System.Configuration.ApplicationSettingsGroup, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" >
            <section name="DSEDiagnosticFileParser.Properties.StatPropertyNames" type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
            <section name="DSEDiagnosticFileParser.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
        </sectionGroup>
    </configSections>
    <applicationSettings>
        <DSEDiagnosticFileParser.Properties.StatPropertyNames>
            <setting name="SSTableOverallPercent" serializeAs="String">
                <value>SSTable Overall Percent</value>
            </setting>
            <setting name="TombstoneOverallPercent" serializeAs="String">
                <value>Tombstone Overall Percent</value>
            </setting>
            <setting name="ReadOverallPercent" serializeAs="String">
                <value>Read Overall Percent</value>
            </setting>
            <setting name="WriteOverallPercent" serializeAs="String">
                <value>Write Overall Percent</value>
            </setting>
            <setting name="KeysOverallPercent" serializeAs="String">
                <value>Keys Overall Percent</value>
            </setting>
            <setting name="SolrIndexStorageSizePercent" serializeAs="String">
                <value>solr index percent storage size </value>
            </setting>
            <setting name="TotalStorage" serializeAs="String">
                <value>Space used (total)</value>
            </setting>
            <setting name="LocalReadCount" serializeAs="String">
                <value>Local read count</value>
            </setting>
            <setting name="LocalWriteCount" serializeAs="String">
                <value>Local write count</value>
            </setting>
            <setting name="LCSLevels" serializeAs="String">
                <value>SSTables in each level</value>
            </setting>
            <setting name="TombstoneLiveCellRatio" serializeAs="String">
                <value>Tombstone/Live Percent</value>
            </setting>
            <setting name="LocalReadPercent" serializeAs="String">
                <value>Local Read Percentage</value>
            </setting>
            <setting name="LocalWritePercent" serializeAs="String">
                <value>Local Write Percentage</value>
            </setting>
            <setting name="LCSBackRatio" serializeAs="String">
                <value>LCS Level BuildUp Ratio</value>
            </setting>
            <setting name="LCSSplitLevels" serializeAs="String">
                <value>SSTables in each split level</value>
            </setting>
            <setting name="LCSNbrSplitLevels" serializeAs="String">
                <value>LCS Nbr Split Levels</value>
            </setting>
            <setting name="SolrIndexStorageSize" serializeAs="String">
                <value>solr index storage size</value>
            </setting>
            <setting name="PartitionLarge" serializeAs="String">
                <value>Partition large</value>
            </setting>
            <setting name="TombstonesRead" serializeAs="String">
                <value>Tombstones Read</value>
            </setting>
            <setting name="CompactionInsufficientSpace" serializeAs="String">
                <value>Compaction Insufficient Space</value>
            </setting>
            <setting name="RowLarge" serializeAs="String">
                <value>Row large</value>
            </setting>
            <setting name="TombstoneLiveCell" serializeAs="String">
                <value>Tombstones Live Cells Read</value>
            </setting>
            <setting name="LocalReadLatency" serializeAs="String">
                <value>Local read latency</value>
            </setting>
            <setting name="LocalWriteLatency" serializeAs="String">
                <value>Local write latency</value>
            </setting>
            <setting name="AvgTombstonesSlice" serializeAs="String">
                <value>Average tombstones per slice (last five minutes)</value>
            </setting>
            <setting name="MaxTombstonesSlice" serializeAs="String">
                <value>Maximum tombstones per slice (last five minutes)</value>
            </setting>
            <setting name="CompactedPartitionMin" serializeAs="String">
                <value>Compacted partition minimum bytes</value>
            </setting>
            <setting name="CompactedPartitionMax" serializeAs="String">
                <value>Compacted partition maximum bytes</value>
            </setting>
            <setting name="CompactedPartitionAvg" serializeAs="String">
                <value>Compacted partition mean bytes</value>
            </setting>
            <setting name="AvgLiveCellsReadSlice" serializeAs="String">
                <value>Average live cells per slice (last five minutes)</value>
            </setting>
            <setting name="MaxLiveCellsReadSlice" serializeAs="String">
                <value>Maximum live cells per slice (last five minutes)</value>
            </setting>
            <setting name="SSTableCount" serializeAs="String">
                <value>SSTable count</value>
            </setting>
            <setting name="ReadCount" serializeAs="String">
                <value>Read Count</value>
            </setting>
            <setting name="WriteCount" serializeAs="String">
                <value>Write Count</value>
            </setting>
            <setting name="LocalWriteCout" serializeAs="String">
                <value>Local write count</value>
            </setting>
            <setting name="NbrPartitionKeys" serializeAs="Xml">
                <value>
                    <ArrayOfString xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema">
                        <string>Number of keys (estimate)</string>
                        <string>Number of partitions (estimate)</string>
                    </ArrayOfString>
                </value>
            </setting>
            <setting name="PartitionRowLarge" serializeAs="Xml">
                <value>
                    <ArrayOfString xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema">
                        <string>Partition large</string>
                        <string>Compacted partition maximum bytes</string>
                        <string>Row large</string>
                    </ArrayOfString>
                </value>
            </setting>
            <setting name="CommonPartitionKeys" serializeAs="String">
                <value>Common Partition Keys</value>
            </setting>
        </DSEDiagnosticFileParser.Properties.StatPropertyNames>
        <DSEDiagnosticFileParser.Properties.Settings>
            <setting name="ExtractFilesWithExtensions" serializeAs="String">
                <value>[{"item1":".zip","item2":"zip"},{"item1":".tar","item2":"tar"},{"item1":".gz","item2":"gz"},{"item1":".msgz","item2":"msgz"}]</value>
            </setting>
            <setting name="ProcessFileMappings" serializeAs="String">
                <value>.\ProcessFileMappings.json,.\Json\ProcessFileMappings.json,[cpld]\Json\ProcessFileMappings.json,[cpld]\ProcessFileMappings.json,[ApplicationRunTimeDirectory]\Json\ProcessFileMappings.json,[ApplicationRunTimeDirectory]\ProcessFileMappings.json,.\Json\ProcessFileMappings.json,.\ProcessFileMappings.json</value>
            </setting>
            <setting name="DiagnosticFileRegExAssocations" serializeAs="String">
                <value>.\DiagnosticFileRegExAssocations.json,.\Json\DiagnosticFileRegExAssocations.json,[cpld]\Json\DiagnosticFileRegExAssocations.json,[cpld]\DiagnosticFileRegExAssocations.json,[ApplicationRunTimeDirectory]\Json\DiagnosticFileRegExAssocations.json,[ApplicationRunTimeDirectory]\DiagnosticFileRegExAssocations.json,.\DiagnosticFileRegExAssocations.json,.\Json\DiagnosticFileRegExAssocations.json</value>
            </setting>
            <setting name="ObscureFiledValues" serializeAs="Xml">
                <value>
                    <ArrayOfString xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema">
                        <string>password</string>
                        <string>monitored_cassandra_pass</string>
                    </ArrayOfString>
                </value>
            </setting>
            <setting name="SnitchFileMappings" serializeAs="String">
                <value>[
{"Item1":"_Comments_","Item2":"Item1 is case sensitive. Item2 Canbe a list of file names delimited by comma. Begginning files will be selected only if no later files in the list exist"},
{"Item1":"SimpleSnitch","Item2":null},
{"Item1":"RackInferringSnitch","Item2":null},
{"Item1":"PropertyFileSnitch","Item2":"cassandra-topology.properties"},
{"Item1":"GossipingPropertyFileSnitch","Item2":"cassandra-topology.properties,cassandra-rackdc.properties"},
{"Item1":"CloudstackSnitch","Item2":null},
{"Item1":"GoogleClouldSnitch","Item2":"cassandra-rackdc.properties"},
{"Item1":"EC2Snitch","Item2":"cassandra-rackdc.properties"},
{"Item1":"EC2MultiRegionSnitch","Item2":"cassandra-rackdc.properties"},
{"Item1":"YamlFileNetworkTopologySnitch","Item2":"cassandra-topology.yaml"}
]</value>
            </setting>
            <setting name="Log4NetConversionPattern" serializeAs="String">
                <value>%-5level [%thread] %date{ISO8601} %F:%L - %msg%n</value>
            </setting>
            <setting name="Log4NetParser" serializeAs="String">
                <value>.\Log4NetParser.json,.\Json\Log4NetParser.json,[cpld]\Json\Log4NetParser.json,[cpld]\Log4NetParser.json,[ApplicationRunTimeDirectory]\Json\Log4NetParser.json,[ApplicationRunTimeDirectory]\Log4NetParser.json,.\Log4NetParser.json,.\Json\Log4NetParser.json</value>
            </setting>
            <setting name="CodeDomAssemblies" serializeAs="Xml">
                <value>
                    <ArrayOfString xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema">
                        <string>mscorlib.dll</string>
                        <string>Microsoft.CSharp.dll</string>
                        <string>System.dll</string>
                        <string>System.Core.dll</string>
                        <string>System.Xml.dll</string>
                        <string>System.Xml.Linq.dll</string>
                        <string>--[Search([AssemblyDir];[WorkingDir];[AppRunTimeDir],DSEDiagnosticLibrary.dll)]</string>
                        <string>--[Search([AssemblyDir];[WorkingDir];[AppRunTimeDir],DSEDiagnosticLog4NetParser.dll)]</string>
                    </ArrayOfString>
                </value>
            </setting>
            <setting name="CodeDomClassTemplate" serializeAs="String">
                <value>using System;
using System.Collections.Generic;
using System.Text;
using DSEDiagnosticFileParser;
using DSEDiagnosticLibrary;
using DSEDiagnosticLog4NetParser;

public static class {0}
{{
    public static {1} {2} ( {3} )
    {{
        {4}
    }}
}}</value>
            </setting>
            <setting name="FileCreateFolderTargetSourceMappings" serializeAs="String">
                <value>.\file-create-folder-structure-Mappings.json,.\Json\file-create-folder-structure-Mappings.json,[cpld]\Json\file-create-folder-structure-Mappings.json,[cpld]\file-create-folder-structure-Mappings.json,[ApplicationRunTimeDirectory]\Json\file-create-folder-structure-Mappings.json,[ApplicationRunTimeDirectory]\file-create-folder-structure-Mappings.json,.\file-create-folder-structure-Mappings.json,.\Json\file-create-folder-structure-Mappings.json</value>
            </setting>
            <setting name="FileCreateFolderDefaultDirName" serializeAs="String">
                <value>OpsCenterStruct</value>
            </setting>
            <setting name="FileCreateFolderDefaultDirFormatString" serializeAs="String">
                <value>{0}-diagnostics-{1:yyyy_MM_dd_HH_mm_ss}_UTC</value>
            </setting>
            <setting name="DSESystemDDL" serializeAs="String">
                <value>CREATE KEYSPACE dse_security WITH replication = {'class': 'EverywhereStrategy'}  AND durable_writes = true AND PreLoaded = true;

CREATE TABLE dse_security.role_options (
    role text PRIMARY KEY,
    options map&lt;text, text&gt;
) WITH bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'role options'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND dclocal_read_repair_chance = 0.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 7776000
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99PERCENTILE';

CREATE TABLE dse_security.digest_tokens (
    id blob PRIMARY KEY,
    password blob
) WITH bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'digest_tokens'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND dclocal_read_repair_chance = 0.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 7776000
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99PERCENTILE';

CREATE TABLE dse_security.spark_security (
    dc text PRIMARY KEY,
    shared_secret text
) WITH bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'Spark security settings'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND dclocal_read_repair_chance = 0.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 7776000
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99PERCENTILE';

CREATE TABLE dse_security.tokens (
    key blob,
    column1 text,
    value blob,
    PRIMARY KEY (key, column1)
) WITH COMPACT STORAGE
    AND CLUSTERING ORDER BY (column1 ASC)
    AND caching = '{"keys":"ALL", "rows_per_partition":"NONE"}'
    AND comment = 'Stores delegate tokens meta data'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'}
    AND compression = {'sstable_compression': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND dclocal_read_repair_chance = 0.1
    AND default_time_to_live = 0
    AND gc_grace_seconds = 60
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 0
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = 'NONE';

CREATE KEYSPACE system_schema WITH replication = {'class': 'LocalStrategy'}  AND durable_writes = true AND PreLoaded = true;

CREATE TABLE system_schema.tables (
    keyspace_name text,
    table_name text,
    bloom_filter_fp_chance double,
    caching frozen&lt;map&lt;text, text&gt;&gt;,
    comment text,
    compaction frozen&lt;map&lt;text, text&gt;&gt;,
    compression frozen&lt;map&lt;text, text&gt;&gt;,
    crc_check_chance double,
    dclocal_read_repair_chance double,
    default_time_to_live int,
    extensions frozen&lt;map&lt;text, blob&gt;&gt;,
    flags frozen&lt;set&lt;text&gt;&gt;,
    gc_grace_seconds int,
    id uuid,
    max_index_interval int,
    memtable_flush_period_in_ms int,
    min_index_interval int,
    read_repair_chance double,
    speculative_retry text,
    PRIMARY KEY (keyspace_name, table_name)
) WITH CLUSTERING ORDER BY (table_name ASC)
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'table definitions'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND dclocal_read_repair_chance = 0.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 604800
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99PERCENTILE';

CREATE TABLE system_schema.functions (
    keyspace_name text,
    function_name text,
    argument_types frozen&lt;list&lt;text&gt;&gt;,
    argument_names frozen&lt;list&lt;text&gt;&gt;,
    body text,
    called_on_null_input boolean,
    language text,
    return_type text,
    PRIMARY KEY (keyspace_name, function_name, argument_types)
) WITH CLUSTERING ORDER BY (function_name ASC, argument_types ASC)
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'user defined function definitions'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND dclocal_read_repair_chance = 0.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 604800
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99PERCENTILE';

CREATE TABLE system_schema.triggers (
    keyspace_name text,
    table_name text,
    trigger_name text,
    options frozen&lt;map&lt;text, text&gt;&gt;,
    PRIMARY KEY (keyspace_name, table_name, trigger_name)
) WITH CLUSTERING ORDER BY (table_name ASC, trigger_name ASC)
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'trigger definitions'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND dclocal_read_repair_chance = 0.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 604800
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99PERCENTILE';

CREATE TABLE system_schema.aggregates (
    keyspace_name text,
    aggregate_name text,
    argument_types frozen&lt;list&lt;text&gt;&gt;,
    final_func text,
    initcond text,
    return_type text,
    state_func text,
    state_type text,
    PRIMARY KEY (keyspace_name, aggregate_name, argument_types)
) WITH CLUSTERING ORDER BY (aggregate_name ASC, argument_types ASC)
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'user defined aggregate definitions'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND dclocal_read_repair_chance = 0.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 604800
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99PERCENTILE';

CREATE TABLE system_schema.views (
    keyspace_name text,
    view_name text,
    base_table_id uuid,
    base_table_name text,
    bloom_filter_fp_chance double,
    caching frozen&lt;map&lt;text, text&gt;&gt;,
    comment text,
    compaction frozen&lt;map&lt;text, text&gt;&gt;,
    compression frozen&lt;map&lt;text, text&gt;&gt;,
    crc_check_chance double,
    dclocal_read_repair_chance double,
    default_time_to_live int,
    extensions frozen&lt;map&lt;text, blob&gt;&gt;,
    gc_grace_seconds int,
    id uuid,
    include_all_columns boolean,
    max_index_interval int,
    memtable_flush_period_in_ms int,
    min_index_interval int,
    read_repair_chance double,
    speculative_retry text,
    where_clause text,
    PRIMARY KEY (keyspace_name, view_name)
) WITH CLUSTERING ORDER BY (view_name ASC)
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'view definitions'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND dclocal_read_repair_chance = 0.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 604800
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99PERCENTILE';

CREATE TABLE system_schema.indexes (
    keyspace_name text,
    table_name text,
    index_name text,
    kind text,
    options frozen&lt;map&lt;text, text&gt;&gt;,
    PRIMARY KEY (keyspace_name, table_name, index_name)
) WITH CLUSTERING ORDER BY (table_name ASC, index_name ASC)
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'secondary index definitions'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND dclocal_read_repair_chance = 0.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 604800
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99PERCENTILE';

CREATE TABLE system_schema.keyspaces (
    keyspace_name text PRIMARY KEY,
    durable_writes boolean,
    replication frozen&lt;map&lt;text, text&gt;&gt;
) WITH bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'keyspace definitions'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND dclocal_read_repair_chance = 0.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 604800
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99PERCENTILE';

CREATE TABLE system_schema.types (
    keyspace_name text,
    type_name text,
    field_names frozen&lt;list&lt;text&gt;&gt;,
    field_types frozen&lt;list&lt;text&gt;&gt;,
    PRIMARY KEY (keyspace_name, type_name)
) WITH CLUSTERING ORDER BY (type_name ASC)
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'user defined type definitions'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND dclocal_read_repair_chance = 0.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 604800
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99PERCENTILE';

CREATE TABLE system_schema.dropped_columns (
    keyspace_name text,
    table_name text,
    column_name text,
    dropped_time timestamp,
    type text,
    PRIMARY KEY (keyspace_name, table_name, column_name)
) WITH CLUSTERING ORDER BY (table_name ASC, column_name ASC)
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'dropped column registry'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND dclocal_read_repair_chance = 0.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 604800
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99PERCENTILE';

CREATE TABLE system_schema.columns (
    keyspace_name text,
    table_name text,
    column_name text,
    clustering_order text,
    column_name_bytes blob,
    kind text,
    position int,
    type text,
    PRIMARY KEY (keyspace_name, table_name, column_name)
) WITH CLUSTERING ORDER BY (table_name ASC, column_name ASC)
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'column definitions'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND dclocal_read_repair_chance = 0.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 604800
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99PERCENTILE';

CREATE KEYSPACE system_auth WITH replication = {'class': 'EverywhereStrategy'} AND durable_writes = true AND PreLoaded = true;

CREATE TABLE system_auth.resource_role_permissons_index (
    resource text,
    role text,
    PRIMARY KEY (resource, role)
) WITH CLUSTERING ORDER BY (role ASC)
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'index of db roles with permissions granted on a resource'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND dclocal_read_repair_chance = 0.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 7776000
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99PERCENTILE';

CREATE TABLE system_auth.role_permissions (
    role text,
    resource text,
    permissions set&lt;text&gt;,
    PRIMARY KEY (role, resource)
) WITH CLUSTERING ORDER BY (resource ASC)
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'permissions granted to db roles'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND dclocal_read_repair_chance = 0.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 7776000
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99PERCENTILE';

CREATE TABLE system_auth.role_members (
    role text,
    member text,
    PRIMARY KEY (role, member)
) WITH CLUSTERING ORDER BY (member ASC)
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'role memberships lookup table'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND dclocal_read_repair_chance = 0.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 7776000
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99PERCENTILE';

CREATE TABLE system_auth.roles (
    role text PRIMARY KEY,
    can_login boolean,
    is_superuser boolean,
    member_of set&lt;text&gt;,
    salted_hash text
) WITH bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'role definitions'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND dclocal_read_repair_chance = 0.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 7776000
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99PERCENTILE';
    
CREATE TABLE system_auth.credentials (
  username text,
  options map&lt;text, text&gt;,
  salted_hash text,
  PRIMARY KEY ((username))
) WITH
  bloom_filter_fp_chance=0.010000 AND
  caching='KEYS_ONLY' AND
  comment='' AND
  dclocal_read_repair_chance=0.100000 AND
  gc_grace_seconds=7776000 AND
  index_interval=128 AND
  read_repair_chance=0.000000 AND
  replicate_on_write='true' AND
  populate_io_cache_on_flush='false' AND
  default_time_to_live=0 AND
  speculative_retry='99.0PERCENTILE' AND
  memtable_flush_period_in_ms=0 AND
  compaction={'class': 'SizeTieredCompactionStrategy'} AND
  compression={'sstable_compression': 'LZ4Compressor'};

CREATE TABLE system_auth.permissions (
  username text,
  resource text,
  permissions set&lt;text&gt;,
  PRIMARY KEY ((username), resource)
) WITH
  bloom_filter_fp_chance=0.010000 AND
  caching='KEYS_ONLY' AND
  comment='' AND
  dclocal_read_repair_chance=0.100000 AND
  gc_grace_seconds=7776000 AND
  index_interval=128 AND
  read_repair_chance=0.000000 AND
  replicate_on_write='true' AND
  populate_io_cache_on_flush='false' AND
  default_time_to_live=0 AND
  speculative_retry='99.0PERCENTILE' AND
  memtable_flush_period_in_ms=0 AND
  compaction={'class': 'SizeTieredCompactionStrategy'} AND
  compression={'sstable_compression': 'LZ4Compressor'};

CREATE TABLE system_auth.users (
  name text,
  super boolean,
  PRIMARY KEY ((name))
) WITH
  bloom_filter_fp_chance=0.010000 AND
  caching='KEYS_ONLY' AND
  comment='' AND
  dclocal_read_repair_chance=0.100000 AND
  gc_grace_seconds=7776000 AND
  index_interval=128 AND
  read_repair_chance=0.000000 AND
  replicate_on_write='true' AND
  populate_io_cache_on_flush='false' AND
  default_time_to_live=0 AND
  speculative_retry='99.0PERCENTILE' AND
  memtable_flush_period_in_ms=0 AND
  compaction={'class': 'SizeTieredCompactionStrategy'} AND
  compression={'sstable_compression': 'LZ4Compressor'};

CREATE KEYSPACE system WITH replication = {'class': 'LocalStrategy'}  AND durable_writes = true AND PreLoaded = true;

CREATE TABLE system.peers (
    peer inet PRIMARY KEY,
    data_center text,
    host_id uuid,
    preferred_ip inet,
    rack text,
    release_version text,
    rpc_address inet,
    schema_version uuid,
    tokens set&lt;text&gt;,
    workload text
) WITH bloom_filter_fp_chance = 0.01
    AND caching = '{"keys":"ALL", "rows_per_partition":"NONE"}'
    AND comment = 'known peers in the cluster'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'}
    AND compression = {'sstable_compression': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND dclocal_read_repair_chance = 0.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 0
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99.0PERCENTILE';

CREATE TABLE system.range_xfers (
    token_bytes blob PRIMARY KEY,
    requested_at timestamp
) WITH bloom_filter_fp_chance = 0.01
    AND caching = '{"keys":"ALL", "rows_per_partition":"NONE"}'
    AND comment = 'ranges requested for transfer here'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'}
    AND compression = {'sstable_compression': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND dclocal_read_repair_chance = 0.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 0
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99.0PERCENTILE';

CREATE TABLE system.schema_keyspaces (
    keyspace_name text PRIMARY KEY,
    durable_writes boolean,
    strategy_class text,
    strategy_options text
) WITH COMPACT STORAGE
    AND bloom_filter_fp_chance = 0.01
    AND caching = '{"keys":"ALL", "rows_per_partition":"NONE"}'
    AND comment = 'keyspace definitions'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'}
    AND compression = {'sstable_compression': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND dclocal_read_repair_chance = 0.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 604800
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99.0PERCENTILE';

CREATE TABLE system.schema_columns (
    keyspace_name text,
    columnfamily_name text,
    column_name text,
    component_index int,
    index_name text,
    index_options text,
    index_type text,
    type text,
    validator text,
    PRIMARY KEY (keyspace_name, columnfamily_name, column_name)
) WITH CLUSTERING ORDER BY (columnfamily_name ASC, column_name ASC)
    AND bloom_filter_fp_chance = 0.01
    AND caching = '{"keys":"ALL", "rows_per_partition":"NONE"}'
    AND comment = 'ColumnFamily column attributes'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'}
    AND compression = {'sstable_compression': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND dclocal_read_repair_chance = 0.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 604800
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99.0PERCENTILE';

CREATE TABLE system."IndexInfo" (
    table_name text,
    index_name text,
    "" blob,
    PRIMARY KEY (table_name, index_name)
) WITH COMPACT STORAGE
    AND CLUSTERING ORDER BY (index_name ASC)
    AND bloom_filter_fp_chance = 0.01
    AND caching = '{"keys":"ALL", "rows_per_partition":"NONE"}'
    AND comment = 'indexes that have been completed'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'}
    AND compression = {'sstable_compression': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND dclocal_read_repair_chance = 0.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 0
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99.0PERCENTILE';

CREATE TABLE system.schema_triggers (
    keyspace_name text,
    columnfamily_name text,
    trigger_name text,
    trigger_options map&lt;text, text&gt;,
    PRIMARY KEY (keyspace_name, columnfamily_name, trigger_name)
) WITH CLUSTERING ORDER BY (columnfamily_name ASC, trigger_name ASC)
    AND bloom_filter_fp_chance = 0.01
    AND caching = '{"keys":"ALL", "rows_per_partition":"NONE"}'
    AND comment = 'triggers metadata table'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'}
    AND compression = {'sstable_compression': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND dclocal_read_repair_chance = 0.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 604800
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99.0PERCENTILE';

CREATE TABLE system.sstable_activity (
    keyspace_name text,
    columnfamily_name text,
    generation int,
    rate_120m double,
    rate_15m double,
    PRIMARY KEY ((keyspace_name, columnfamily_name, generation))
) WITH bloom_filter_fp_chance = 0.01
    AND caching = '{"keys":"ALL", "rows_per_partition":"NONE"}'
    AND comment = 'historic sstable read rates'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'}
    AND compression = {'sstable_compression': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND dclocal_read_repair_chance = 0.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 0
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99.0PERCENTILE';

CREATE TABLE system.peer_events (
    peer inet PRIMARY KEY,
    hints_dropped map&lt;uuid, int&gt;
) WITH bloom_filter_fp_chance = 0.01
    AND caching = '{"keys":"ALL", "rows_per_partition":"NONE"}'
    AND comment = 'cf contains events related to peers'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'}
    AND compression = {'sstable_compression': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND dclocal_read_repair_chance = 0.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 0
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99.0PERCENTILE';

CREATE TABLE system.schema_usertypes (
    keyspace_name text,
    type_name text,
    field_names list&lt;text&gt;,
    field_types list&lt;text&gt;,
    PRIMARY KEY (keyspace_name, type_name)
) WITH CLUSTERING ORDER BY (type_name ASC)
    AND bloom_filter_fp_chance = 0.01
    AND caching = '{"keys":"ALL", "rows_per_partition":"NONE"}'
    AND comment = 'Defined user types'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'}
    AND compression = {'sstable_compression': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND dclocal_read_repair_chance = 0.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 604800
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99.0PERCENTILE';

CREATE TABLE system.paxos (
    row_key blob,
    cf_id uuid,
    in_progress_ballot timeuuid,
    most_recent_commit blob,
    most_recent_commit_at timeuuid,
    proposal blob,
    proposal_ballot timeuuid,
    PRIMARY KEY (row_key, cf_id)
) WITH CLUSTERING ORDER BY (cf_id ASC)
    AND bloom_filter_fp_chance = 0.1
    AND caching = '{"keys":"ALL", "rows_per_partition":"NONE"}'
    AND comment = 'in-progress paxos proposals'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.LeveledCompactionStrategy'}
    AND compression = {'sstable_compression': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND dclocal_read_repair_chance = 0.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 0
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99.0PERCENTILE';

CREATE TABLE system.batchlog (
    id uuid PRIMARY KEY,
    data blob,
    version int,
    written_at timestamp
) WITH bloom_filter_fp_chance = 0.01
    AND caching = '{"keys":"ALL", "rows_per_partition":"NONE"}'
    AND comment = 'uncommited batches'
    AND compaction = {'min_threshold': '2', 'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'}
    AND compression = {'sstable_compression': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND dclocal_read_repair_chance = 0.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 0
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99.0PERCENTILE';
    
CREATE TABLE system.batches (
    id uuid PRIMARY KEY,
    mutations blob,
    version int
) WITH bloom_filter_fp_chance = 0.01
    AND caching = '{"keys":"ALL", "rows_per_partition":"NONE"}'
    AND comment = 'log batches'
    AND compaction = {'min_threshold': '2', 'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'}
    AND compression = {'sstable_compression': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND dclocal_read_repair_chance = 0.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 0
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99.0PERCENTILE';

CREATE TABLE system.prepared_statements (
   keyspace_name text,
   table_name text,
   prepared_id blob,
   query_string text,
   PRIMARY KEY (keyspace_name, table_name, prepared_id)
   ) WITH bloom_filter_fp_chance = 0.01
	AND caching = '{"keys":"ALL", "rows_per_partition":"NONE"}'
	AND comment = 'prepared statements'
	AND compaction = {'min_threshold': '2', 'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'}
	AND compression = {'sstable_compression': 'org.apache.cassandra.io.compress.LZ4Compressor'}
	AND dclocal_read_repair_chance = 0.0
	AND default_time_to_live = 0
	AND gc_grace_seconds = 0
	AND max_index_interval = 2048
	AND memtable_flush_period_in_ms = 3600000
	AND min_index_interval = 128
	AND read_repair_chance = 0.0
	AND speculative_retry = '99.0PERCENTILE';

CREATE TABLE system.size_estimates (
    keyspace_name text,
    table_name text,
    range_start text,
    range_end text,
    mean_partition_size bigint,
    partitions_count bigint,
    PRIMARY KEY (keyspace_name, table_name, range_start, range_end)
) WITH CLUSTERING ORDER BY (table_name ASC, range_start ASC, range_end ASC)
    AND bloom_filter_fp_chance = 0.01
    AND caching = '{"keys":"ALL", "rows_per_partition":"NONE"}'
    AND comment = 'per-table primary range size estimates'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'}
    AND compression = {'sstable_compression': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND dclocal_read_repair_chance = 0.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 0
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99.0PERCENTILE';

CREATE TABLE system.compaction_history (
    id uuid PRIMARY KEY,
    bytes_in bigint,
    bytes_out bigint,
    columnfamily_name text,
    compacted_at timestamp,
    keyspace_name text,
    rows_merged map&lt;int, bigint&gt;
) WITH bloom_filter_fp_chance = 0.01
    AND caching = '{"keys":"ALL", "rows_per_partition":"NONE"}'
    AND comment = 'show all compaction history'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'}
    AND compression = {'sstable_compression': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND dclocal_read_repair_chance = 0.0
    AND default_time_to_live = 604800
    AND gc_grace_seconds = 0
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99.0PERCENTILE';

CREATE TABLE system.compactions_in_progress (
    id uuid PRIMARY KEY,
    columnfamily_name text,
    inputs set&lt;int&gt;,
    keyspace_name text
) WITH bloom_filter_fp_chance = 0.01
    AND caching = '{"keys":"ALL", "rows_per_partition":"NONE"}'
    AND comment = 'unfinished compactions'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'}
    AND compression = {'sstable_compression': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND dclocal_read_repair_chance = 0.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 0
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99.0PERCENTILE';

CREATE TABLE system.schema_columnfamilies (
    keyspace_name text,
    columnfamily_name text,
    bloom_filter_fp_chance double,
    caching text,
    cf_id uuid,
    column_aliases text,
    comment text,
    compaction_strategy_class text,
    compaction_strategy_options text,
    comparator text,
    compression_parameters text,
    default_time_to_live int,
    default_validator text,
    dropped_columns map&lt;text, bigint&gt;,
    gc_grace_seconds int,
    index_interval int,
    is_dense boolean,
    key_aliases text,
    key_validator text,
    local_read_repair_chance double,
    max_compaction_threshold int,
    max_index_interval int,
    memtable_flush_period_in_ms int,
    min_compaction_threshold int,
    min_index_interval int,
    read_repair_chance double,
    speculative_retry text,
    subcomparator text,
    type text,
    value_alias text,
    PRIMARY KEY (keyspace_name, columnfamily_name)
) WITH CLUSTERING ORDER BY (columnfamily_name ASC)
    AND bloom_filter_fp_chance = 0.01
    AND caching = '{"keys":"ALL", "rows_per_partition":"NONE"}'
    AND comment = 'ColumnFamily definitions'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'}
    AND compression = {'sstable_compression': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND dclocal_read_repair_chance = 0.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 604800
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99.0PERCENTILE';

CREATE TABLE system.local (
    key text PRIMARY KEY,
    bootstrapped text,
    broadcast_address inet,
    cluster_name text,
    cql_version text,
    data_center text,
    dse_version text,
    gossip_generation int,
    host_id uuid,
    listen_address inet,
    native_protocol_version text,
    partitioner text,
    rack text,
    release_version text,
    rpc_address inet,
    schema_version uuid,
    thrift_version text,
    tokens set&lt;text&gt;,
    truncated_at map&lt;uuid, blob&gt;,
    workload text
) WITH bloom_filter_fp_chance = 0.01
    AND caching = '{"keys":"ALL", "rows_per_partition":"NONE"}'
    AND comment = 'information about the local node'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'}
    AND compression = {'sstable_compression': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND dclocal_read_repair_chance = 0.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 0
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99.0PERCENTILE';

CREATE TABLE system.hints (
    target_id uuid,
    hint_id timeuuid,
    message_version int,
    mutation blob,
    PRIMARY KEY (target_id, hint_id, message_version)
) WITH COMPACT STORAGE
    AND CLUSTERING ORDER BY (hint_id ASC, message_version ASC)
    AND bloom_filter_fp_chance = 0.01
    AND caching = '{"keys":"ALL", "rows_per_partition":"NONE"}'
    AND comment = 'hints awaiting delivery'
    AND compaction = {'enabled': 'false', 'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'}
    AND compression = {'sstable_compression': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND dclocal_read_repair_chance = 0.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 0
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99.0PERCENTILE';



CREATE KEYSPACE dse_leases WITH replication = {'class': 'EverywhereStrategy'} AND durable_writes = true AND PreLoaded = true;

CREATE TABLE dse_leases.leases (
    name text,
    dc text,
    duration_ms int,
    epoch bigint,
    holder inet,
    PRIMARY KEY ((name, dc))
) WITH bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'DSE Lease coordination'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND dclocal_read_repair_chance = 0.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 0
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99PERCENTILE';

CREATE TABLE dse_leases.logs (
    name text,
    dc text,
    monitor inet,
    at timestamp,
    new_holder inet,
    old_holder inet,
    PRIMARY KEY ((name, dc), monitor, at)
) WITH CLUSTERING ORDER BY (monitor ASC, at ASC)
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'DSE Lease history'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND dclocal_read_repair_chance = 0.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 0
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99PERCENTILE';

CREATE KEYSPACE system_distributed WITH replication = {'class': 'EverywhereStrategy'} AND durable_writes = true AND PreLoaded = true;

CREATE TABLE system_distributed.repair_history (
    keyspace_name text,
    columnfamily_name text,
    id timeuuid,
    coordinator inet,
    exception_message text,
    exception_stacktrace text,
    finished_at timestamp,
    parent_id timeuuid,
    participants set&lt;inet&gt;,
    range_begin text,
    range_end text,
    started_at timestamp,
    status text,
    PRIMARY KEY ((keyspace_name, columnfamily_name), id)
) WITH CLUSTERING ORDER BY (id ASC)
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'Repair history'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND dclocal_read_repair_chance = 0.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 0
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99PERCENTILE';

CREATE TABLE system_distributed.parent_repair_history (
    parent_id timeuuid PRIMARY KEY,
    columnfamily_names set&lt;text&gt;,
    exception_message text,
    exception_stacktrace text,
    finished_at timestamp,
    keyspace_name text,
    requested_ranges set&lt;text&gt;,
    started_at timestamp,
    successful_ranges set&lt;text&gt;
) WITH bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'Repair history'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND dclocal_read_repair_chance = 0.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 0
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99PERCENTILE';

CREATE KEYSPACE system_traces WITH replication = {'class': 'EverywhereStrategy'} AND durable_writes = true AND PreLoaded = true;

CREATE TABLE system_traces.events (
    session_id uuid,
    event_id timeuuid,
    activity text,
    source inet,
    source_elapsed int,
    thread text,
    PRIMARY KEY (session_id, event_id)
) WITH CLUSTERING ORDER BY (event_id ASC)
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'tracing events'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND dclocal_read_repair_chance = 0.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 0
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99PERCENTILE';

CREATE TABLE system_traces.sessions (
    session_id uuid PRIMARY KEY,
    client inet,
    command text,
    coordinator inet,
    duration int,
    parameters map&lt;text, text&gt;,
    request text,
    started_at timestamp
) WITH bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'tracing sessions'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND dclocal_read_repair_chance = 0.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 0
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99PERCENTILE';

CREATE KEYSPACE dse_perf WITH replication = {'class': 'EverywhereStrategy'} AND durable_writes = true AND PreLoaded = true;

CREATE TABLE dse_perf.node_slow_log (
    node_ip inet,
    date timestamp,
    start_time timeuuid,
    commands list&lt;text&gt;,
    duration bigint,
    parameters map&lt;text, text&gt;,
    source_ip inet,
    table_names set&lt;text&gt;,
    username text,
    PRIMARY KEY ((node_ip, date), start_time)
) WITH CLUSTERING ORDER BY (start_time DESC)
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = ''
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND dclocal_read_repair_chance = 0.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 0
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99PERCENTILE';

CREATE KEYSPACE dse_system WITH replication = {'class': 'EverywhereStrategy'}  AND durable_writes = true AND PreLoaded = true;

CREATE TABLE dse_system.encrypted_keys (
    key_file text,
    cipher text,
    strength int,
    key_id timeuuid,
    key text,
    PRIMARY KEY (key_file, cipher, strength, key_id)
) WITH CLUSTERING ORDER BY (cipher ASC, strength ASC, key_id ASC)
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = ''
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND dclocal_read_repair_chance = 0.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 0
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99PERCENTILE';

CREATE TABLE dse_system.leases (
    lease_id text PRIMARY KEY,
    duration int,
    generation bigint,
    owner uuid,
    ts timestamp
) WITH bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = ''
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND dclocal_read_repair_chance = 0.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 1209600
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99PERCENTILE';
    
CREATE TABLE dse_system.spark_1_5_master_recovery (
    dc text,
    id text,
    data blob,
    PRIMARY KEY (dc, id)
) WITH read_repair_chance = 0.0
   AND dclocal_read_repair_chance = 0.0
   AND gc_grace_seconds = 1209600
   AND bloom_filter_fp_chance = 0.01
   AND caching = { 'keys' : 'ALL', 'rows_per_partition' : 'NONE' }
   AND comment = ''
   AND compaction = { 'class' : 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold' : 32, 'min_threshold' : 4 }
   AND compression = { 'chunk_length_in_kb' : 64, 'class' : 'org.apache.cassandra.io.compress.LZ4Compressor' }
   AND default_time_to_live = 0
   AND speculative_retry = '99PERCENTILE'
   AND min_index_interval = 128
   AND max_index_interval = 2048
   AND crc_check_chance = 1.0;

CREATE TABLE dse_system.spark_1_3_master_recovery (
    dc text,
    id text,
    data blob,
    PRIMARY KEY (dc, id)
) WITH CLUSTERING ORDER BY (id ASC)
    AND bloom_filter_fp_chance = 0.01
    AND caching = '{"keys":"ALL", "rows_per_partition":"NONE"}'
    AND comment = ''
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'}
    AND compression = {'sstable_compression': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND dclocal_read_repair_chance = 0.1
    AND default_time_to_live = 0
    AND gc_grace_seconds = 864000
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 0
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99.0PERCENTILE';

CREATE TABLE dse_system.registered_leaders (
    army text,
    datacenter text,
    candidates map&lt;text, inet&gt;,
    required text,
    PRIMARY KEY (army, datacenter)
) WITH CLUSTERING ORDER BY (datacenter ASC)
    AND bloom_filter_fp_chance = 0.01
    AND caching = '{"keys":"ALL", "rows_per_partition":"NONE"}'
    AND comment = ''
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'}
    AND compression = {'sstable_compression': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND dclocal_read_repair_chance = 0.1
    AND default_time_to_live = 0
    AND gc_grace_seconds = 864000
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 0
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99.0PERCENTILE';

CREATE TABLE dse_system.real_leaders (
    army text,
    datacenter text,
    address inet,
    PRIMARY KEY (army, datacenter)
) WITH CLUSTERING ORDER BY (datacenter ASC)
    AND bloom_filter_fp_chance = 0.01
    AND caching = '{"keys":"ALL", "rows_per_partition":"NONE"}'
    AND comment = ''
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'}
    AND compression = {'sstable_compression': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND dclocal_read_repair_chance = 0.1
    AND default_time_to_live = 0
    AND gc_grace_seconds = 864000
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 0
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99.0PERCENTILE';

CREATE KEYSPACE "HiveMetaStore" WITH replication = {'class': 'EverywhereStrategy'}  AND durable_writes = true AND PreLoaded = true;

CREATE TABLE "HiveMetaStore"."MetaStore" (
    key text,
    entity text,
    value blob,
    PRIMARY KEY (key, entity)
) WITH COMPACT STORAGE
   AND read_repair_chance = 0.0
   AND dclocal_read_repair_chance = 0.0
   AND gc_grace_seconds = 1209600
   AND bloom_filter_fp_chance = 0.01
   AND caching = { 'keys' : 'ALL', 'rows_per_partition' : 'NONE' }
   AND comment = ''
   AND compaction = { 'class' : 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold' : 32, 'min_threshold' : 4 }
   AND compression = { 'chunk_length_in_kb' : 64, 'class' : 'org.apache.cassandra.io.compress.LZ4Compressor' }
   AND default_time_to_live = 0
   AND speculative_retry = '99PERCENTILE'
   AND min_index_interval = 128
   AND max_index_interval = 2048
   AND crc_check_chance = 1.0;

CREATE TABLE "HiveMetaStore".sparkmetastore (
    key text,
    entity text,
    value blob,
    PRIMARY KEY (key, entity)
) WITH COMPACT STORAGE
   AND read_repair_chance = 0.0
   AND dclocal_read_repair_chance = 0.0
   AND gc_grace_seconds = 1209600
   AND bloom_filter_fp_chance = 0.01
   AND caching = { 'keys' : 'ALL', 'rows_per_partition' : 'NONE' }
   AND comment = ''
   AND compaction = { 'class' : 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold' : 32, 'min_threshold' : 4 }
   AND compression = { 'chunk_length_in_kb' : 64, 'class' : 'org.apache.cassandra.io.compress.LZ4Compressor' }
   AND default_time_to_live = 0
   AND speculative_retry = '99PERCENTILE'
   AND min_index_interval = 128
   AND max_index_interval = 2048
   AND crc_check_chance = 1.0;

CREATE KEYSPACE cfs_archive WITH replication = {'class': 'EverywhereStrategy'}  AND durable_writes = true AND PreLoaded = true;

CREATE TABLE cfs_archive.inode (
    key blob,
    "b@706172656e745f70617468" blob,
    "b@70617468" blob,
    "b@73656e74696e656c" blob,
    PRIMARY KEY (key)
) WITH COMPACT STORAGE
   AND read_repair_chance = 0.0
   AND dclocal_read_repair_chance = 0.1
   AND gc_grace_seconds = 864000
   AND bloom_filter_fp_chance = 0.01
   AND caching = { 'keys' : 'ALL', 'rows_per_partition' : 'NONE' }
   AND comment = 'Stores file meta data'
   AND compaction = { 'class' : 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold' : 32, 'min_threshold' : 4 }
   AND compression = { 'chunk_length_in_kb' : 64, 'class' : 'org.apache.cassandra.io.compress.LZ4Compressor' }
   AND default_time_to_live = 0
   AND speculative_retry = 'NONE'
   AND min_index_interval = 128
   AND max_index_interval = 2048
   AND crc_check_chance = 1.0;
CREATE INDEX cfs_archive_parent_path ON cfs_archive.inode ("b@706172656e745f70617468");
CREATE INDEX cfs_archive_path ON cfs_archive.inode ("b@70617468");
CREATE INDEX cfs_archive_sentinel ON cfs_archive.inode ("b@73656e74696e656c");

CREATE TABLE cfs_archive.sblocks (
    key blob,
    column1 blob,
    value blob,
    PRIMARY KEY (key, column1)
) WITH COMPACT STORAGE
   AND read_repair_chance = 0.0
   AND dclocal_read_repair_chance = 0.1
   AND gc_grace_seconds = 864000
   AND bloom_filter_fp_chance = 6.8E-5
   AND caching = { 'keys' : 'ALL', 'rows_per_partition' : 'NONE' }
   AND comment = 'Stores blocks of information associated with a inode'
   AND compaction = { 'class' : 'com.datastax.bdp.hadoop.cfs.compaction.CFSCompactionStrategy', 'max_threshold' : 64, 'min_threshold' : 2 }
   AND compression = { 'enabled' : 'false' }
   AND default_time_to_live = 0
   AND speculative_retry = 'NONE'
   AND min_index_interval = 128
   AND max_index_interval = 2048
   AND crc_check_chance = 1.0;

CREATE TABLE cfs_archive.cleanup (
    key blob,
    column1 blob,
    value blob,
    PRIMARY KEY (key, column1)
) WITH COMPACT STORAGE
   AND read_repair_chance = 0.0
   AND dclocal_read_repair_chance = 0.1
   AND gc_grace_seconds = 864000
   AND bloom_filter_fp_chance = 0.01
   AND caching = { 'keys' : 'ALL', 'rows_per_partition' : 'NONE' }
   AND comment = 'Stores blocks row key to perform a cleanup for when jobs fail'
   AND compaction = { 'class' : 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold' : 32, 'min_threshold' : 4 }
   AND compression = { 'chunk_length_in_kb' : 64, 'class' : 'org.apache.cassandra.io.compress.LZ4Compressor' }
   AND default_time_to_live = 0
   AND speculative_retry = 'NONE'
   AND min_index_interval = 128
   AND max_index_interval = 2048
   AND crc_check_chance = 1.0;

CREATE TABLE cfs_archive.rules (
    key text,
    compression boolean,
    priority int,
    PRIMARY KEY (key)
) WITH COMPACT STORAGE
   AND read_repair_chance = 0.0
   AND dclocal_read_repair_chance = 0.1
   AND gc_grace_seconds = 864000
   AND bloom_filter_fp_chance = 0.01
   AND caching = { 'keys' : 'ALL', 'rows_per_partition' : 'NONE' }
   AND comment = 'Stores properties associated with groups of files and directories selected by path patterns'
   AND compaction = { 'class' : 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold' : 32, 'min_threshold' : 4 }
   AND compression = { 'chunk_length_in_kb' : 64, 'class' : 'org.apache.cassandra.io.compress.LZ4Compressor' }
   AND default_time_to_live = 0
   AND speculative_retry = 'NONE'
   AND min_index_interval = 128
   AND max_index_interval = 2048
   AND crc_check_chance = 1.0;
    
CREATE KEYSPACE "OpsCenter" WITH replication = {'class': 'EverywhereStrategy'}  AND durable_writes = true AND PreLoaded = true;

CREATE TABLE "OpsCenter".bestpractice_results (
    key text,
    column1 varint,
    value blob,
    PRIMARY KEY (key, column1)
) WITH COMPACT STORAGE
   AND CLUSTERING ORDER BY (column1 DESC)
   AND read_repair_chance = 0.25
   AND dclocal_read_repair_chance = 0.1
   AND gc_grace_seconds = 0
   AND bloom_filter_fp_chance = 0.01
   AND caching = { 'keys' : 'ALL', 'rows_per_partition' : 'NONE' }
   AND comment = '{"version": [6, 1, 4], "info": "OpsCenter management data."}'
   AND compaction = { 'class' : 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold' : 32, 'min_threshold' : 4 }
   AND compression = { 'chunk_length_in_kb' : 64, 'class' : 'org.apache.cassandra.io.compress.LZ4Compressor' }
   AND default_time_to_live = 0
   AND speculative_retry = '99PERCENTILE'
   AND min_index_interval = 128
   AND max_index_interval = 2048
   AND crc_check_chance = 1.0;

CREATE TABLE "OpsCenter".rollup_state (
    node text,
    name text,
    res int,
    avg float,
    histogram blob,
    max float,
    min float,
    ts timestamp,
    type int,
    value float,
    weight float,
    PRIMARY KEY (node, name, res)
) WITH read_repair_chance = 0.0
   AND dclocal_read_repair_chance = 0.0
   AND gc_grace_seconds = 0
   AND bloom_filter_fp_chance = 0.1
   AND caching = { 'keys' : 'ALL', 'rows_per_partition' : 'NONE' }
   AND comment = '{"version": [6, 1, 4], "info": "OpsCenter management data."}'
   AND compaction = { 'class' : 'org.apache.cassandra.db.compaction.LeveledCompactionStrategy' }
   AND compression = { 'chunk_length_in_kb' : 64, 'class' : 'org.apache.cassandra.io.compress.LZ4Compressor' }
   AND default_time_to_live = 0
   AND speculative_retry = '99PERCENTILE'
   AND min_index_interval = 128
   AND max_index_interval = 2048
   AND crc_check_chance = 1.0;

CREATE TABLE "OpsCenter".settings (
    key blob,
    column1 blob,
    value blob,
    PRIMARY KEY (key, column1)
) WITH COMPACT STORAGE
   AND read_repair_chance = 1.0
   AND dclocal_read_repair_chance = 0.1
   AND gc_grace_seconds = 864000
   AND bloom_filter_fp_chance = 0.01
   AND caching = { 'keys' : 'ALL', 'rows_per_partition' : 'NONE' }
   AND comment = '{"version": [6, 1, 4], "info": "OpsCenter management data."}'
   AND compaction = { 'class' : 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold' : 12, 'min_threshold' : 8 }
   AND compression = { 'chunk_length_in_kb' : 64, 'class' : 'org.apache.cassandra.io.compress.LZ4Compressor' }
   AND default_time_to_live = 0
   AND speculative_retry = '99PERCENTILE'
   AND min_index_interval = 128
   AND max_index_interval = 2048
   AND crc_check_chance = 1.0;

CREATE TABLE "OpsCenter".pdps (
    key text,
    column1 text,
    value blob,
    PRIMARY KEY (key, column1)
) WITH COMPACT STORAGE
   AND read_repair_chance = 0.25
   AND dclocal_read_repair_chance = 0.1
   AND gc_grace_seconds = 0
   AND bloom_filter_fp_chance = 0.01
   AND caching = { 'keys' : 'ALL', 'rows_per_partition' : 'NONE' }
   AND comment = '{"version": [6, 1, 4], "info": "OpsCenter management data."}'
   AND compaction = { 'class' : 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold' : 32, 'min_threshold' : 4 }
   AND compression = { 'chunk_length_in_kb' : 64, 'class' : 'org.apache.cassandra.io.compress.LZ4Compressor' }
   AND default_time_to_live = 0
   AND speculative_retry = '99PERCENTILE'
   AND min_index_interval = 128
   AND max_index_interval = 2048
   AND crc_check_chance = 1.0;

CREATE TABLE "OpsCenter".rollups7200 (
    key text,
    timestamp varint,
    value blob,
    PRIMARY KEY (key, timestamp)
) WITH COMPACT STORAGE
   AND read_repair_chance = 0.25
   AND dclocal_read_repair_chance = 0.1
   AND gc_grace_seconds = 0
   AND bloom_filter_fp_chance = 0.01
   AND caching = { 'keys' : 'ALL', 'rows_per_partition' : 'NONE' }
   AND comment = '{"version": [6, 1, 4], "info": "OpsCenter management data."}'
   AND compaction = { 'class' : 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold' : 8, 'min_threshold' : 2 }
   AND compression = { 'chunk_length_in_kb' : 64, 'class' : 'org.apache.cassandra.io.compress.LZ4Compressor' }
   AND default_time_to_live = 0
   AND speculative_retry = '99PERCENTILE'
   AND min_index_interval = 128
   AND max_index_interval = 2048
   AND crc_check_chance = 1.0;

CREATE TABLE "OpsCenter".rollups86400 (
    key text,
    timestamp varint,
    value blob,
    PRIMARY KEY (key, timestamp)
) WITH COMPACT STORAGE
   AND read_repair_chance = 0.25
   AND dclocal_read_repair_chance = 0.1
   AND gc_grace_seconds = 0
   AND bloom_filter_fp_chance = 0.01
   AND caching = { 'keys' : 'ALL', 'rows_per_partition' : 'NONE' }
   AND comment = '{"version": [6, 1, 4], "info": "OpsCenter management data."}'
   AND compaction = { 'class' : 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold' : 8, 'min_threshold' : 2 }
   AND compression = { 'chunk_length_in_kb' : 64, 'class' : 'org.apache.cassandra.io.compress.LZ4Compressor' }
   AND default_time_to_live = 0
   AND speculative_retry = '99PERCENTILE'
   AND min_index_interval = 128
   AND max_index_interval = 2048
   AND crc_check_chance = 1.0;

CREATE TABLE "OpsCenter".backup_reports (
    week text,
    event_time timestamp,
    backup_id text,
    type text,
    destination text,
    deleted_at timestamp,
    full_status text,
    "keyspaces" text,
    status text,
    PRIMARY KEY (week, event_time, backup_id, type, destination)
) WITH CLUSTERING ORDER BY (event_time DESC, backup_id ASC, type ASC, destination ASC)
   AND read_repair_chance = 0.0
   AND dclocal_read_repair_chance = 0.1
   AND gc_grace_seconds = 864000
   AND bloom_filter_fp_chance = 0.01
   AND caching = { 'keys' : 'ALL', 'rows_per_partition' : 'NONE' }
   AND comment = '{"version": [6, 1, 4], "info": "OpsCenter management data."}'
   AND compaction = { 'class' : 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold' : 32, 'min_threshold' : 4 }
   AND compression = { 'chunk_length_in_kb' : 64, 'class' : 'org.apache.cassandra.io.compress.LZ4Compressor' }
   AND default_time_to_live = 0
   AND speculative_retry = '99PERCENTILE'
   AND min_index_interval = 128
   AND max_index_interval = 2048
   AND crc_check_chance = 1.0;

CREATE TABLE "OpsCenter".events_timeline (
    key text,
    column1 bigint,
    value blob,
    PRIMARY KEY (key, column1)
) WITH COMPACT STORAGE
   AND read_repair_chance = 0.25
   AND dclocal_read_repair_chance = 0.1
   AND gc_grace_seconds = 864000
   AND bloom_filter_fp_chance = 0.01
   AND caching = { 'keys' : 'ALL', 'rows_per_partition' : 'NONE' }
   AND comment = '{"version": [6, 1, 4], "info": "OpsCenter management data."}'
   AND compaction = { 'class' : 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold' : 8, 'min_threshold' : 4 }
   AND compression = { 'chunk_length_in_kb' : 64, 'class' : 'org.apache.cassandra.io.compress.LZ4Compressor' }
   AND default_time_to_live = 0
   AND speculative_retry = '99PERCENTILE'
   AND min_index_interval = 128
   AND max_index_interval = 2048
   AND crc_check_chance = 1.0;

CREATE TABLE "OpsCenter".rollups60 (
    key text,
    timestamp varint,
    value blob,
    PRIMARY KEY (key, timestamp)
) WITH COMPACT STORAGE
   AND read_repair_chance = 0.25
   AND dclocal_read_repair_chance = 0.1
   AND gc_grace_seconds = 0
   AND bloom_filter_fp_chance = 0.01
   AND caching = { 'keys' : 'ALL', 'rows_per_partition' : 'NONE' }
   AND comment = '{"version": [6, 1, 4], "info": "OpsCenter management data."}'
   AND compaction = { 'class' : 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold' : 32, 'min_threshold' : 4 }
   AND compression = { 'chunk_length_in_kb' : 64, 'class' : 'org.apache.cassandra.io.compress.LZ4Compressor' }
   AND default_time_to_live = 0
   AND speculative_retry = '99PERCENTILE'
   AND min_index_interval = 128
   AND max_index_interval = 2048
   AND crc_check_chance = 1.0;

CREATE TABLE "OpsCenter".events (
    key text,
    action bigint,
    api_source_ip text,
    column_family text,
    event_source text,
    "keyspace" text,
    level bigint,
    message text,
    source_node text,
    success boolean,
    target_node text,
    time bigint,
    user text,
    PRIMARY KEY (key)
) WITH COMPACT STORAGE
   AND read_repair_chance = 0.25
   AND dclocal_read_repair_chance = 0.1
   AND gc_grace_seconds = 864000
   AND bloom_filter_fp_chance = 0.01
   AND caching = { 'keys' : 'ALL', 'rows_per_partition' : 'NONE' }
   AND comment = '{"version": [6, 1, 4], "info": "OpsCenter management data."}'
   AND compaction = { 'class' : 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold' : 12, 'min_threshold' : 8 }
   AND compression = { 'chunk_length_in_kb' : 64, 'class' : 'org.apache.cassandra.io.compress.LZ4Compressor' }
   AND default_time_to_live = 0
   AND speculative_retry = '99PERCENTILE'
   AND min_index_interval = 128
   AND max_index_interval = 2048
   AND crc_check_chance = 1.0;

CREATE TABLE "OpsCenter".rollups300 (
    key text,
    timestamp varint,
    value blob,
    PRIMARY KEY (key, timestamp)
) WITH COMPACT STORAGE
   AND read_repair_chance = 0.25
   AND dclocal_read_repair_chance = 0.1
   AND gc_grace_seconds = 0
   AND bloom_filter_fp_chance = 0.01
   AND caching = { 'keys' : 'ALL', 'rows_per_partition' : 'NONE' }
   AND comment = '{"version": [6, 1, 4], "info": "OpsCenter management data."}'
   AND compaction = { 'class' : 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold' : 16, 'min_threshold' : 4 }
   AND compression = { 'chunk_length_in_kb' : 64, 'class' : 'org.apache.cassandra.io.compress.LZ4Compressor' }
   AND default_time_to_live = 0
   AND speculative_retry = '99PERCENTILE'
   AND min_index_interval = 128
   AND max_index_interval = 2048
   AND crc_check_chance = 1.0;</value>
            </setting>
            <setting name="IgnoreFileWExtensions" serializeAs="Xml">
                <value>
                    <ArrayOfString xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema">
                        <string>.extracted</string>
                        <string>.ignore</string>
                    </ArrayOfString>
                </value>
            </setting>
            <setting name="DetectDuplicatedLogEvents" serializeAs="String">
                <value>True</value>
            </setting>
            <setting name="LogExceptionRegExMatches" serializeAs="String">
                <value>(?&lt;PATH&gt;/[^ \]}),]{3,})|(?&lt;NODE&gt;\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}(?::\d+)?)|(?&lt;NODE&gt;(?:[0-9a-f/]+::?){2,}[0-9a-f/]+)|(?&lt;NODE&gt;::[0-9a-f/]+)|(?&lt;NODE&gt;\[(?:[0-9a-f/]+::?)+\{2,}[0-9a-f/]+\]:\d+)|(?:consistency\s+level\s+(?&lt;consistencylevel&gt;[a-z\-_]+))|(?:timeout\:?\s+(?&lt;timeout&gt;[0-9,.\-]+))|(?:sstable\s*(?&lt;SSTABLEPATH&gt;[a-z0-9\-_@#/.,\\ +%]+)[\]})]?)|(?:executing\s+query\s+(?&lt;cql&gt;.+)|(?:(?:\s+|\#)(?&lt;ID&gt;[0-9a-f]{8}\-[0-9a-f]{4}\-[0-9a-f]{4}\-[0-9a-f]{4}\-[0-9a-f]{12})(?:\s|\]))|(?:\s?(?&lt;TOKENRANGE&gt;\(\-?[0-9]+\,\-?[0-9]+\])\,?)|(?:id\:\s+(?&lt;CHANNELID&gt;0x[0-9a-f]+)))</value>
            </setting>
            <setting name="DefaultLogLevelHandling" serializeAs="String">
                <value>Warning, Error, Fatal, Exception</value>
            </setting>
            <setting name="RegExLexiconValues" serializeAs="String">
                <value>[
{"Key":"ID","Value":"[0-9a-f\\-]+"},
{"Key":"DURATION","Value":"[0-9,.]+"},
{"Key":"DURATIONwUOM","Value":"(?&lt;DURATION&gt;[0-9,.]+\\s*\\w+)"},
{"Key":"KEYSPACE","Value":"[a-z0-9'\\-_$%+=!?&lt;&gt;^*&amp;@]+"},
{"Key":"DDLITEMNAME","Value":"[a-z0-9'\\-_$%+=!?&lt;&gt;^*&amp;@/.]+"},
{"Key":"DDLITEMNAMES","Value":"[a-z0-9'\\-_$%+=!?&lt;&gt;^*&amp;@/. ,]*"},
{"Key":"TABLEVIEWNAME","Value":"[a-z0-9'\\-_$%+=!?&lt;&gt;^*&amp;@/.]+"},
{"Key":"DDLITEM","Value":"[^ ]+"},
{"Key":"DDLSCHEMAID","Value":"[0-9a-f\\-]+"},
{"Key":"SSTABLEPATH","Value":"[a-z0-9\\-_@#/.\\ +%]+"},
{"Key":"SSTABLEPATHS","Value":"[a-z0-9\\-_@#/.,\\ +%]*"},
{"Key":"NODE","Value":"[^ ]+"},
{"Key":"SOLRINDEXNAME","Value":"[a-z0-9'\\-_$%+=!?&lt;&gt;^*&amp;@/.]+"},
{"Key":"CQLSELECT","Value":"select\\s+(?&lt;querycols&gt;.+)\\s+from\\s+(?&lt;TABLEVIEWNAME&gt;[a-z0-9'\\-_$%+=!?&lt;&gt;^*&amp;@/.]+)(?:\\s+where\\s+(?&lt;whereclause&gt;.+?))??(?:\\s+order\\s+by\\s+(?&lt;orderbycols&gt;.+?))??(?:\\s+limit\\s+(?&lt;limit&gt;\\d+?))??(?&lt;allowfiltering&gt;\\s+allow\\s+filtering)??"}
]</value>
            </setting>
            <setting name="DebugLogProcessing" serializeAs="String">
                <value>Auto,OnlyFlushCompactionMsgs</value>
            </setting>
            <setting name="DebugFlushCompCLogLineTags" serializeAs="String">
                <value>1.*, 2.*</value>
            </setting>
            <setting name="LogCheckOverlappingDateRange" serializeAs="String">
                <value>True</value>
            </setting>
            <setting name="IgnoreWarningsErrosInKeySpaces" serializeAs="Xml">
                <value>
                    <ArrayOfString xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema">
                        <string>dse_system</string>
                        <string>system_auth</string>
                        <string>system_distributed</string>
                        <string>system_schema</string>
                        <string>system</string>
                        <string>dse_security</string>
                        <string>solr_admin</string>
                        <string>dse_auth</string>
                        <string>dse_leases</string>
                        <string>system_traces</string>
                        <string>dse_perf</string>
                        <string>HiveMetaStore</string>
                        <string>cfs_archive</string>
                        <string>cfs</string>
                    </ArrayOfString>
                </value>
            </setting>
            <setting name="MasterLog4NetParser" serializeAs="String">
                <value>.\Log4NetParser.json,.\Json\Log4NetParser.json,[cpld]\Json\Log4NetParser.json,[cpld]\Log4NetParser.json,[ApplicationRunTimeDirectory]\Json\Log4NetParser.json,[ApplicationRunTimeDirectory]\Log4NetParser.json,.\Log4NetParser.json,.\Json\Log4NetParser.json</value>
            </setting>
            <setting name="CaptureTimeFrameRegEx" serializeAs="String">
                <value>-(?&lt;year&gt;\d{1,4})-(?&lt;month&gt;\d{1,2})-(?&lt;day&gt;\d{1,2})-(?&lt;hour&gt;\d{1,2})-(?&lt;min&gt;\d{1,2})-(?&lt;second&gt;\d{1,2})-(?&lt;timezone&gt;\w+)</value>
            </setting>
            <setting name="ClusterCaptureTimeFrameRegEx" serializeAs="String">
                <value>(?&lt;cluster&gt;.+)-diagnostics-(?&lt;year&gt;\d{2,4})_(?&lt;month&gt;\d{1,2})_(?&lt;day&gt;\d{1,2})_(?&lt;hour&gt;\d{1,2})_(?&lt;min&gt;\d{1,2})_(?&lt;second&gt;\d{1,2})_(?&lt;timezone&gt;\w+)</value>
            </setting>
            <setting name="UnknownDCSuffix" serializeAs="String">
                <value>(?)</value>
            </setting>
            <setting name="IgnoreIP6AddressRegEx" serializeAs="String">
                <value>^f(?:e|f)\d+::\d+$</value>
            </setting>
            <setting name="LogIgnoreParsingErrors" serializeAs="String">
                <value>False</value>
            </setting>
            <setting name="CFStatsDetectWriteActivityAttr" serializeAs="String">
                <value>Local write count</value>
            </setting>
            <setting name="CFStatsDetectReadActivityAttr" serializeAs="String">
                <value>Local read count</value>
            </setting>
        </DSEDiagnosticFileParser.Properties.Settings>
    </applicationSettings>
</configuration>